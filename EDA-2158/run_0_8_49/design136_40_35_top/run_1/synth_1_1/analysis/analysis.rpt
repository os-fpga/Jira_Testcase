/*******************************************************************************
Copyright (c) 2022 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.

Portions of Raptor Design Suite are utilized under the following third-party copyright notices:

Parallax Static Timing Analyzer Copyright (c) 2021, Parallax Software, Inc. All rights reserved.
*********************************************************************************/

Version  : 2023.11
Build    : 0.8.49
Hash     : 0b92bac
Date     : Nov  2 2023
Type     : Engineering
Log Time   : Thu Nov  2 13:15:43 2023 GMT
/*******************************************************************************
Copyright (c) 2022 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.

Portions of Raptor Design Suite are utilized under the following third-party copyright notices:

Parallax Static Timing Analyzer Copyright (c) 2021, Parallax Software, Inc. All rights reserved.
*********************************************************************************/

Version  : 2023.11
Build    : 0.8.49
Hash     : 0b92bac
Date     : Nov  2 2023
Type     : Engineering
Log Time   : Thu Nov  2 13:15:43 2023 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 38b76d034, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/design136_40_35_top/run_1/synth_1_1/analysis/design136_40_35_top_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/11_02_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/11_02_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/design136_40_35_top/run_1/synth_1_1/analysis/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/decoder.v:25:1: Compile module "work@decoder".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/decoder.v:3:1: Compile module "work@decoder_top".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/design136_40_35_top.v:151:1: Compile module "work@design136_40_35".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/design136_40_35_top.v:5:1: Compile module "work@design136_40_35_top".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/mod_n_counter.v:1:1: Compile module "work@mod_n_counter".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/parity_generator.v:28:1: Compile module "work@paritygenerator".
[INF:CP0303] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/parity_generator.v:3:1: Compile module "work@paritygenerator_top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[NTE:CP0309] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/decoder.v:3:59: Implicit port type (wire) for "data_out".
[NTE:CP0309] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/design136_40_35_top.v:151:357: Implicit port type (wire) for "d_out0",
there are 39 more instances of this message.
[NTE:CP0309] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/design136_40_35_top.v:5:76: Implicit port type (wire) for "out".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/test/ArchBench/Testcases/design136_40_35_top/test/rtl/design136_40_35_top.v:5:1: Top level module "work@design136_40_35_top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 4.
[NTE:EL0510] Nb instances: 2331.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 8
Warning: Removing unelaborated module: \decoder from the design.
Warning: Removing unelaborated module: \decoder_top from the design.
Warning: Removing unelaborated module: \mod_n_counter from the design.
Warning: Removing unelaborated module: \design136_40_35 from the design.
Warning: Removing unelaborated module: \paritygenerator from the design.
Warning: Removing unelaborated module: \paritygenerator_top from the design.
Generating RTLIL representation for module `$paramod$b3c2c62c81d2b2d531442022b621b6dd55398e8c\mod_n_counter'.
Generating RTLIL representation for module `$paramod\design136_40_35\WIDTH=32'00000000000000000000000000100000'.
Generating RTLIL representation for module `$paramod\decoder_top\WIDTH=32'00000000000000000000000000100000'.
Generating RTLIL representation for module `\design136_40_35_top'.
Generating RTLIL representation for module `$paramod\paritygenerator_top\WIDTH=32'00000000000000000000000000100000'.
Generating RTLIL representation for module `$paramod\paritygenerator\WIDTH=32'00000000000000000000000000100000'.
Generating RTLIL representation for module `$paramod\decoder\WIDTH=32'00000000000000000000000000100000'.

-- Running command `hierarchy -top design136_40_35_top' --

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \design136_40_35_top
Used module:     $paramod\design136_40_35\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod$b3c2c62c81d2b2d531442022b621b6dd55398e8c\mod_n_counter

3.2. Analyzing design hierarchy..
Top module:  \design136_40_35_top
Used module:     $paramod\design136_40_35\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod\paritygenerator_top\WIDTH=32'00000000000000000000000000100000
Used module:             $paramod\paritygenerator\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod\decoder_top\WIDTH=32'00000000000000000000000000100000
Used module:             $paramod\decoder\WIDTH=32'00000000000000000000000000100000
Used module:         $paramod$b3c2c62c81d2b2d531442022b621b6dd55398e8c\mod_n_counter
Removed 0 unused modules.

Dumping file hier_info.json ...
 Process module "$paramod$b3c2c62c81d2b2d531442022b621b6dd55398e8c\\mod_n_counter"
 Process module "$paramod\\decoder\\WIDTH=32'00000000000000000000000000100000"
 Process module "$paramod\\decoder_top\\WIDTH=32'00000000000000000000000000100000"
 Process module "$paramod\\design136_40_35\\WIDTH=32'00000000000000000000000000100000"
 Process module "$paramod\\paritygenerator\\WIDTH=32'00000000000000000000000000100000"
 Process module "$paramod\\paritygenerator_top\\WIDTH=32'00000000000000000000000000100000"
Dumping file port_info.json ...

Warnings: 6 unique messages, 6 total
End of script. Logfile hash: 57cfa418f3, CPU: user 3.85s system 0.11s, MEM: 143.87 MB peak
Yosys 0.18+10 (git sha1 38b76d034, gcc 11.2.1 -fPIC -Os)
Time spent: 98% 2x read_systemverilog (3 sec), 0% 2x read_verilog (0 sec), ...
