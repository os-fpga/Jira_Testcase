
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 611c05348, gcc 11.2.1 -fPIC -Os)


-- Executing script file `filt_mac_iverilog.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\IO_BUF'.
Generating RTLIL representation for module `\IO_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\latch'.
Generating RTLIL representation for module `\latchn'.
Generating RTLIL representation for module `\latchr'.
Generating RTLIL representation for module `\latchnr'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_GPIO'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\soc_fpga_intf'.
Generating RTLIL representation for module `\FIFO18K'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v' to AST representation.
Generating RTLIL representation for module `\filt_mac_iverilog'.
Warning: Replacing memory \r_delay_line with list of registers. See /nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:49
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog

3.2. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog
Removed 0 unused modules.

4. Executing synth_rs pass: v0.4.194

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v:11.1-30.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v:37.1-56.10.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\adder_carry'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v' to AST representation.
Replacing existing blackbox module `\RS_DSP' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:12.1-90.10.
Generating RTLIL representation for module `\RS_DSP'.
Replacing existing blackbox module `\RS_DSP_MULT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:93.1-125.10.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:128.1-166.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULT_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:169.1-207.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULT_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:210.1-248.10.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:251.1-304.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:308.1-362.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:366.1-418.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTADD_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:422.1-477.10.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:480.1-527.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:530.1-582.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:586.1-638.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Replacing existing blackbox module `\RS_DSP_MULTACC_REGIN_REGOUT' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v:642.1-695.10.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:7.1-12.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:15.1-20.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:23.1-28.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:31.1-36.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:39.1-44.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v:47.1-52.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\RS_TDP36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:113.1-641.10.
Generating RTLIL representation for module `\RS_TDP36K'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:642.1-1070.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:1072.1-1481.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:1483.1-1886.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.7. Executing HIERARCHY pass (managing design hierarchy).

4.7.1. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog

4.7.2. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog
Removed 0 unused modules.

4.8. Executing PROC pass (convert processes to netlists).

4.8.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.8.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$37 in module filt_mac_iverilog.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$34 in module filt_mac_iverilog.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$31 in module filt_mac_iverilog.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$28 in module filt_mac_iverilog.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19 in module filt_mac_iverilog.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17 in module filt_mac_iverilog.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9 in module filt_mac_iverilog.
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7 in module filt_mac_iverilog.
Removed a total of 0 dead cases.

4.8.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 5 assignments to connections.

4.8.4. Executing PROC_INIT pass (extract init attributes).

4.8.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \i_rst_an in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19'.
Found async reset \i_rst_an in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17'.
Found async reset \i_rst_an in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9'.
Found async reset \i_rst_an in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.

4.8.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~12 debug messages>

4.8.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$37'.
     1/1: $1$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$6_DATA[7:0]$39
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$34'.
     1/1: $1$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$5_DATA[7:0]$36
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$31'.
     1/1: $1$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:81$4_DATA[7:0]$33
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$28'.
     1/1: $1$mem2reg_rd$\c_coeff$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:92$3_DATA[11:0]$30
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19'.
     1/1: $0\r_data[36:0]
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17'.
     1/1: $0\r_add_oup[36:0]
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9'.
     1/1: $0\r_count_coeff[3:0]
Creating decoders for process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
     1/20: $3\i[31:0]
     2/20: $2\i[31:0]
     3/20: $1\i[31:0]
     4/20: $0\r_delay_line[16][7:0]
     5/20: $0\r_delay_line[15][7:0]
     6/20: $0\r_delay_line[14][7:0]
     7/20: $0\r_delay_line[13][7:0]
     8/20: $0\r_delay_line[12][7:0]
     9/20: $0\r_delay_line[11][7:0]
    10/20: $0\r_delay_line[10][7:0]
    11/20: $0\r_delay_line[9][7:0]
    12/20: $0\r_delay_line[8][7:0]
    13/20: $0\r_delay_line[7][7:0]
    14/20: $0\r_delay_line[6][7:0]
    15/20: $0\r_delay_line[5][7:0]
    16/20: $0\r_delay_line[4][7:0]
    17/20: $0\r_delay_line[3][7:0]
    18/20: $0\r_delay_line[2][7:0]
    19/20: $0\r_delay_line[1][7:0]
    20/20: $0\r_delay_line[0][7:0]

4.8.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\filt_mac_iverilog.$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$6_DATA' from process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$37'.
No latch inferred for signal `\filt_mac_iverilog.$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$5_DATA' from process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$34'.
No latch inferred for signal `\filt_mac_iverilog.$mem2reg_rd$\r_delay_line$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:81$4_DATA' from process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$31'.
No latch inferred for signal `\filt_mac_iverilog.$mem2reg_rd$\c_coeff$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:92$3_DATA' from process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$28'.

4.8.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\filt_mac_iverilog.\r_data' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19'.
  created $adff cell `$procdff$234' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_add_oup' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17'.
  created $adff cell `$procdff$235' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_count_coeff' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9'.
  created $adff cell `$procdff$236' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\i' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$237' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[0]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$238' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[1]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$239' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[2]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$240' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[3]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$241' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[4]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$242' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[5]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$243' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[6]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$244' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[7]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$245' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[8]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$246' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[9]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$247' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[10]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$248' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[11]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$249' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[12]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$250' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[13]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$251' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[14]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$252' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[15]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$253' with positive edge clock and negative level reset.
Creating register for signal `\filt_mac_iverilog.\r_delay_line[16]' using process `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
  created $adff cell `$procdff$254' with positive edge clock and negative level reset.

4.8.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.8.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$37'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$37'.
Found and cleaned up 1 empty switch in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$34'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$34'.
Found and cleaned up 1 empty switch in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$31'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$31'.
Found and cleaned up 1 empty switch in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$28'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:0$28'.
Found and cleaned up 2 empty switches in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:115$19'.
Found and cleaned up 2 empty switches in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:101$17'.
Found and cleaned up 2 empty switches in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:63$9'.
Found and cleaned up 2 empty switches in `\filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
Removing empty process `filt_mac_iverilog.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:44$7'.
Cleaned up 12 empty switches.

4.8.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~5 debug messages>

4.9. Executing DEMUXMAP pass.

4.10. Executing FLATTEN pass (flatten design).

4.11. Executing DEMUXMAP pass.

4.12. Executing TRIBUF pass.

4.13. Executing TRIBUF pass.

4.14. Executing DEMINOUT pass (demote inout ports to input or output).

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 8 unused cells and 96 unused wires.
<suppressed ~11 debug messages>

4.17. Executing CHECK pass (checking for obvious problems).
Checking module filt_mac_iverilog...
Warning: Wire filt_mac_iverilog.\c_coeff[0] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[0] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[1] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[2] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[3] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[4] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[5] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[6] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[7] [0] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [11] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [10] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [9] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [8] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [7] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [6] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [5] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [4] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [3] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [2] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [1] is used but has no driver.
Warning: Wire filt_mac_iverilog.\c_coeff[8] [0] is used but has no driver.
Found and reported 108 problems.

4.18. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                153
   Number of wire bits:           1060
   Number of public wires:          40
   Number of public wire bits:     450
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                136
     $add                            3
     $adff                          20
     $eq                            57
     $ge                             1
     $logic_not                      4
     $lt                             2
     $mul                            1
     $mux                           43
     $pmux                           4
     $sub                            1

4.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~2 debug messages>

4.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~75 debug messages>
Removed a total of 25 cells.

4.21. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/18 on $pmux $procmux$61.
    dead port 1/18 on $pmux $procmux$80.
    dead port 2/18 on $pmux $procmux$80.
    dead port 3/18 on $pmux $procmux$80.
    dead port 4/18 on $pmux $procmux$80.
    dead port 5/18 on $pmux $procmux$80.
    dead port 6/18 on $pmux $procmux$80.
    dead port 7/18 on $pmux $procmux$80.
    dead port 8/18 on $pmux $procmux$80.
    dead port 10/18 on $pmux $procmux$80.
    dead port 11/18 on $pmux $procmux$80.
    dead port 12/18 on $pmux $procmux$80.
    dead port 13/18 on $pmux $procmux$80.
    dead port 14/18 on $pmux $procmux$80.
    dead port 15/18 on $pmux $procmux$80.
    dead port 16/18 on $pmux $procmux$80.
    dead port 17/18 on $pmux $procmux$80.
    dead port 18/18 on $pmux $procmux$80.
Removed 18 multiplexer ports.
<suppressed ~25 debug messages>

4.22. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.23. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.24. Executing OPT_SHARE pass.

4.25. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

4.27. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

4.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.31. Executing OPT_SHARE pass.

4.32. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 2

4.35. Executing FSM pass (extract and optimize FSM).

4.35.1. Executing FSM_DETECT pass (finding FSMs in design).

4.35.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.35.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.35.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.35.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.35.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.35.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.36. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 bits (of 32) from port B of cell filt_mac_iverilog.$lt$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:69$11 ($lt).
Removed top 28 bits (of 32) from port B of cell filt_mac_iverilog.$lt$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:92$13 ($lt).
Removed top 20 bits (of 32) from mux cell filt_mac_iverilog.$ternary$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:92$14 ($mux).
Removed top 11 bits (of 20) from port A of cell filt_mac_iverilog.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:95$15 ($mul).
Removed top 8 bits (of 20) from port B of cell filt_mac_iverilog.$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:95$15 ($mul).
Removed top 17 bits (of 37) from port A of cell filt_mac_iverilog.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:98$16 ($add).
Removed top 28 bits (of 32) from port B of cell filt_mac_iverilog.$ge$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:127$21 ($ge).
Removed top 1 bits (of 9) from port A of cell filt_mac_iverilog.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$25 ($add).
Removed top 1 bits (of 9) from port B of cell filt_mac_iverilog.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$25 ($add).
Removed top 27 bits (of 32) from port A of cell filt_mac_iverilog.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$40 ($sub).
Removed top 27 bits (of 32) from port Y of cell filt_mac_iverilog.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:83$40 ($sub).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$44_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$45_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$46_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$47_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$48_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$49_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$50_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$51_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$52_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$53_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$54_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$55_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$56_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$57_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell filt_mac_iverilog.$procmux$58_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$101_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$102_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$103_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$104_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$105_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$106_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell filt_mac_iverilog.$procmux$107_CMP0 ($eq).

4.37. Executing PEEPOPT pass (run peephole optimizers).

4.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~25 debug messages>

4.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.44. Executing OPT_SHARE pass.

4.45. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$254 ($adff) from module filt_mac_iverilog (D = \r_delay_line[15], Q = \r_delay_line[16]).
Adding EN signal on $procdff$253 ($adff) from module filt_mac_iverilog (D = \r_delay_line[14], Q = \r_delay_line[15]).
Adding EN signal on $procdff$252 ($adff) from module filt_mac_iverilog (D = \r_delay_line[13], Q = \r_delay_line[14]).
Adding EN signal on $procdff$251 ($adff) from module filt_mac_iverilog (D = \r_delay_line[12], Q = \r_delay_line[13]).
Adding EN signal on $procdff$250 ($adff) from module filt_mac_iverilog (D = \r_delay_line[11], Q = \r_delay_line[12]).
Adding EN signal on $procdff$249 ($adff) from module filt_mac_iverilog (D = \r_delay_line[10], Q = \r_delay_line[11]).
Adding EN signal on $procdff$248 ($adff) from module filt_mac_iverilog (D = \r_delay_line[9], Q = \r_delay_line[10]).
Adding EN signal on $procdff$247 ($adff) from module filt_mac_iverilog (D = \r_delay_line[8], Q = \r_delay_line[9]).
Adding EN signal on $procdff$246 ($adff) from module filt_mac_iverilog (D = \r_delay_line[7], Q = \r_delay_line[8]).
Adding EN signal on $procdff$245 ($adff) from module filt_mac_iverilog (D = \r_delay_line[6], Q = \r_delay_line[7]).
Adding EN signal on $procdff$244 ($adff) from module filt_mac_iverilog (D = \r_delay_line[5], Q = \r_delay_line[6]).
Adding EN signal on $procdff$243 ($adff) from module filt_mac_iverilog (D = \r_delay_line[4], Q = \r_delay_line[5]).
Adding EN signal on $procdff$242 ($adff) from module filt_mac_iverilog (D = \r_delay_line[3], Q = \r_delay_line[4]).
Adding EN signal on $procdff$241 ($adff) from module filt_mac_iverilog (D = \r_delay_line[2], Q = \r_delay_line[3]).
Adding EN signal on $procdff$240 ($adff) from module filt_mac_iverilog (D = \r_delay_line[1], Q = \r_delay_line[2]).
Adding EN signal on $procdff$239 ($adff) from module filt_mac_iverilog (D = \r_delay_line[0], Q = \r_delay_line[1]).
Adding EN signal on $procdff$238 ($adff) from module filt_mac_iverilog (D = \i_data, Q = \r_delay_line[0]).
Adding EN signal on $procdff$236 ($adff) from module filt_mac_iverilog (D = $procmux$119_Y, Q = \r_count_coeff).
Adding EN signal on $procdff$235 ($adff) from module filt_mac_iverilog (D = $procmux$114_Y, Q = \r_add_oup).
Adding EN signal on $procdff$234 ($adff) from module filt_mac_iverilog (D = \w_add_oup, Q = \r_data).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 38 unused cells and 38 unused wires.
<suppressed ~39 debug messages>

4.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.51. Executing OPT_SHARE pass.

4.52. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.55. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.56. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.58. Executing OPT_SHARE pass.

4.59. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.60. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.61. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 3

4.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.64. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.65. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.66. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.67. Executing OPT_SHARE pass.

4.68. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.69. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.70. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.72. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.73. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.74. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.76. Executing OPT_SHARE pass.

4.77. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=0, #remove=0, time=0.00 sec.]

4.78. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=20, #solve=206, #remove=0, time=0.02 sec.]

4.79. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.81. Executing WREDUCE pass (reducing word size of cells).

4.82. Executing PEEPOPT pass (run peephole optimizers).

4.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.84. Executing DEMUXMAP pass.

4.85. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 86
   Number of wire bits:            575
   Number of public wires:          40
   Number of public wire bits:     450
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 71
     $add                            3
     $adffe                         20
     $eq                            31
     $ge                             1
     $logic_not                      3
     $lt                             2
     $mul                            1
     $mux                            5
     $pmux                           3
     $reduce_and                     1
     $sub                            1

4.86. Executing RS_DSP_MULTADD pass.

4.87. Executing WREDUCE pass (reducing word size of cells).

4.88. Executing RS_DSP_MACC pass.
Inferring MACC 9x12->37 as dsp_t1_20x18x64_cfg_ports from:
 $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:95$15 ($mul)
 $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:98$16 ($add)
 $auto$ff.cc:294:slice$307 ($adffe)

4.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 62 unused cells and 73 unused wires.
<suppressed ~93 debug messages>

4.90. Executing TECHMAP pass (map to technology primitives).

4.90.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.90.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.91. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 15
   Number of wire bits:            139
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     $add                            1
     $adffe                          2
     $ge                             1
     $lt                             1
     $mux                            2
     $reduce_and                     1

4.92. Executing TECHMAP pass (map to technology primitives).

4.92.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

4.92.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

4.93. Executing TECHMAP pass (map to technology primitives).

4.93.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

4.93.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

4.94. Executing rs_pack_dsp_regs pass.

4.95. Executing RS_DSP_IO_REGS pass.

4.96. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module filt_mac_iverilog:
  creating $macc model for $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:70$12 ($add).
  creating $alu model for $macc $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:70$12.
  creating $alu model for $ge$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:127$21 ($ge): new $alu
  creating $alu model for $lt$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:69$11 ($lt): merged with $ge$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:127$21.
  creating $alu cell for $ge$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:127$21, $lt$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:69$11: $auto$alumacc.cc:485:replace_alu$315
  creating $alu cell for $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/iverilog_tests/filt_mac_iverilog/./rtl/filt_mac_iverilog.v:70$12: $auto$alumacc.cc:485:replace_alu$328
  created 2 $alu and 0 $macc cells.

4.97. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~1 debug messages>

4.98. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.99. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.100. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.101. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.102. Executing OPT_SHARE pass.

4.103. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.104. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.105. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.106. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 23
   Number of wire bits:            162
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $adffe                          2
     $alu                            2
     $mux                            2
     $not                            2
     $or                             1
     $reduce_and                     2
     $reduce_or                      1

4.107. Executing MEMORY pass.

4.107.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.107.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.107.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.107.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.107.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.107.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.107.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.107.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.107.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.107.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.108. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 23
   Number of wire bits:            162
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $adffe                          2
     $alu                            2
     $mux                            2
     $not                            2
     $or                             1
     $reduce_and                     2
     $reduce_or                      1

4.109. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~2 debug messages>

4.110. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.111. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.112. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.113. Executing Rs_BRAM_Split pass.

4.114. Executing TECHMAP pass (map to technology primitives).

4.114.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.115. Executing TECHMAP pass (map to technology primitives).

4.115.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.116. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.117. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.118. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.119. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~2 debug messages>

4.120. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.121. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.122. Executing OPT_SHARE pass.

4.123. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=2, #solve=0, #remove=0, time=0.00 sec.]

4.124. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.125. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.126. Executing PMUXTREE pass.

4.127. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~2 debug messages>

4.128. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.129. Executing TECHMAP pass (map to technology primitives).

4.129.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.129.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.129.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~329 debug messages>

4.130. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 91
   Number of wire bits:           2514
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                118
     $_AND_                         24
     $_DFFE_PN0P_                   37
     $_DFFE_PN1P_                    4
     $_MUX_                         13
     $_NOT_                         10
     $_OR_                          12
     $_XOR_                         18

4.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~54 debug messages>

4.132. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

4.133. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.134. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.136. Executing OPT_SHARE pass.

4.137. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=41, #solve=0, #remove=0, time=0.00 sec.]

4.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 2 unused cells and 77 unused wires.
<suppressed ~3 debug messages>

4.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.140. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.141. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.143. Executing OPT_SHARE pass.

4.144. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=41, #solve=0, #remove=0, time=0.00 sec.]

4.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 2

4.147. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~19 debug messages>

4.148. Executing TECHMAP pass (map to technology primitives).

4.148.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.148.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.149. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 22
   Number of wire bits:            156
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     $_AND_                          7
     $_DFFE_PN0P_                   37
     $_DFFE_PN1P_                    4
     $_MUX_                          4
     $_NOT_                          5
     $_OR_                           3
     $_XOR_                          3

4.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~108 debug messages>
Removed a total of 36 cells.

4.152. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.153. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.155. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on filt_mac_iverilog:r_data[0]_468 ($_DFFE_PN0P_) from module filt_mac_iverilog.
[#visit=5, #solve=0, #remove=1, time=0.00 sec.]

4.156. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

4.157. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.158. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.159. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.161. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.162. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.163. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 2

4.164. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.166. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.167. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.168. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.169. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.170. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.172. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.173. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.174. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.175. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.176. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.177. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.178. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=4, #remove=0, time=0.00 sec.]

4.179. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.180. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.181. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 21
   Number of wire bits:            155
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 25
     $_AND_                          6
     $_DFFE_PN1P_                    4
     $_MUX_                          4
     $_NOT_                          5
     $_OR_                           3
     $_XOR_                          3

   Number of Generic REGs:          4

ABC-DFF iteration : 1

4.182. Executing ABC pass (technology mapping using ABC).

4.182.1. Summary of detected clock domains:
  25 cells in clk=\i_clk, en=\i_ena, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.182.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, enabled by \i_ena, asynchronously reset by !\i_rst_an
Extracted 25 gates and 26 wires to a netlist network with 0 inputs and 5 outputs.

4.182.2.1. Executing ABC.

4.183. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.184. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.185. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.186. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.187. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.188. Executing OPT_SHARE pass.

4.189. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.190. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.191. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.192. Executing ABC pass (technology mapping using ABC).

4.192.1. Summary of detected clock domains:
  14 cells in clk=\i_clk, en=\i_ena, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.192.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, enabled by \i_ena, asynchronously reset by !\i_rst_an
Extracted 14 gates and 14 wires to a netlist network with 0 inputs and 8 outputs.

4.192.2.1. Executing ABC.

4.193. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.195. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.196. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.197. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.198. Executing OPT_SHARE pass.

4.199. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.200. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.201. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.202. Executing ABC pass (technology mapping using ABC).

4.202.1. Summary of detected clock domains:
  14 cells in clk=\i_clk, en=\i_ena, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.202.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, enabled by \i_ena, asynchronously reset by !\i_rst_an
Extracted 14 gates and 14 wires to a netlist network with 0 inputs and 8 outputs.

4.202.2.1. Executing ABC.

4.203. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.204. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.205. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.206. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.207. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.208. Executing OPT_SHARE pass.

4.209. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.210. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.211. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.212. Executing ABC pass (technology mapping using ABC).

4.212.1. Summary of detected clock domains:
  14 cells in clk=\i_clk, en=\i_ena, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.212.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, enabled by \i_ena, asynchronously reset by !\i_rst_an
Extracted 14 gates and 14 wires to a netlist network with 0 inputs and 8 outputs.

4.212.2.1. Executing ABC.

4.213. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.214. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.215. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.216. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.217. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.218. Executing OPT_SHARE pass.

4.219. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.220. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

4.221. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.222. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          4

ABC-DFF iteration : 1

4.223. Executing ABC pass (technology mapping using ABC).

4.223.1. Summary of detected clock domains:
  25 cells in clk=\i_clk, en=\i_ena, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.223.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, enabled by \i_ena, asynchronously reset by !\i_rst_an
Extracted 25 gates and 26 wires to a netlist network with 0 inputs and 5 outputs.

4.223.2.1. Executing ABC.

4.224. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.225. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.226. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

4.227. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.228. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.229. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.230. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.231. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.232. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.233. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

4.234. Executing ABC pass (technology mapping using ABC).

4.234.1. Summary of detected clock domains:
  19 cells in clk=\i_clk, en={ }, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.234.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, asynchronously reset by !\i_rst_an
Extracted 19 gates and 20 wires to a netlist network with 1 inputs and 9 outputs.

4.234.2.1. Executing ABC.

4.235. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.236. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.237. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

4.238. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.239. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.240. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.241. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.243. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.244. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

4.245. Executing ABC pass (technology mapping using ABC).

4.245.1. Summary of detected clock domains:
  18 cells in clk=\i_clk, en={ }, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.245.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, asynchronously reset by !\i_rst_an
Extracted 18 gates and 19 wires to a netlist network with 1 inputs and 9 outputs.

4.245.2.1. Executing ABC.

4.246. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.247. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.248. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

4.249. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.250. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.251. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.252. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.253. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.254. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.255. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

4.256. Executing ABC pass (technology mapping using ABC).

4.256.1. Summary of detected clock domains:
  18 cells in clk=\i_clk, en={ }, arst=!\i_rst_an, srst={ }

  #logic partitions = 1

4.256.2. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \i_clk, asynchronously reset by !\i_rst_an
Extracted 18 gates and 19 wires to a netlist network with 1 inputs and 9 outputs.

4.256.2.1. Executing ABC.

4.257. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.258. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.259. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

4.260. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.262. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.263. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.264. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.265. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.266. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.267. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE preserving strategy (tresh=0.920000)

4.268. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.269. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.270. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.271. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.272. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.273. Executing OPT_SHARE pass.

4.274. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.275. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.276. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.277. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.278. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.279. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.280. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.281. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.282. Executing OPT_SHARE pass.

4.283. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.284. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.285. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.286. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.287. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.288. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.289. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.290. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.291. Executing OPT_SHARE pass.

4.292. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.293. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=4, #remove=0, time=0.00 sec.]

4.294. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.296. Executing BMUXMAP pass.

4.297. Executing DEMUXMAP pass.

4.298. Executing ABC pass (technology mapping using ABC).

4.298.1. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Extracted 10 gates and 14 wires to a netlist network with 4 inputs and 8 outputs.

4.298.1.1. Executing ABC.
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.05 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.08 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.11 sec. at Pass 2]{map}[9]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.13 sec. at Pass 3]{postMap}[18]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.26 sec. at Pass 4]{map}[54]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.49 sec. at Pass 5]{postMap}[100]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.00 sec. at Pass 6]{pushMap}[0]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.00 sec. at Pass 7]{finalMap}[0]

4.299. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.300. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.301. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.302. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.303. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.304. Executing OPT_SHARE pass.

4.305. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.306. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

4.307. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.308. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.309. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.310. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.311. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.312. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.313. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.314. Executing OPT_SHARE pass.

4.315. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.316. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.317. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.318. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.319. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.320. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.321. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.322. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.323. Executing OPT_SHARE pass.

4.324. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

4.325. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=4, #remove=0, time=0.00 sec.]

4.326. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.327. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.328. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 18
   Number of wire bits:            136
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_DFFE_PN0P_                    4
     $lut                            8

4.329. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.330. Executing RS_DFFSR_CONV pass.

4.331. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 18
   Number of wire bits:            136
   Number of public wires:          10
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $_DFFE_PN0P_                    4
     $lut                            8

4.332. Executing TECHMAP pass (map to technology primitives).

4.332.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.332.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.332.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~132 debug messages>

4.333. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.
<suppressed ~17 debug messages>

4.334. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.335. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.336. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.337. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.338. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

4.339. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.340. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.341. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.342. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.343. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.344. Executing OPT_SHARE pass.

4.345. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.346. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..

4.347. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.348. Executing TECHMAP pass (map to technology primitives).

4.348.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.348.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.349. Executing ABC pass (technology mapping using ABC).

4.349.1. Extracting gate netlist of module `\filt_mac_iverilog' to `<abc-temp-dir>/input.blif'..
Extracted 11 gates and 17 wires to a netlist network with 4 inputs and 8 outputs.

4.349.1.1. Executing ABC.
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.07 sec. at Pass 0]{firstMap}[1]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.08 sec. at Pass 1]{initMapFlow}[3]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.11 sec. at Pass 2]{map}[9]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.12 sec. at Pass 3]{postMap}[18]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.25 sec. at Pass 4]{map}[54]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.48 sec. at Pass 5]{postMap}[100]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.00 sec. at Pass 6]{pushMap}[0]
DE:   #PIs =   4  #Luts =     8  Max Lvl =   1  Avg Lvl =   0.50  [   0.00 sec. at Pass 7]{finalMap}[0]

4.350. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

4.351. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.352. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filt_mac_iverilog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.353. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filt_mac_iverilog.
Performed a total of 0 changes.

4.354. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filt_mac_iverilog'.
Removed a total of 0 cells.

4.355. Executing OPT_SHARE pass.

4.356. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.357. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

4.358. Executing OPT_EXPR pass (perform const folding).
Optimizing module filt_mac_iverilog.

RUN-OPT ITERATIONS DONE : 1

4.359. Executing HIERARCHY pass (managing design hierarchy).

4.359.1. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog

4.359.2. Analyzing design hierarchy..
Top module:  \filt_mac_iverilog
Removed 0 unused modules.

4.360. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filt_mac_iverilog..
Removed 0 unused cells and 3 unused wires.
<suppressed ~3 debug messages>

4.361. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 15
   Number of wire bits:             61
   Number of public wires:           7
   Number of public wire bits:      53
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     $lut                            8
     DFFRE                           4

4.362. Executing TECHMAP pass (map to technology primitives).

4.362.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/TECHMAP/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/10_07_2023_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/TECHMAP/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.362.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~76 debug messages>

4.363. Printing statistics.

=== filt_mac_iverilog ===

   Number of wires:                 31
   Number of wire bits:             84
   Number of public wires:           7
   Number of public wire bits:      53
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 12
     DFFRE                           4
     LUT1                            4
     LUT2                            2
     LUT3                            1
     LUT4                            1

   Number of LUTs:                   8
   Number of REGs:                   4

5. Executing Verilog backend.
Dumping module `\filt_mac_iverilog'.

6. Executing BLIF backend.

Warnings: 109 unique messages, 109 total
End of script. Logfile hash: 8c03e09385, CPU: user 0.86s system 0.09s, MEM: 28.14 MB peak
Yosys 0.18+10 (git sha1 611c05348, gcc 11.2.1 -fPIC -Os)
Time spent: 98% 10x abc (45 sec), 0% 23x read_verilog (0 sec), ...
