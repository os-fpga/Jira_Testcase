//Verilog generated by VPR  from post-place-and-route implementation
module adder_verilator (
    input \clock ,
    input \reset ,
    input \a[0] ,
    input \a[1] ,
    input \a[2] ,
    input \a[3] ,
    input \b[0] ,
    input \b[1] ,
    input \b[2] ,
    input \b[3] ,
    output \sum[0] ,
    output \sum[1] ,
    output \sum[2] ,
    output \sum[3] ,
    output \sum[4] 
);

    //Wires
    wire \clock_output_0_0 ;
    wire \reset_output_0_0 ;
    wire \a[0]_output_0_0 ;
    wire \a[1]_output_0_0 ;
    wire \a[2]_output_0_0 ;
    wire \a[3]_output_0_0 ;
    wire \b[0]_output_0_0 ;
    wire \b[1]_output_0_0 ;
    wire \b[2]_output_0_0 ;
    wire \b[3]_output_0_0 ;
    wire \dffre_sum[0]_output_0_0 ;
    wire \dffre_sum[1]_output_0_0 ;
    wire \dffre_sum[2]_output_0_0 ;
    wire \dffre_sum[3]_output_0_0 ;
    wire \dffre_sum[4]_output_0_0 ;
    wire \lut_$true_output_0_0 ;
    wire \lut_$abc$1007$abc$524$li1_li1_output_0_0 ;
    wire \lut_$abc$1007$abc$524$li0_li0_output_0_0 ;
    wire \lut_$abc$1007$new_new_n18___output_0_0 ;
    wire \lut_$abc$1007$abc$524$li2_li2_output_0_0 ;
    wire \lut_$abc$1007$abc$524$li4_li4_output_0_0 ;
    wire \lut_$abc$1007$abc$524$li3_li3_output_0_0 ;
    wire \dffre_sum[2]_clock_0_0 ;
    wire \dffre_sum[0]_clock_0_0 ;
    wire \dffre_sum[3]_clock_0_0 ;
    wire \dffre_sum[1]_clock_0_0 ;
    wire \dffre_sum[4]_clock_0_0 ;
    wire \lut_$abc$1007$abc$524$li2_li2_input_0_1 ;
    wire \lut_$abc$1007$abc$524$li0_li0_input_0_2 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_5 ;
    wire \lut_$abc$1007$abc$524$li1_li1_input_0_2 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_1 ;
    wire \lut_$abc$1007$abc$524$li0_li0_input_0_0 ;
    wire \lut_$abc$1007$abc$524$li1_li1_input_0_4 ;
    wire \lut_$abc$1007$new_new_n18___input_0_4 ;
    wire \lut_$abc$1007$abc$524$li1_li1_input_0_0 ;
    wire \lut_$abc$1007$new_new_n18___input_0_0 ;
    wire \lut_$abc$1007$abc$524$li2_li2_input_0_0 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_0 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_2 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_3 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_5 ;
    wire \lut_$abc$1007$abc$524$li0_li0_input_0_3 ;
    wire \lut_$abc$1007$abc$524$li1_li1_input_0_3 ;
    wire \lut_$abc$1007$new_new_n18___input_0_3 ;
    wire \lut_$abc$1007$abc$524$li1_li1_input_0_1 ;
    wire \lut_$abc$1007$new_new_n18___input_0_1 ;
    wire \lut_$abc$1007$abc$524$li2_li2_input_0_2 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_2 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_0 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_1 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_3 ;
    wire \sum[0]_input_0_0 ;
    wire \sum[1]_input_0_0 ;
    wire \sum[2]_input_0_0 ;
    wire \sum[3]_input_0_0 ;
    wire \sum[4]_input_0_0 ;
    wire \dffre_sum[2]_input_1_0 ;
    wire \dffre_sum[2]_input_2_0 ;
    wire \dffre_sum[0]_input_1_0 ;
    wire \dffre_sum[0]_input_2_0 ;
    wire \dffre_sum[3]_input_1_0 ;
    wire \dffre_sum[3]_input_2_0 ;
    wire \dffre_sum[1]_input_1_0 ;
    wire \dffre_sum[1]_input_2_0 ;
    wire \dffre_sum[4]_input_1_0 ;
    wire \dffre_sum[4]_input_2_0 ;
    wire \dffre_sum[1]_input_0_0 ;
    wire \dffre_sum[0]_input_0_0 ;
    wire \lut_$abc$1007$abc$524$li2_li2_input_0_4 ;
    wire \lut_$abc$1007$abc$524$li3_li3_input_0_4 ;
    wire \lut_$abc$1007$abc$524$li4_li4_input_0_4 ;
    wire \dffre_sum[2]_input_0_0 ;
    wire \dffre_sum[4]_input_0_0 ;
    wire \dffre_sum[3]_input_0_0 ;

    //IO assignments
    assign \sum[0]  = \sum[0]_input_0_0 ;
    assign \sum[1]  = \sum[1]_input_0_0 ;
    assign \sum[2]  = \sum[2]_input_0_0 ;
    assign \sum[3]  = \sum[3]_input_0_0 ;
    assign \sum[4]  = \sum[4]_input_0_0 ;
    assign \clock_output_0_0  = \clock ;
    assign \reset_output_0_0  = \reset ;
    assign \a[0]_output_0_0  = \a[0] ;
    assign \a[1]_output_0_0  = \a[1] ;
    assign \a[2]_output_0_0  = \a[2] ;
    assign \a[3]_output_0_0  = \a[3] ;
    assign \b[0]_output_0_0  = \b[0] ;
    assign \b[1]_output_0_0  = \b[1] ;
    assign \b[2]_output_0_0  = \b[2] ;
    assign \b[3]_output_0_0  = \b[3] ;

    //Interconnect
    fpga_interconnect \routing_segment_clock_output_0_0_to_dffre_sum[2]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\dffre_sum[2]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_dffre_sum[0]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\dffre_sum[0]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_dffre_sum[3]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\dffre_sum[3]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_dffre_sum[1]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\dffre_sum[1]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_clock_output_0_0_to_dffre_sum[4]_clock_0_0  (
        .datain(\clock_output_0_0 ),
        .dataout(\dffre_sum[4]_clock_0_0 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_$abc$1007$abc$524$li2_li2_input_0_1  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li2_li2_input_0_1 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_$abc$1007$abc$524$li0_li0_input_0_2  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li0_li0_input_0_2 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_5  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_5 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_$abc$1007$abc$524$li1_li1_input_0_2  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li1_li1_input_0_2 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_1  (
        .datain(\reset_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_1 )
    );

    fpga_interconnect \routing_segment_a[0]_output_0_0_to_lut_$abc$1007$abc$524$li0_li0_input_0_0  (
        .datain(\a[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li0_li0_input_0_0 )
    );

    fpga_interconnect \routing_segment_a[0]_output_0_0_to_lut_$abc$1007$abc$524$li1_li1_input_0_4  (
        .datain(\a[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li1_li1_input_0_4 )
    );

    fpga_interconnect \routing_segment_a[0]_output_0_0_to_lut_$abc$1007$new_new_n18___input_0_4  (
        .datain(\a[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$new_new_n18___input_0_4 )
    );

    fpga_interconnect \routing_segment_a[1]_output_0_0_to_lut_$abc$1007$abc$524$li1_li1_input_0_0  (
        .datain(\a[1]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li1_li1_input_0_0 )
    );

    fpga_interconnect \routing_segment_a[1]_output_0_0_to_lut_$abc$1007$new_new_n18___input_0_0  (
        .datain(\a[1]_output_0_0 ),
        .dataout(\lut_$abc$1007$new_new_n18___input_0_0 )
    );

    fpga_interconnect \routing_segment_a[2]_output_0_0_to_lut_$abc$1007$abc$524$li2_li2_input_0_0  (
        .datain(\a[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li2_li2_input_0_0 )
    );

    fpga_interconnect \routing_segment_a[2]_output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_0  (
        .datain(\a[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_0 )
    );

    fpga_interconnect \routing_segment_a[2]_output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_2  (
        .datain(\a[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_2 )
    );

    fpga_interconnect \routing_segment_a[3]_output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_3  (
        .datain(\a[3]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_3 )
    );

    fpga_interconnect \routing_segment_a[3]_output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_5  (
        .datain(\a[3]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_5 )
    );

    fpga_interconnect \routing_segment_b[0]_output_0_0_to_lut_$abc$1007$abc$524$li0_li0_input_0_3  (
        .datain(\b[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li0_li0_input_0_3 )
    );

    fpga_interconnect \routing_segment_b[0]_output_0_0_to_lut_$abc$1007$abc$524$li1_li1_input_0_3  (
        .datain(\b[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li1_li1_input_0_3 )
    );

    fpga_interconnect \routing_segment_b[0]_output_0_0_to_lut_$abc$1007$new_new_n18___input_0_3  (
        .datain(\b[0]_output_0_0 ),
        .dataout(\lut_$abc$1007$new_new_n18___input_0_3 )
    );

    fpga_interconnect \routing_segment_b[1]_output_0_0_to_lut_$abc$1007$abc$524$li1_li1_input_0_1  (
        .datain(\b[1]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li1_li1_input_0_1 )
    );

    fpga_interconnect \routing_segment_b[1]_output_0_0_to_lut_$abc$1007$new_new_n18___input_0_1  (
        .datain(\b[1]_output_0_0 ),
        .dataout(\lut_$abc$1007$new_new_n18___input_0_1 )
    );

    fpga_interconnect \routing_segment_b[2]_output_0_0_to_lut_$abc$1007$abc$524$li2_li2_input_0_2  (
        .datain(\b[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li2_li2_input_0_2 )
    );

    fpga_interconnect \routing_segment_b[2]_output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_2  (
        .datain(\b[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_2 )
    );

    fpga_interconnect \routing_segment_b[2]_output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_0  (
        .datain(\b[2]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_0 )
    );

    fpga_interconnect \routing_segment_b[3]_output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_1  (
        .datain(\b[3]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_1 )
    );

    fpga_interconnect \routing_segment_b[3]_output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_3  (
        .datain(\b[3]_output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_3 )
    );

    fpga_interconnect \routing_segment_dffre_sum[0]_output_0_0_to_sum[0]_input_0_0  (
        .datain(\dffre_sum[0]_output_0_0 ),
        .dataout(\sum[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_dffre_sum[1]_output_0_0_to_sum[1]_input_0_0  (
        .datain(\dffre_sum[1]_output_0_0 ),
        .dataout(\sum[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_dffre_sum[2]_output_0_0_to_sum[2]_input_0_0  (
        .datain(\dffre_sum[2]_output_0_0 ),
        .dataout(\sum[2]_input_0_0 )
    );

    fpga_interconnect \routing_segment_dffre_sum[3]_output_0_0_to_sum[3]_input_0_0  (
        .datain(\dffre_sum[3]_output_0_0 ),
        .dataout(\sum[3]_input_0_0 )
    );

    fpga_interconnect \routing_segment_dffre_sum[4]_output_0_0_to_sum[4]_input_0_0  (
        .datain(\dffre_sum[4]_output_0_0 ),
        .dataout(\sum[4]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[2]_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[2]_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[2]_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[2]_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[0]_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[0]_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[0]_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[0]_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[3]_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[3]_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[3]_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[3]_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[1]_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[1]_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[1]_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[1]_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[4]_input_1_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[4]_input_1_0 )
    );

    fpga_interconnect \routing_segment_lut_$true_output_0_0_to_dffre_sum[4]_input_2_0  (
        .datain(\lut_$true_output_0_0 ),
        .dataout(\dffre_sum[4]_input_2_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$abc$524$li1_li1_output_0_0_to_dffre_sum[1]_input_0_0  (
        .datain(\lut_$abc$1007$abc$524$li1_li1_output_0_0 ),
        .dataout(\dffre_sum[1]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$abc$524$li0_li0_output_0_0_to_dffre_sum[0]_input_0_0  (
        .datain(\lut_$abc$1007$abc$524$li0_li0_output_0_0 ),
        .dataout(\dffre_sum[0]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$new_new_n18___output_0_0_to_lut_$abc$1007$abc$524$li2_li2_input_0_4  (
        .datain(\lut_$abc$1007$new_new_n18___output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li2_li2_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$new_new_n18___output_0_0_to_lut_$abc$1007$abc$524$li3_li3_input_0_4  (
        .datain(\lut_$abc$1007$new_new_n18___output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li3_li3_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$new_new_n18___output_0_0_to_lut_$abc$1007$abc$524$li4_li4_input_0_4  (
        .datain(\lut_$abc$1007$new_new_n18___output_0_0 ),
        .dataout(\lut_$abc$1007$abc$524$li4_li4_input_0_4 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$abc$524$li2_li2_output_0_0_to_dffre_sum[2]_input_0_0  (
        .datain(\lut_$abc$1007$abc$524$li2_li2_output_0_0 ),
        .dataout(\dffre_sum[2]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$abc$524$li4_li4_output_0_0_to_dffre_sum[4]_input_0_0  (
        .datain(\lut_$abc$1007$abc$524$li4_li4_output_0_0 ),
        .dataout(\dffre_sum[4]_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut_$abc$1007$abc$524$li3_li3_output_0_0_to_dffre_sum[3]_input_0_0  (
        .datain(\lut_$abc$1007$abc$524$li3_li3_output_0_0 ),
        .dataout(\dffre_sum[3]_input_0_0 )
    );


    //Cell instances
    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000001000010000000000010010)
    ) \lut_$abc$1007$abc$524$li2_li2  (
        .in({
            \lut_$abc$1007$abc$524$li2_li2_input_0_4 ,
            1'b0,
            \lut_$abc$1007$abc$524$li2_li2_input_0_2 ,
            \lut_$abc$1007$abc$524$li2_li2_input_0_1 ,
            \lut_$abc$1007$abc$524$li2_li2_input_0_0 
         }),
        .out(\lut_$abc$1007$abc$524$li2_li2_output_0_0 )
    );

    dffre #(
    ) \dffre_sum[2]  (
        .C(\dffre_sum[2]_clock_0_0 ),
        .D(\dffre_sum[2]_input_0_0 ),
        .E(\dffre_sum[2]_input_2_0 ),
        .R(\dffre_sum[2]_input_1_0 ),
        .Q(\dffre_sum[2]_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000000000000000000001)
    ) \lut_$true  (
        .in({
            1'b0,
            1'b0,
            1'b0,
            1'b0,
            1'b0
         }),
        .out(\lut_$true_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000000000000100000010)
    ) \lut_$abc$1007$abc$524$li0_li0  (
        .in({
            1'b0,
            \lut_$abc$1007$abc$524$li0_li0_input_0_3 ,
            \lut_$abc$1007$abc$524$li0_li0_input_0_2 ,
            1'b0,
            \lut_$abc$1007$abc$524$li0_li0_input_0_0 
         }),
        .out(\lut_$abc$1007$abc$524$li0_li0_output_0_0 )
    );

    dffre #(
    ) \dffre_sum[0]  (
        .C(\dffre_sum[0]_clock_0_0 ),
        .D(\dffre_sum[0]_input_0_0 ),
        .E(\dffre_sum[0]_input_2_0 ),
        .R(\dffre_sum[0]_input_1_0 ),
        .Q(\dffre_sum[0]_output_0_0 )
    );

    LUT_K #(
        .K(6),
        .LUT_MASK(64'b0000000000000000000000000000000011001001001101101001001101101100)
    ) \lut_$abc$1007$abc$524$li3_li3  (
        .in({
            \lut_$abc$1007$abc$524$li3_li3_input_0_5 ,
            \lut_$abc$1007$abc$524$li3_li3_input_0_4 ,
            \lut_$abc$1007$abc$524$li3_li3_input_0_3 ,
            \lut_$abc$1007$abc$524$li3_li3_input_0_2 ,
            \lut_$abc$1007$abc$524$li3_li3_input_0_1 ,
            \lut_$abc$1007$abc$524$li3_li3_input_0_0 
         }),
        .out(\lut_$abc$1007$abc$524$li3_li3_output_0_0 )
    );

    dffre #(
    ) \dffre_sum[3]  (
        .C(\dffre_sum[3]_clock_0_0 ),
        .D(\dffre_sum[3]_input_0_0 ),
        .E(\dffre_sum[3]_input_2_0 ),
        .R(\dffre_sum[3]_input_1_0 ),
        .Q(\dffre_sum[3]_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00001001000001100000011000000110)
    ) \lut_$abc$1007$abc$524$li1_li1  (
        .in({
            \lut_$abc$1007$abc$524$li1_li1_input_0_4 ,
            \lut_$abc$1007$abc$524$li1_li1_input_0_3 ,
            \lut_$abc$1007$abc$524$li1_li1_input_0_2 ,
            \lut_$abc$1007$abc$524$li1_li1_input_0_1 ,
            \lut_$abc$1007$abc$524$li1_li1_input_0_0 
         }),
        .out(\lut_$abc$1007$abc$524$li1_li1_output_0_0 )
    );

    dffre #(
    ) \dffre_sum[1]  (
        .C(\dffre_sum[1]_clock_0_0 ),
        .D(\dffre_sum[1]_input_0_0 ),
        .E(\dffre_sum[1]_input_2_0 ),
        .R(\dffre_sum[1]_input_1_0 ),
        .Q(\dffre_sum[1]_output_0_0 )
    );

    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00001110000010000000100000001000)
    ) \lut_$abc$1007$new_new_n18__  (
        .in({
            \lut_$abc$1007$new_new_n18___input_0_4 ,
            \lut_$abc$1007$new_new_n18___input_0_3 ,
            1'b0,
            \lut_$abc$1007$new_new_n18___input_0_1 ,
            \lut_$abc$1007$new_new_n18___input_0_0 
         }),
        .out(\lut_$abc$1007$new_new_n18___output_0_0 )
    );

    LUT_K #(
        .K(6),
        .LUT_MASK(64'b0011001100110010001100110010000000110010000000000010000000000000)
    ) \lut_$abc$1007$abc$524$li4_li4  (
        .in({
            \lut_$abc$1007$abc$524$li4_li4_input_0_5 ,
            \lut_$abc$1007$abc$524$li4_li4_input_0_4 ,
            \lut_$abc$1007$abc$524$li4_li4_input_0_3 ,
            \lut_$abc$1007$abc$524$li4_li4_input_0_2 ,
            \lut_$abc$1007$abc$524$li4_li4_input_0_1 ,
            \lut_$abc$1007$abc$524$li4_li4_input_0_0 
         }),
        .out(\lut_$abc$1007$abc$524$li4_li4_output_0_0 )
    );

    dffre #(
    ) \dffre_sum[4]  (
        .C(\dffre_sum[4]_clock_0_0 ),
        .D(\dffre_sum[4]_input_0_0 ),
        .E(\dffre_sum[4]_input_2_0 ),
        .R(\dffre_sum[4]_input_1_0 ),
        .Q(\dffre_sum[4]_output_0_0 )
    );


endmodule
