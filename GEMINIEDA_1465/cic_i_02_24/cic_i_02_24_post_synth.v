/* Generated by Yosys 0.18+10 (git sha1 131a935a1, gcc 11.2.0 -fPIC -Os) */

module cic_i(clk, reset_n, in_dv, data_out, data_in);
  input clk;
  input [7:0] data_in;
  output [13:0] data_out;
  input in_dv;
  input reset_n;
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  (* keep = 32'h00000001 *)
  wire _197_;
  (* keep = 32'h00000001 *)
  wire _198_;
  (* keep = 32'h00000001 *)
  wire _199_;
  (* keep = 32'h00000001 *)
  wire _200_;
  (* keep = 32'h00000001 *)
  wire _201_;
  (* keep = 32'h00000001 *)
  wire _202_;
  (* keep = 32'h00000001 *)
  wire _203_;
  (* keep = 32'h00000001 *)
  wire _204_;
  (* keep = 32'h00000001 *)
  wire _205_;
  (* keep = 32'h00000001 *)
  wire _206_;
  (* keep = 32'h00000001 *)
  wire _207_;
  (* keep = 32'h00000001 *)
  wire _208_;
  (* keep = 32'h00000001 *)
  wire _209_;
  (* keep = 32'h00000001 *)
  wire _210_;
  (* keep = 32'h00000001 *)
  wire _211_;
  (* keep = 32'h00000001 *)
  wire _212_;
  (* keep = 32'h00000001 *)
  wire _213_;
  (* keep = 32'h00000001 *)
  wire _214_;
  (* keep = 32'h00000001 *)
  wire _215_;
  (* keep = 32'h00000001 *)
  wire _216_;
  (* keep = 32'h00000001 *)
  wire _217_;
  (* keep = 32'h00000001 *)
  wire _218_;
  (* keep = 32'h00000001 *)
  wire _219_;
  (* keep = 32'h00000001 *)
  wire _220_;
  (* keep = 32'h00000001 *)
  wire _221_;
  (* keep = 32'h00000001 *)
  wire _222_;
  (* keep = 32'h00000001 *)
  wire _223_;
  (* keep = 32'h00000001 *)
  wire _224_;
  (* keep = 32'h00000001 *)
  wire _225_;
  (* keep = 32'h00000001 *)
  wire _226_;
  (* keep = 32'h00000001 *)
  wire _227_;
  (* keep = 32'h00000001 *)
  wire _228_;
  (* keep = 32'h00000001 *)
  wire _229_;
  (* keep = 32'h00000001 *)
  wire _230_;
  (* keep = 32'h00000001 *)
  wire _231_;
  (* keep = 32'h00000001 *)
  wire _232_;
  (* keep = 32'h00000001 *)
  wire _233_;
  (* keep = 32'h00000001 *)
  wire _234_;
  (* keep = 32'h00000001 *)
  wire _235_;
  (* keep = 32'h00000001 *)
  wire _236_;
  (* keep = 32'h00000001 *)
  wire _237_;
  (* keep = 32'h00000001 *)
  wire _238_;
  (* keep = 32'h00000001 *)
  wire _239_;
  (* keep = 32'h00000001 *)
  wire _240_;
  (* keep = 32'h00000001 *)
  wire _241_;
  (* keep = 32'h00000001 *)
  wire _242_;
  (* keep = 32'h00000001 *)
  wire _243_;
  (* keep = 32'h00000001 *)
  wire _244_;
  (* keep = 32'h00000001 *)
  wire _245_;
  (* keep = 32'h00000001 *)
  wire _246_;
  (* keep = 32'h00000001 *)
  wire _247_;
  (* keep = 32'h00000001 *)
  wire _248_;
  (* keep = 32'h00000001 *)
  wire _249_;
  (* keep = 32'h00000001 *)
  wire _250_;
  (* keep = 32'h00000001 *)
  wire _251_;
  (* keep = 32'h00000001 *)
  wire _252_;
  (* keep = 32'h00000001 *)
  wire _253_;
  (* keep = 32'h00000001 *)
  wire _254_;
  (* keep = 32'h00000001 *)
  wire _255_;
  (* keep = 32'h00000001 *)
  wire _256_;
  (* keep = 32'h00000001 *)
  wire _257_;
  (* keep = 32'h00000001 *)
  wire _258_;
  (* keep = 32'h00000001 *)
  wire _259_;
  (* keep = 32'h00000001 *)
  wire _260_;
  (* keep = 32'h00000001 *)
  wire _261_;
  (* keep = 32'h00000001 *)
  wire _262_;
  (* keep = 32'h00000001 *)
  wire _263_;
  (* keep = 32'h00000001 *)
  wire _264_;
  (* keep = 32'h00000001 *)
  wire _265_;
  (* keep = 32'h00000001 *)
  wire _266_;
  (* keep = 32'h00000001 *)
  wire _267_;
  (* keep = 32'h00000001 *)
  wire _268_;
  (* keep = 32'h00000001 *)
  wire _269_;
  (* keep = 32'h00000001 *)
  wire _270_;
  (* keep = 32'h00000001 *)
  wire _271_;
  (* keep = 32'h00000001 *)
  wire _272_;
  (* keep = 32'h00000001 *)
  wire _273_;
  (* keep = 32'h00000001 *)
  wire _274_;
  (* keep = 32'h00000001 *)
  wire _275_;
  (* keep = 32'h00000001 *)
  wire _276_;
  (* keep = 32'h00000001 *)
  wire _277_;
  (* keep = 32'h00000001 *)
  wire _278_;
  (* keep = 32'h00000001 *)
  wire _279_;
  (* keep = 32'h00000001 *)
  wire _280_;
  (* keep = 32'h00000001 *)
  wire _281_;
  (* keep = 32'h00000001 *)
  wire _282_;
  (* keep = 32'h00000001 *)
  wire _283_;
  (* keep = 32'h00000001 *)
  wire _284_;
  (* keep = 32'h00000001 *)
  wire _285_;
  (* keep = 32'h00000001 *)
  wire _286_;
  (* keep = 32'h00000001 *)
  wire _287_;
  (* keep = 32'h00000001 *)
  wire _288_;
  (* keep = 32'h00000001 *)
  wire _289_;
  (* keep = 32'h00000001 *)
  wire _290_;
  (* keep = 32'h00000001 *)
  wire _291_;
  (* keep = 32'h00000001 *)
  wire _292_;
  (* keep = 32'h00000001 *)
  wire _293_;
  (* keep = 32'h00000001 *)
  wire _294_;
  (* keep = 32'h00000001 *)
  wire _295_;
  (* keep = 32'h00000001 *)
  wire _296_;
  (* keep = 32'h00000001 *)
  wire _297_;
  (* keep = 32'h00000001 *)
  wire _298_;
  (* keep = 32'h00000001 *)
  wire _299_;
  (* keep = 32'h00000001 *)
  wire _300_;
  (* keep = 32'h00000001 *)
  wire _301_;
  (* keep = 32'h00000001 *)
  wire _302_;
  (* keep = 32'h00000001 *)
  wire _303_;
  (* keep = 32'h00000001 *)
  wire _304_;
  (* keep = 32'h00000001 *)
  wire _305_;
  (* keep = 32'h00000001 *)
  wire _306_;
  (* keep = 32'h00000001 *)
  wire _307_;
  (* keep = 32'h00000001 *)
  wire _308_;
  (* keep = 32'h00000001 *)
  wire _309_;
  (* keep = 32'h00000001 *)
  wire _310_;
  (* keep = 32'h00000001 *)
  wire _311_;
  (* keep = 32'h00000001 *)
  wire _312_;
  (* keep = 32'h00000001 *)
  wire _313_;
  (* keep = 32'h00000001 *)
  wire _314_;
  (* keep = 32'h00000001 *)
  wire _315_;
  (* keep = 32'h00000001 *)
  wire _316_;
  (* keep = 32'h00000001 *)
  wire _317_;
  (* keep = 32'h00000001 *)
  wire _318_;
  (* keep = 32'h00000001 *)
  wire _319_;
  (* keep = 32'h00000001 *)
  wire _320_;
  (* keep = 32'h00000001 *)
  wire _321_;
  (* keep = 32'h00000001 *)
  wire _322_;
  (* keep = 32'h00000001 *)
  wire _323_;
  (* keep = 32'h00000001 *)
  wire _324_;
  (* keep = 32'h00000001 *)
  wire _325_;
  (* keep = 32'h00000001 *)
  wire _326_;
  (* keep = 32'h00000001 *)
  wire _327_;
  (* keep = 32'h00000001 *)
  wire _328_;
  (* keep = 32'h00000001 *)
  wire _329_;
  (* keep = 32'h00000001 *)
  wire _330_;
  (* keep = 32'h00000001 *)
  wire _331_;
  (* keep = 32'h00000001 *)
  wire _332_;
  (* keep = 32'h00000001 *)
  wire _333_;
  (* keep = 32'h00000001 *)
  wire _334_;
  (* keep = 32'h00000001 *)
  wire _335_;
  (* keep = 32'h00000001 *)
  wire _336_;
  (* keep = 32'h00000001 *)
  wire _337_;
  (* keep = 32'h00000001 *)
  wire _338_;
  (* keep = 32'h00000001 *)
  wire _339_;
  (* keep = 32'h00000001 *)
  wire _340_;
  (* keep = 32'h00000001 *)
  wire _341_;
  (* keep = 32'h00000001 *)
  wire _342_;
  (* keep = 32'h00000001 *)
  wire _343_;
  (* keep = 32'h00000001 *)
  wire _344_;
  (* keep = 32'h00000001 *)
  wire _345_;
  (* keep = 32'h00000001 *)
  wire _346_;
  (* keep = 32'h00000001 *)
  wire _347_;
  (* keep = 32'h00000001 *)
  wire _348_;
  (* keep = 32'h00000001 *)
  wire _349_;
  (* keep = 32'h00000001 *)
  wire _350_;
  (* keep = 32'h00000001 *)
  wire _351_;
  (* keep = 32'h00000001 *)
  wire _352_;
  (* keep = 32'h00000001 *)
  wire _353_;
  (* keep = 32'h00000001 *)
  wire _354_;
  (* keep = 32'h00000001 *)
  wire _355_;
  (* keep = 32'h00000001 *)
  wire _356_;
  (* keep = 32'h00000001 *)
  wire _357_;
  (* keep = 32'h00000001 *)
  wire _358_;
  (* keep = 32'h00000001 *)
  wire _359_;
  (* keep = 32'h00000001 *)
  wire _360_;
  (* keep = 32'h00000001 *)
  wire _361_;
  (* keep = 32'h00000001 *)
  wire _362_;
  (* keep = 32'h00000001 *)
  wire _363_;
  (* keep = 32'h00000001 *)
  wire _364_;
  (* keep = 32'h00000001 *)
  wire _365_;
  (* keep = 32'h00000001 *)
  wire _366_;
  (* keep = 32'h00000001 *)
  wire _367_;
  (* keep = 32'h00000001 *)
  wire _368_;
  (* keep = 32'h00000001 *)
  wire _369_;
  (* keep = 32'h00000001 *)
  wire _370_;
  (* keep = 32'h00000001 *)
  wire _371_;
  (* keep = 32'h00000001 *)
  wire _372_;
  (* keep = 32'h00000001 *)
  wire _373_;
  (* keep = 32'h00000001 *)
  wire _374_;
  (* keep = 32'h00000001 *)
  wire _375_;
  (* keep = 32'h00000001 *)
  wire _376_;
  (* keep = 32'h00000001 *)
  wire _377_;
  (* keep = 32'h00000001 *)
  wire _378_;
  (* keep = 32'h00000001 *)
  wire _379_;
  (* keep = 32'h00000001 *)
  wire _380_;
  (* keep = 32'h00000001 *)
  wire _381_;
  (* keep = 32'h00000001 *)
  wire _382_;
  (* keep = 32'h00000001 *)
  wire _383_;
  (* keep = 32'h00000001 *)
  wire _384_;
  (* keep = 32'h00000001 *)
  wire _385_;
  (* keep = 32'h00000001 *)
  wire _386_;
  (* keep = 32'h00000001 *)
  wire _387_;
  (* keep = 32'h00000001 *)
  wire _388_;
  (* keep = 32'h00000001 *)
  wire _389_;
  (* keep = 32'h00000001 *)
  wire _390_;
  (* keep = 32'h00000001 *)
  wire _391_;
  (* keep = 32'h00000001 *)
  wire _392_;
  (* keep = 32'h00000001 *)
  wire _393_;
  (* keep = 32'h00000001 *)
  wire _394_;
  (* keep = 32'h00000001 *)
  wire _395_;
  (* keep = 32'h00000001 *)
  wire _396_;
  (* keep = 32'h00000001 *)
  wire _397_;
  (* keep = 32'h00000001 *)
  wire _398_;
  (* keep = 32'h00000001 *)
  wire _399_;
  (* keep = 32'h00000001 *)
  wire _400_;
  (* keep = 32'h00000001 *)
  wire _401_;
  (* keep = 32'h00000001 *)
  wire _402_;
  (* keep = 32'h00000001 *)
  wire _403_;
  (* keep = 32'h00000001 *)
  wire _404_;
  (* keep = 32'h00000001 *)
  wire _405_;
  (* keep = 32'h00000001 *)
  wire _406_;
  (* keep = 32'h00000001 *)
  wire _407_;
  (* keep = 32'h00000001 *)
  wire _408_;
  (* keep = 32'h00000001 *)
  wire _409_;
  (* keep = 32'h00000001 *)
  wire _410_;
  (* keep = 32'h00000001 *)
  wire _411_;
  (* keep = 32'h00000001 *)
  wire _412_;
  (* keep = 32'h00000001 *)
  wire _413_;
  (* keep = 32'h00000001 *)
  wire _414_;
  (* keep = 32'h00000001 *)
  wire _415_;
  (* keep = 32'h00000001 *)
  wire _416_;
  (* keep = 32'h00000001 *)
  wire _417_;
  (* keep = 32'h00000001 *)
  wire _418_;
  (* keep = 32'h00000001 *)
  wire _419_;
  (* keep = 32'h00000001 *)
  wire _420_;
  (* keep = 32'h00000001 *)
  wire _421_;
  (* keep = 32'h00000001 *)
  wire _422_;
  (* keep = 32'h00000001 *)
  wire _423_;
  (* keep = 32'h00000001 *)
  wire _424_;
  (* keep = 32'h00000001 *)
  wire _425_;
  (* keep = 32'h00000001 *)
  wire _426_;
  (* keep = 32'h00000001 *)
  wire _427_;
  (* keep = 32'h00000001 *)
  wire _428_;
  (* keep = 32'h00000001 *)
  wire _429_;
  (* keep = 32'h00000001 *)
  wire _430_;
  (* keep = 32'h00000001 *)
  wire _431_;
  (* keep = 32'h00000001 *)
  wire _432_;
  (* keep = 32'h00000001 *)
  wire _433_;
  (* keep = 32'h00000001 *)
  wire _434_;
  (* keep = 32'h00000001 *)
  wire _435_;
  (* keep = 32'h00000001 *)
  wire _436_;
  (* keep = 32'h00000001 *)
  wire _437_;
  (* keep = 32'h00000001 *)
  wire _438_;
  (* keep = 32'h00000001 *)
  wire _439_;
  (* keep = 32'h00000001 *)
  wire _440_;
  (* keep = 32'h00000001 *)
  wire _441_;
  (* keep = 32'h00000001 *)
  wire _442_;
  (* keep = 32'h00000001 *)
  wire _443_;
  (* keep = 32'h00000001 *)
  wire _444_;
  (* keep = 32'h00000001 *)
  wire _445_;
  (* keep = 32'h00000001 *)
  wire _446_;
  (* keep = 32'h00000001 *)
  wire _447_;
  (* keep = 32'h00000001 *)
  wire _448_;
  (* keep = 32'h00000001 *)
  wire _449_;
  (* keep = 32'h00000001 *)
  wire _450_;
  (* keep = 32'h00000001 *)
  wire _451_;
  (* keep = 32'h00000001 *)
  wire _452_;
  (* keep = 32'h00000001 *)
  wire _453_;
  (* keep = 32'h00000001 *)
  wire _454_;
  (* keep = 32'h00000001 *)
  wire _455_;
  (* keep = 32'h00000001 *)
  wire _456_;
  (* keep = 32'h00000001 *)
  wire _457_;
  (* keep = 32'h00000001 *)
  wire _458_;
  (* keep = 32'h00000001 *)
  wire _459_;
  (* keep = 32'h00000001 *)
  wire _460_;
  (* keep = 32'h00000001 *)
  wire _461_;
  (* keep = 32'h00000001 *)
  wire _462_;
  (* keep = 32'h00000001 *)
  wire _463_;
  (* keep = 32'h00000001 *)
  wire _464_;
  (* keep = 32'h00000001 *)
  wire _465_;
  (* keep = 32'h00000001 *)
  wire _466_;
  (* keep = 32'h00000001 *)
  wire _467_;
  (* keep = 32'h00000001 *)
  wire _468_;
  (* keep = 32'h00000001 *)
  wire _469_;
  (* keep = 32'h00000001 *)
  wire _470_;
  (* keep = 32'h00000001 *)
  wire _471_;
  (* keep = 32'h00000001 *)
  wire _472_;
  (* keep = 32'h00000001 *)
  wire _473_;
  (* keep = 32'h00000001 *)
  wire _474_;
  (* keep = 32'h00000001 *)
  wire _475_;
  (* keep = 32'h00000001 *)
  wire _476_;
  (* keep = 32'h00000001 *)
  wire _477_;
  (* keep = 32'h00000001 *)
  wire _478_;
  (* keep = 32'h00000001 *)
  wire _479_;
  (* keep = 32'h00000001 *)
  wire _480_;
  (* keep = 32'h00000001 *)
  wire _481_;
  (* keep = 32'h00000001 *)
  wire _482_;
  (* keep = 32'h00000001 *)
  wire _483_;
  (* keep = 32'h00000001 *)
  wire _484_;
  (* keep = 32'h00000001 *)
  wire _485_;
  (* keep = 32'h00000001 *)
  wire _486_;
  (* keep = 32'h00000001 *)
  wire _487_;
  (* keep = 32'h00000001 *)
  wire _488_;
  (* keep = 32'h00000001 *)
  wire _489_;
  (* keep = 32'h00000001 *)
  wire _490_;
  (* keep = 32'h00000001 *)
  wire _491_;
  (* keep = 32'h00000001 *)
  wire _492_;
  (* keep = 32'h00000001 *)
  wire _493_;
  (* keep = 32'h00000001 *)
  wire _494_;
  (* keep = 32'h00000001 *)
  wire _495_;
  (* keep = 32'h00000001 *)
  wire _496_;
  (* keep = 32'h00000001 *)
  wire _497_;
  (* keep = 32'h00000001 *)
  wire _498_;
  (* keep = 32'h00000001 *)
  wire _499_;
  (* keep = 32'h00000001 *)
  wire _500_;
  (* keep = 32'h00000001 *)
  wire _501_;
  (* keep = 32'h00000001 *)
  wire _502_;
  (* keep = 32'h00000001 *)
  wire _503_;
  (* keep = 32'h00000001 *)
  wire _504_;
  (* keep = 32'h00000001 *)
  wire _505_;
  (* keep = 32'h00000001 *)
  wire _506_;
  (* keep = 32'h00000001 *)
  wire _507_;
  (* keep = 32'h00000001 *)
  wire _508_;
  (* keep = 32'h00000001 *)
  wire _509_;
  (* keep = 32'h00000001 *)
  wire _510_;
  (* keep = 32'h00000001 *)
  wire _511_;
  (* keep = 32'h00000001 *)
  wire _512_;
  (* keep = 32'h00000001 *)
  wire _513_;
  (* keep = 32'h00000001 *)
  wire _514_;
  (* keep = 32'h00000001 *)
  wire _515_;
  (* keep = 32'h00000001 *)
  wire _516_;
  (* keep = 32'h00000001 *)
  wire _517_;
  (* keep = 32'h00000001 *)
  wire _518_;
  (* keep = 32'h00000001 *)
  wire _519_;
  (* keep = 32'h00000001 *)
  wire _520_;
  (* keep = 32'h00000001 *)
  wire _521_;
  (* keep = 32'h00000001 *)
  wire _522_;
  (* keep = 32'h00000001 *)
  wire _523_;
  (* keep = 32'h00000001 *)
  wire _524_;
  (* keep = 32'h00000001 *)
  wire _525_;
  (* keep = 32'h00000001 *)
  wire _526_;
  (* keep = 32'h00000001 *)
  wire _527_;
  (* keep = 32'h00000001 *)
  wire _528_;
  (* keep = 32'h00000001 *)
  wire _529_;
  (* keep = 32'h00000001 *)
  wire _530_;
  (* keep = 32'h00000001 *)
  wire _531_;
  (* keep = 32'h00000001 *)
  wire _532_;
  (* keep = 32'h00000001 *)
  wire _533_;
  (* keep = 32'h00000001 *)
  wire _534_;
  (* keep = 32'h00000001 *)
  wire _535_;
  (* keep = 32'h00000001 *)
  wire _536_;
  (* keep = 32'h00000001 *)
  wire _537_;
  (* keep = 32'h00000001 *)
  wire _538_;
  (* keep = 32'h00000001 *)
  wire _539_;
  (* keep = 32'h00000001 *)
  wire _540_;
  (* keep = 32'h00000001 *)
  wire _541_;
  (* keep = 32'h00000001 *)
  wire _542_;
  (* keep = 32'h00000001 *)
  wire _543_;
  (* keep = 32'h00000001 *)
  wire _544_;
  (* keep = 32'h00000001 *)
  wire _545_;
  (* keep = 32'h00000001 *)
  wire _546_;
  (* keep = 32'h00000001 *)
  wire _547_;
  (* keep = 32'h00000001 *)
  wire _548_;
  (* keep = 32'h00000001 *)
  wire _549_;
  (* keep = 32'h00000001 *)
  wire _550_;
  (* keep = 32'h00000001 *)
  wire _551_;
  (* keep = 32'h00000001 *)
  wire _552_;
  (* keep = 32'h00000001 *)
  wire _553_;
  (* keep = 32'h00000001 *)
  wire _554_;
  (* keep = 32'h00000001 *)
  wire _555_;
  (* keep = 32'h00000001 *)
  wire _556_;
  (* keep = 32'h00000001 *)
  wire _557_;
  (* keep = 32'h00000001 *)
  wire _558_;
  (* keep = 32'h00000001 *)
  wire _559_;
  (* keep = 32'h00000001 *)
  wire _560_;
  (* keep = 32'h00000001 *)
  wire _561_;
  (* keep = 32'h00000001 *)
  wire _562_;
  (* keep = 32'h00000001 *)
  wire _563_;
  (* keep = 32'h00000001 *)
  wire _564_;
  (* keep = 32'h00000001 *)
  wire _565_;
  (* keep = 32'h00000001 *)
  wire _566_;
  (* keep = 32'h00000001 *)
  wire _567_;
  (* keep = 32'h00000001 *)
  wire _568_;
  (* keep = 32'h00000001 *)
  wire _569_;
  (* keep = 32'h00000001 *)
  wire _570_;
  (* keep = 32'h00000001 *)
  wire _571_;
  (* keep = 32'h00000001 *)
  wire _572_;
  (* keep = 32'h00000001 *)
  wire _573_;
  (* keep = 32'h00000001 *)
  wire _574_;
  (* keep = 32'h00000001 *)
  wire _575_;
  (* keep = 32'h00000001 *)
  wire _576_;
  (* keep = 32'h00000001 *)
  wire _577_;
  (* keep = 32'h00000001 *)
  wire _578_;
  (* keep = 32'h00000001 *)
  wire _579_;
  (* keep = 32'h00000001 *)
  wire _580_;
  (* keep = 32'h00000001 *)
  wire _581_;
  (* keep = 32'h00000001 *)
  wire _582_;
  (* keep = 32'h00000001 *)
  wire _583_;
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:11" *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:11" *)
  wire clk;
  (* hdlname = "comb_stage[0].comb_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:10" *)
  wire [8:0] \comb_stage[0].comb_inst.data_out ;
  (* hdlname = "comb_stage[0].comb_inst data_reg[0]" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:13" *)
  wire [7:0] \comb_stage[0].comb_inst.data_reg[0] ;
  (* hdlname = "comb_stage[1].comb_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:10" *)
  wire [9:0] \comb_stage[1].comb_inst.data_out ;
  (* hdlname = "comb_stage[1].comb_inst data_reg[0]" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:13" *)
  wire [8:0] \comb_stage[1].comb_inst.data_reg[0] ;
  (* hdlname = "comb_stage[2].comb_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:10" *)
  wire [10:0] \comb_stage[2].comb_inst.data_out ;
  (* hdlname = "comb_stage[2].comb_inst data_reg[0]" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:13" *)
  wire [9:0] \comb_stage[2].comb_inst.data_reg[0] ;
  (* hdlname = "comb_stage[3].comb_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:10" *)
  wire [10:0] \comb_stage[3].comb_inst.data_out ;
  (* hdlname = "comb_stage[3].comb_inst data_reg[0]" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/comb.sv:13" *)
  wire [10:0] \comb_stage[3].comb_inst.data_reg[0] ;
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:14" *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:14" *)
  wire [7:0] data_in;
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:15" *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:15" *)
  wire [13:0] data_out;
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:13" *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:13" *)
  wire in_dv;
  (* hdlname = "int_stage[0].int_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/integrator.sv:9" *)
  wire [10:0] \int_stage[0].int_inst.data_out ;
  (* hdlname = "int_stage[1].int_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/integrator.sv:9" *)
  wire [11:0] \int_stage[1].int_inst.data_out ;
  (* hdlname = "int_stage[2].int_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/integrator.sv:9" *)
  wire [12:0] \int_stage[2].int_inst.data_out ;
  (* hdlname = "int_stage[3].int_inst data_out" *)
  (* keep = 32'h00000001 *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/integrator.sv:9" *)
  wire [13:0] \int_stage[3].int_inst.data_out ;
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:12" *)
  (* src = "/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/bitstream_simulation_new/test/ArchBench/Testcases/cic_integrator/try/./rtl/cic_i.sv:12" *)
  wire reset_n;
  \$lut  #(
    .LUT(32'h87780000),
    .WIDTH(32'h00000005)
  ) _584_ (
    .A({ reset_n, data_out[1], \int_stage[2].int_inst.data_out [1], data_out[0], \int_stage[2].int_inst.data_out [0] }),
    .Y(_038_)
  );
  \$lut  #(
    .LUT(64'h077ff880f880077f),
    .WIDTH(32'h00000006)
  ) _585_ (
    .A({ data_out[2], \int_stage[2].int_inst.data_out [2], data_out[1], \int_stage[2].int_inst.data_out [1], data_out[0], \int_stage[2].int_inst.data_out [0] }),
    .Y(_130_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _586_ (
    .A({ reset_n, _130_ }),
    .Y(_039_)
  );
  \$lut  #(
    .LUT(64'hfce8e8c0e8c0e8c0),
    .WIDTH(32'h00000006)
  ) _587_ (
    .A({ \int_stage[2].int_inst.data_out [0], data_out[0], data_out[1], data_out[2], \int_stage[2].int_inst.data_out [2:1] }),
    .Y(_131_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _588_ (
    .A({ reset_n, _131_, data_out[3], \int_stage[2].int_inst.data_out [3] }),
    .Y(_040_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _589_ (
    .A({ reset_n, data_out[4], \int_stage[2].int_inst.data_out [4], _131_, data_out[3], \int_stage[2].int_inst.data_out [3] }),
    .Y(_041_)
  );
  \$lut  #(
    .LUT(16'hf888),
    .WIDTH(32'h00000004)
  ) _590_ (
    .A({ data_out[3], \int_stage[2].int_inst.data_out [3], data_out[4], \int_stage[2].int_inst.data_out [4] }),
    .Y(_132_)
  );
  \$lut  #(
    .LUT(16'heee8),
    .WIDTH(32'h00000004)
  ) _591_ (
    .A({ data_out[3], \int_stage[2].int_inst.data_out [3], data_out[4], \int_stage[2].int_inst.data_out [4] }),
    .Y(_133_)
  );
  \$lut  #(
    .LUT(64'he01f1fe000000000),
    .WIDTH(32'h00000006)
  ) _592_ (
    .A({ reset_n, data_out[5], \int_stage[2].int_inst.data_out [5], _133_, _132_, _131_ }),
    .Y(_042_)
  );
  \$lut  #(
    .LUT(32'hfee0f000),
    .WIDTH(32'h00000005)
  ) _593_ (
    .A({ _133_, data_out[5], \int_stage[2].int_inst.data_out [5], _132_, _131_ }),
    .Y(_134_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _594_ (
    .A({ reset_n, _134_, data_out[6], \int_stage[2].int_inst.data_out [6] }),
    .Y(_043_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _595_ (
    .A({ reset_n, data_out[7], \int_stage[2].int_inst.data_out [7], _134_, data_out[6], \int_stage[2].int_inst.data_out [6] }),
    .Y(_044_)
  );
  \$lut  #(
    .LUT(64'hfffff888f888f888),
    .WIDTH(32'h00000006)
  ) _596_ (
    .A({ data_out[5], \int_stage[2].int_inst.data_out [5], data_out[6], \int_stage[2].int_inst.data_out [6], data_out[7], \int_stage[2].int_inst.data_out [7] }),
    .Y(_135_)
  );
  \$lut  #(
    .LUT(64'hfce8fce8fce8e8c0),
    .WIDTH(32'h00000006)
  ) _597_ (
    .A({ \int_stage[2].int_inst.data_out [5], data_out[5], data_out[6], data_out[7], \int_stage[2].int_inst.data_out [7:6] }),
    .Y(_136_)
  );
  \$lut  #(
    .LUT(32'hfef00000),
    .WIDTH(32'h00000005)
  ) _598_ (
    .A({ _136_, _133_, _135_, _131_, _132_ }),
    .Y(_137_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _599_ (
    .A({ reset_n, _137_, data_out[8], \int_stage[2].int_inst.data_out [8] }),
    .Y(_045_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _600_ (
    .A({ reset_n, data_out[9], \int_stage[2].int_inst.data_out [9], _137_, data_out[8], \int_stage[2].int_inst.data_out [8] }),
    .Y(_046_)
  );
  \$lut  #(
    .LUT(16'he888),
    .WIDTH(32'h00000004)
  ) _601_ (
    .A({ data_out[8], \int_stage[2].int_inst.data_out [8], data_out[9], \int_stage[2].int_inst.data_out [9] }),
    .Y(_138_)
  );
  \$lut  #(
    .LUT(16'heee8),
    .WIDTH(32'h00000004)
  ) _602_ (
    .A({ data_out[8], \int_stage[2].int_inst.data_out [8], data_out[9], \int_stage[2].int_inst.data_out [9] }),
    .Y(_139_)
  );
  \$lut  #(
    .LUT(64'ha55ac33c00000000),
    .WIDTH(32'h00000006)
  ) _603_ (
    .A({ reset_n, _137_, data_out[10], \int_stage[2].int_inst.data_out [10], _138_, _139_ }),
    .Y(_047_)
  );
  \$lut  #(
    .LUT(64'hffff111f111fffff),
    .WIDTH(32'h00000006)
  ) _604_ (
    .A({ data_out[10], \int_stage[2].int_inst.data_out [10], data_out[8], \int_stage[2].int_inst.data_out [8], data_out[9], \int_stage[2].int_inst.data_out [9] }),
    .Y(_140_)
  );
  \$lut  #(
    .LUT(64'hfce8e8c0e8c0e8c0),
    .WIDTH(32'h00000006)
  ) _605_ (
    .A({ \int_stage[2].int_inst.data_out [8], data_out[8], data_out[9], data_out[10], \int_stage[2].int_inst.data_out [10:9] }),
    .Y(_141_)
  );
  \$lut  #(
    .LUT(64'hf40b0bf400000000),
    .WIDTH(32'h00000006)
  ) _606_ (
    .A({ reset_n, data_out[11], \int_stage[2].int_inst.data_out [11], _141_, _137_, _140_ }),
    .Y(_048_)
  );
  \$lut  #(
    .LUT(32'hffbaba00),
    .WIDTH(32'h00000005)
  ) _607_ (
    .A({ data_out[11], \int_stage[2].int_inst.data_out [11], _137_, _140_, _141_ }),
    .Y(_142_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _608_ (
    .A({ reset_n, _142_, data_out[12], \int_stage[2].int_inst.data_out [12] }),
    .Y(_049_)
  );
  \$lut  #(
    .LUT(32'hb4d20000),
    .WIDTH(32'h00000005)
  ) _609_ (
    .A({ reset_n, _142_, data_out[13:12], \int_stage[2].int_inst.data_out [12] }),
    .Y(_050_)
  );
  \$lut  #(
    .LUT(4'hb),
    .WIDTH(32'h00000002)
  ) _610_ (
    .A({ reset_n, in_dv }),
    .Y(_000_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _611_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_reg[0] [0], data_in[0] }),
    .Y(_051_)
  );
  \$lut  #(
    .LUT(32'h4bb40000),
    .WIDTH(32'h00000005)
  ) _612_ (
    .A({ reset_n, data_in[1], \comb_stage[0].comb_inst.data_reg[0] [1:0], data_in[0] }),
    .Y(_052_)
  );
  \$lut  #(
    .LUT(64'hbf0b40f440f4bf0b),
    .WIDTH(32'h00000006)
  ) _613_ (
    .A({ data_in[2], \comb_stage[0].comb_inst.data_reg[0] [2], data_in[1], \comb_stage[0].comb_inst.data_reg[0] [1:0], data_in[0] }),
    .Y(_143_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _614_ (
    .A({ reset_n, _143_ }),
    .Y(_053_)
  );
  \$lut  #(
    .LUT(64'h0c8e8ecf0c8e0c8e),
    .WIDTH(32'h00000006)
  ) _615_ (
    .A({ \comb_stage[0].comb_inst.data_reg[0] [0], data_in[0], data_in[1], data_in[2], \comb_stage[0].comb_inst.data_reg[0] [2:1] }),
    .Y(_144_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _616_ (
    .A({ reset_n, _144_, data_in[3], \comb_stage[0].comb_inst.data_reg[0] [3] }),
    .Y(_054_)
  );
  \$lut  #(
    .LUT(64'hb24d4db200000000),
    .WIDTH(32'h00000006)
  ) _617_ (
    .A({ reset_n, data_in[4], \comb_stage[0].comb_inst.data_reg[0] [4], _144_, data_in[3], \comb_stage[0].comb_inst.data_reg[0] [3] }),
    .Y(_055_)
  );
  \$lut  #(
    .LUT(32'h7f133701),
    .WIDTH(32'h00000005)
  ) _618_ (
    .A({ data_in[3], data_in[4], _144_, \comb_stage[0].comb_inst.data_reg[0] [4:3] }),
    .Y(_145_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _619_ (
    .A({ reset_n, _145_, data_in[5], \comb_stage[0].comb_inst.data_reg[0] [5] }),
    .Y(_056_)
  );
  \$lut  #(
    .LUT(8'h2b),
    .WIDTH(32'h00000003)
  ) _620_ (
    .A({ _145_, data_in[5], \comb_stage[0].comb_inst.data_reg[0] [5] }),
    .Y(_146_)
  );
  \$lut  #(
    .LUT(64'h2bd4d42b00000000),
    .WIDTH(32'h00000006)
  ) _621_ (
    .A({ reset_n, data_in[6], \comb_stage[0].comb_inst.data_reg[0] [6], _145_, data_in[5], \comb_stage[0].comb_inst.data_reg[0] [5] }),
    .Y(_057_)
  );
  \$lut  #(
    .LUT(64'hb24d4db200000000),
    .WIDTH(32'h00000006)
  ) _622_ (
    .A({ reset_n, data_in[7], \comb_stage[0].comb_inst.data_reg[0] [7], _146_, data_in[6], \comb_stage[0].comb_inst.data_reg[0] [6] }),
    .Y(_058_)
  );
  \$lut  #(
    .LUT(64'hbf233b0200000000),
    .WIDTH(32'h00000006)
  ) _623_ (
    .A({ reset_n, _146_, data_in[7:6], \comb_stage[0].comb_inst.data_reg[0] [7:6] }),
    .Y(_059_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _624_ (
    .A({ data_in[0], reset_n }),
    .Y(_060_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _625_ (
    .A({ data_in[1], reset_n }),
    .Y(_061_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _626_ (
    .A({ data_in[2], reset_n }),
    .Y(_062_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _627_ (
    .A({ data_in[3], reset_n }),
    .Y(_063_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _628_ (
    .A({ data_in[4], reset_n }),
    .Y(_064_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _629_ (
    .A({ data_in[5], reset_n }),
    .Y(_065_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _630_ (
    .A({ data_in[6], reset_n }),
    .Y(_066_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _631_ (
    .A({ data_in[7], reset_n }),
    .Y(_067_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _632_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_reg[0] [0], \comb_stage[0].comb_inst.data_out [0] }),
    .Y(_068_)
  );
  \$lut  #(
    .LUT(32'h4bb40000),
    .WIDTH(32'h00000005)
  ) _633_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_out [1], \comb_stage[1].comb_inst.data_reg[0] [1:0], \comb_stage[0].comb_inst.data_out [0] }),
    .Y(_069_)
  );
  \$lut  #(
    .LUT(64'hbf0b40f440f4bf0b),
    .WIDTH(32'h00000006)
  ) _634_ (
    .A({ \comb_stage[0].comb_inst.data_out [2], \comb_stage[1].comb_inst.data_reg[0] [2], \comb_stage[0].comb_inst.data_out [1], \comb_stage[1].comb_inst.data_reg[0] [1:0], \comb_stage[0].comb_inst.data_out [0] }),
    .Y(_147_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _635_ (
    .A({ reset_n, _147_ }),
    .Y(_070_)
  );
  \$lut  #(
    .LUT(64'h0c8e8ecf0c8e0c8e),
    .WIDTH(32'h00000006)
  ) _636_ (
    .A({ \comb_stage[1].comb_inst.data_reg[0] [0], \comb_stage[0].comb_inst.data_out [0], \comb_stage[0].comb_inst.data_out [1], \comb_stage[0].comb_inst.data_out [2], \comb_stage[1].comb_inst.data_reg[0] [2:1] }),
    .Y(_148_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _637_ (
    .A({ reset_n, _148_, \comb_stage[0].comb_inst.data_out [3], \comb_stage[1].comb_inst.data_reg[0] [3] }),
    .Y(_071_)
  );
  \$lut  #(
    .LUT(64'hb24d4db200000000),
    .WIDTH(32'h00000006)
  ) _638_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_out [4], \comb_stage[1].comb_inst.data_reg[0] [4], _148_, \comb_stage[0].comb_inst.data_out [3], \comb_stage[1].comb_inst.data_reg[0] [3] }),
    .Y(_072_)
  );
  \$lut  #(
    .LUT(32'h7f133701),
    .WIDTH(32'h00000005)
  ) _639_ (
    .A({ \comb_stage[0].comb_inst.data_out [3], \comb_stage[0].comb_inst.data_out [4], _148_, \comb_stage[1].comb_inst.data_reg[0] [4:3] }),
    .Y(_149_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _640_ (
    .A({ reset_n, _149_, \comb_stage[0].comb_inst.data_out [5], \comb_stage[1].comb_inst.data_reg[0] [5] }),
    .Y(_073_)
  );
  \$lut  #(
    .LUT(64'h2bd4d42b00000000),
    .WIDTH(32'h00000006)
  ) _641_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_out [6], \comb_stage[1].comb_inst.data_reg[0] [6], _149_, \comb_stage[0].comb_inst.data_out [5], \comb_stage[1].comb_inst.data_reg[0] [5] }),
    .Y(_074_)
  );
  \$lut  #(
    .LUT(32'hf3717130),
    .WIDTH(32'h00000005)
  ) _642_ (
    .A({ _149_, \comb_stage[0].comb_inst.data_out [5], \comb_stage[0].comb_inst.data_out [6], \comb_stage[1].comb_inst.data_reg[0] [6:5] }),
    .Y(_150_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _643_ (
    .A({ reset_n, _150_, \comb_stage[0].comb_inst.data_out [7], \comb_stage[1].comb_inst.data_reg[0] [7] }),
    .Y(_075_)
  );
  \$lut  #(
    .LUT(64'h2bd4d42b00000000),
    .WIDTH(32'h00000006)
  ) _644_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_out [8], \comb_stage[1].comb_inst.data_reg[0] [8], _150_, \comb_stage[0].comb_inst.data_out [7], \comb_stage[1].comb_inst.data_reg[0] [7] }),
    .Y(_076_)
  );
  \$lut  #(
    .LUT(64'h3bbf022300000000),
    .WIDTH(32'h00000006)
  ) _645_ (
    .A({ reset_n, \comb_stage[0].comb_inst.data_out [8], _150_, \comb_stage[0].comb_inst.data_out [7], \comb_stage[1].comb_inst.data_reg[0] [8:7] }),
    .Y(_077_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _646_ (
    .A({ \comb_stage[0].comb_inst.data_out [0], reset_n }),
    .Y(_078_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _647_ (
    .A({ \comb_stage[0].comb_inst.data_out [1], reset_n }),
    .Y(_079_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _648_ (
    .A({ \comb_stage[0].comb_inst.data_out [2], reset_n }),
    .Y(_080_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _649_ (
    .A({ \comb_stage[0].comb_inst.data_out [3], reset_n }),
    .Y(_081_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _650_ (
    .A({ \comb_stage[0].comb_inst.data_out [4], reset_n }),
    .Y(_082_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _651_ (
    .A({ \comb_stage[0].comb_inst.data_out [5], reset_n }),
    .Y(_083_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _652_ (
    .A({ \comb_stage[0].comb_inst.data_out [6], reset_n }),
    .Y(_084_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _653_ (
    .A({ \comb_stage[0].comb_inst.data_out [7], reset_n }),
    .Y(_085_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _654_ (
    .A({ \comb_stage[0].comb_inst.data_out [8], reset_n }),
    .Y(_086_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _655_ (
    .A({ reset_n, \comb_stage[2].comb_inst.data_reg[0] [0], \comb_stage[1].comb_inst.data_out [0] }),
    .Y(_087_)
  );
  \$lut  #(
    .LUT(32'h4bb40000),
    .WIDTH(32'h00000005)
  ) _656_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_out [1], \comb_stage[2].comb_inst.data_reg[0] [1:0], \comb_stage[1].comb_inst.data_out [0] }),
    .Y(_088_)
  );
  \$lut  #(
    .LUT(64'hbf0b40f440f4bf0b),
    .WIDTH(32'h00000006)
  ) _657_ (
    .A({ \comb_stage[1].comb_inst.data_out [2], \comb_stage[2].comb_inst.data_reg[0] [2], \comb_stage[1].comb_inst.data_out [1], \comb_stage[2].comb_inst.data_reg[0] [1:0], \comb_stage[1].comb_inst.data_out [0] }),
    .Y(_151_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _658_ (
    .A({ reset_n, _151_ }),
    .Y(_089_)
  );
  \$lut  #(
    .LUT(64'h0c8e8ecf0c8e0c8e),
    .WIDTH(32'h00000006)
  ) _659_ (
    .A({ \comb_stage[2].comb_inst.data_reg[0] [0], \comb_stage[1].comb_inst.data_out [0], \comb_stage[1].comb_inst.data_out [1], \comb_stage[1].comb_inst.data_out [2], \comb_stage[2].comb_inst.data_reg[0] [2:1] }),
    .Y(_152_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _660_ (
    .A({ reset_n, _152_, \comb_stage[1].comb_inst.data_out [3], \comb_stage[2].comb_inst.data_reg[0] [3] }),
    .Y(_090_)
  );
  \$lut  #(
    .LUT(64'hb24d4db200000000),
    .WIDTH(32'h00000006)
  ) _661_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_out [4], \comb_stage[2].comb_inst.data_reg[0] [4], _152_, \comb_stage[1].comb_inst.data_out [3], \comb_stage[2].comb_inst.data_reg[0] [3] }),
    .Y(_091_)
  );
  \$lut  #(
    .LUT(16'h4f44),
    .WIDTH(32'h00000004)
  ) _662_ (
    .A({ \comb_stage[2].comb_inst.data_reg[0] [3], \comb_stage[1].comb_inst.data_out [3], \comb_stage[2].comb_inst.data_reg[0] [4], \comb_stage[1].comb_inst.data_out [4] }),
    .Y(_153_)
  );
  \$lut  #(
    .LUT(16'h7150),
    .WIDTH(32'h00000004)
  ) _663_ (
    .A({ \comb_stage[1].comb_inst.data_out [3], \comb_stage[1].comb_inst.data_out [4], \comb_stage[2].comb_inst.data_reg[0] [3], \comb_stage[2].comb_inst.data_reg[0] [4] }),
    .Y(_154_)
  );
  \$lut  #(
    .LUT(64'h0ef1f10e00000000),
    .WIDTH(32'h00000006)
  ) _664_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_out [5], \comb_stage[2].comb_inst.data_reg[0] [5], _154_, _153_, _152_ }),
    .Y(_092_)
  );
  \$lut  #(
    .LUT(32'habff00ab),
    .WIDTH(32'h00000005)
  ) _665_ (
    .A({ \comb_stage[1].comb_inst.data_out [5], \comb_stage[2].comb_inst.data_reg[0] [5], _153_, _152_, _154_ }),
    .Y(_155_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _666_ (
    .A({ reset_n, _155_, \comb_stage[1].comb_inst.data_out [6], \comb_stage[2].comb_inst.data_reg[0] [6] }),
    .Y(_093_)
  );
  \$lut  #(
    .LUT(32'h0c8e8ecf),
    .WIDTH(32'h00000005)
  ) _667_ (
    .A({ _155_, \comb_stage[1].comb_inst.data_out [6], \comb_stage[1].comb_inst.data_out [7], \comb_stage[2].comb_inst.data_reg[0] [7:6] }),
    .Y(_156_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _668_ (
    .A({ reset_n, _156_, \comb_stage[1].comb_inst.data_out [8], \comb_stage[2].comb_inst.data_reg[0] [8] }),
    .Y(_095_)
  );
  \$lut  #(
    .LUT(64'h0c8e8ecf0c8e0c8e),
    .WIDTH(32'h00000006)
  ) _669_ (
    .A({ \comb_stage[3].comb_inst.data_reg[0] [0], \comb_stage[2].comb_inst.data_out [0], \comb_stage[2].comb_inst.data_out [1], \comb_stage[2].comb_inst.data_out [2], \comb_stage[3].comb_inst.data_reg[0] [2:1] }),
    .Y(_157_)
  );
  \$lut  #(
    .LUT(64'hd42b2bd400000000),
    .WIDTH(32'h00000006)
  ) _670_ (
    .A({ reset_n, \comb_stage[2].comb_inst.data_out [4], \comb_stage[3].comb_inst.data_reg[0] [4], _157_, \comb_stage[3].comb_inst.data_reg[0] [3], \comb_stage[2].comb_inst.data_out [3] }),
    .Y(_112_)
  );
  \$lut  #(
    .LUT(64'h2bd4d42b00000000),
    .WIDTH(32'h00000006)
  ) _671_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_out [7], \comb_stage[2].comb_inst.data_reg[0] [7], _155_, \comb_stage[1].comb_inst.data_out [6], \comb_stage[2].comb_inst.data_reg[0] [6] }),
    .Y(_094_)
  );
  \$lut  #(
    .LUT(32'h5ddf0445),
    .WIDTH(32'h00000005)
  ) _672_ (
    .A({ \comb_stage[2].comb_inst.data_out [4], _157_, \comb_stage[3].comb_inst.data_reg[0] [3], \comb_stage[2].comb_inst.data_out [3], \comb_stage[3].comb_inst.data_reg[0] [4] }),
    .Y(_158_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _673_ (
    .A({ reset_n, _158_, \comb_stage[2].comb_inst.data_out [5], \comb_stage[3].comb_inst.data_reg[0] [5] }),
    .Y(_113_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _674_ (
    .A({ reset_n, _157_, \comb_stage[3].comb_inst.data_reg[0] [3], \comb_stage[2].comb_inst.data_out [3] }),
    .Y(_111_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _675_ (
    .A({ \comb_stage[1].comb_inst.data_out [0], reset_n }),
    .Y(_098_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _676_ (
    .A({ \comb_stage[1].comb_inst.data_out [1], reset_n }),
    .Y(_099_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _677_ (
    .A({ \comb_stage[1].comb_inst.data_out [2], reset_n }),
    .Y(_100_)
  );
  \$lut  #(
    .LUT(64'hbf233b0200000000),
    .WIDTH(32'h00000006)
  ) _678_ (
    .A({ reset_n, _156_, \comb_stage[1].comb_inst.data_out [9:8], \comb_stage[2].comb_inst.data_reg[0] [9:8] }),
    .Y(_097_)
  );
  \$lut  #(
    .LUT(64'hbf0b40f440f4bf0b),
    .WIDTH(32'h00000006)
  ) _679_ (
    .A({ \comb_stage[2].comb_inst.data_out [2], \comb_stage[3].comb_inst.data_reg[0] [2], \comb_stage[2].comb_inst.data_out [1], \comb_stage[3].comb_inst.data_reg[0] [1:0], \comb_stage[2].comb_inst.data_out [0] }),
    .Y(_159_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _680_ (
    .A({ reset_n, _159_ }),
    .Y(_110_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _681_ (
    .A({ \comb_stage[1].comb_inst.data_out [4], reset_n }),
    .Y(_102_)
  );
  \$lut  #(
    .LUT(64'h4f44ffff4f444f44),
    .WIDTH(32'h00000006)
  ) _682_ (
    .A({ \comb_stage[3].comb_inst.data_reg[0] [4], \comb_stage[2].comb_inst.data_out [4], \comb_stage[3].comb_inst.data_reg[0] [3], \comb_stage[2].comb_inst.data_out [3], \comb_stage[3].comb_inst.data_reg[0] [5], \comb_stage[2].comb_inst.data_out [5] }),
    .Y(_160_)
  );
  \$lut  #(
    .LUT(64'h7f13370177113300),
    .WIDTH(32'h00000006)
  ) _683_ (
    .A({ \comb_stage[2].comb_inst.data_out [3], \comb_stage[2].comb_inst.data_out [4], \comb_stage[2].comb_inst.data_out [5], \comb_stage[3].comb_inst.data_reg[0] [3], \comb_stage[3].comb_inst.data_reg[0] [5:4] }),
    .Y(_161_)
  );
  \$lut  #(
    .LUT(64'h0ef1f10e00000000),
    .WIDTH(32'h00000006)
  ) _684_ (
    .A({ reset_n, \comb_stage[2].comb_inst.data_out [6], \comb_stage[3].comb_inst.data_reg[0] [6], _161_, _160_, _157_ }),
    .Y(_114_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _685_ (
    .A({ \comb_stage[1].comb_inst.data_out [3], reset_n }),
    .Y(_101_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _686_ (
    .A({ \comb_stage[1].comb_inst.data_out [5], reset_n }),
    .Y(_103_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _687_ (
    .A({ \comb_stage[1].comb_inst.data_out [7], reset_n }),
    .Y(_105_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _688_ (
    .A({ \comb_stage[1].comb_inst.data_out [6], reset_n }),
    .Y(_104_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _689_ (
    .A({ \comb_stage[1].comb_inst.data_out [8], reset_n }),
    .Y(_106_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _690_ (
    .A({ \comb_stage[1].comb_inst.data_out [9], reset_n }),
    .Y(_107_)
  );
  \$lut  #(
    .LUT(32'h4bb40000),
    .WIDTH(32'h00000005)
  ) _691_ (
    .A({ reset_n, \comb_stage[2].comb_inst.data_out [1], \comb_stage[3].comb_inst.data_reg[0] [1:0], \comb_stage[2].comb_inst.data_out [0] }),
    .Y(_109_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _692_ (
    .A({ reset_n, \comb_stage[3].comb_inst.data_reg[0] [0], \comb_stage[2].comb_inst.data_out [0] }),
    .Y(_108_)
  );
  \$lut  #(
    .LUT(64'hb24d4db200000000),
    .WIDTH(32'h00000006)
  ) _693_ (
    .A({ reset_n, \comb_stage[1].comb_inst.data_out [9], \comb_stage[2].comb_inst.data_reg[0] [9], _156_, \comb_stage[1].comb_inst.data_out [8], \comb_stage[2].comb_inst.data_reg[0] [8] }),
    .Y(_096_)
  );
  \$lut  #(
    .LUT(16'h111f),
    .WIDTH(32'h00000004)
  ) _694_ (
    .A({ \int_stage[0].int_inst.data_out [2], \comb_stage[3].comb_inst.data_out [2], \int_stage[0].int_inst.data_out [3], \comb_stage[3].comb_inst.data_out [3] }),
    .Y(_162_)
  );
  \$lut  #(
    .LUT(32'he8880000),
    .WIDTH(32'h00000005)
  ) _695_ (
    .A({ in_dv, \comb_stage[3].comb_inst.data_out [0], \int_stage[0].int_inst.data_out [0], \int_stage[0].int_inst.data_out [1], \comb_stage[3].comb_inst.data_out [1] }),
    .Y(_163_)
  );
  \$lut  #(
    .LUT(16'heee8),
    .WIDTH(32'h00000004)
  ) _696_ (
    .A({ \int_stage[0].int_inst.data_out [4], \comb_stage[3].comb_inst.data_out [4], \comb_stage[3].comb_inst.data_out [5], \int_stage[0].int_inst.data_out [5] }),
    .Y(_164_)
  );
  \$lut  #(
    .LUT(32'he8880000),
    .WIDTH(32'h00000005)
  ) _697_ (
    .A({ in_dv, \int_stage[0].int_inst.data_out [4], \comb_stage[3].comb_inst.data_out [4], \comb_stage[3].comb_inst.data_out [5], \int_stage[0].int_inst.data_out [5] }),
    .Y(_165_)
  );
  \$lut  #(
    .LUT(32'he8880000),
    .WIDTH(32'h00000005)
  ) _698_ (
    .A({ in_dv, \comb_stage[3].comb_inst.data_out [2], \int_stage[0].int_inst.data_out [2], \int_stage[0].int_inst.data_out [3], \comb_stage[3].comb_inst.data_out [3] }),
    .Y(_166_)
  );
  \$lut  #(
    .LUT(16'hf888),
    .WIDTH(32'h00000004)
  ) _699_ (
    .A({ \int_stage[0].int_inst.data_out [7], \comb_stage[3].comb_inst.data_out [7:6], \int_stage[0].int_inst.data_out [6] }),
    .Y(_167_)
  );
  \$lut  #(
    .LUT(64'h000000000f0f0fdf),
    .WIDTH(32'h00000006)
  ) _700_ (
    .A({ _167_, _166_, _165_, _164_, _162_, _163_ }),
    .Y(_168_)
  );
  \$lut  #(
    .LUT(16'heee8),
    .WIDTH(32'h00000004)
  ) _701_ (
    .A({ \comb_stage[3].comb_inst.data_out [6], \int_stage[0].int_inst.data_out [6], \int_stage[0].int_inst.data_out [7], \comb_stage[3].comb_inst.data_out [7] }),
    .Y(_169_)
  );
  \$lut  #(
    .LUT(64'h73bf8c4000000000),
    .WIDTH(32'h00000006)
  ) _702_ (
    .A({ reset_n, \int_stage[0].int_inst.data_out [8], \comb_stage[3].comb_inst.data_out [8], _169_, in_dv, _168_ }),
    .Y(_009_)
  );
  \$lut  #(
    .LUT(64'hf4400bbfffffffff),
    .WIDTH(32'h00000006)
  ) _703_ (
    .A({ in_dv, \comb_stage[3].comb_inst.data_out [9], \int_stage[0].int_inst.data_out [8], \comb_stage[3].comb_inst.data_out [8], _169_, _168_ }),
    .Y(_170_)
  );
  \$lut  #(
    .LUT(8'h90),
    .WIDTH(32'h00000003)
  ) _704_ (
    .A({ reset_n, _170_, \int_stage[0].int_inst.data_out [9] }),
    .Y(_010_)
  );
  \$lut  #(
    .LUT(32'hfff40000),
    .WIDTH(32'h00000005)
  ) _705_ (
    .A({ _164_, _165_, _166_, _163_, _162_ }),
    .Y(_171_)
  );
  \$lut  #(
    .LUT(64'h344cf880cbb3077f),
    .WIDTH(32'h00000006)
  ) _706_ (
    .A({ \int_stage[0].int_inst.data_out [7], \comb_stage[3].comb_inst.data_out [7], _171_, \int_stage[0].int_inst.data_out [6], in_dv, \comb_stage[3].comb_inst.data_out [6] }),
    .Y(_172_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _707_ (
    .A({ reset_n, _172_ }),
    .Y(_008_)
  );
  \$lut  #(
    .LUT(32'h87780000),
    .WIDTH(32'h00000005)
  ) _708_ (
    .A({ reset_n, _171_, \int_stage[0].int_inst.data_out [6], \comb_stage[3].comb_inst.data_out [6], in_dv }),
    .Y(_007_)
  );
  \$lut  #(
    .LUT(64'h000b0fbffff4f040),
    .WIDTH(32'h00000006)
  ) _709_ (
    .A({ \comb_stage[3].comb_inst.data_out [5], \int_stage[0].int_inst.data_out [4], _166_, \comb_stage[3].comb_inst.data_out [4], _163_, _162_ }),
    .Y(_173_)
  );
  \$lut  #(
    .LUT(16'h7800),
    .WIDTH(32'h00000004)
  ) _710_ (
    .A({ reset_n, \int_stage[0].int_inst.data_out [5], _173_, in_dv }),
    .Y(_006_)
  );
  \$lut  #(
    .LUT(16'h7800),
    .WIDTH(32'h00000004)
  ) _711_ (
    .A({ reset_n, \int_stage[0].int_inst.data_out [0], \comb_stage[3].comb_inst.data_out [0], in_dv }),
    .Y(_001_)
  );
  \$lut  #(
    .LUT(64'hd57f2a8000000000),
    .WIDTH(32'h00000006)
  ) _712_ (
    .A({ reset_n, \int_stage[0].int_inst.data_out [1], \comb_stage[3].comb_inst.data_out [1], \int_stage[0].int_inst.data_out [0], \comb_stage[3].comb_inst.data_out [0], in_dv }),
    .Y(_002_)
  );
  \$lut  #(
    .LUT(8'h87),
    .WIDTH(32'h00000003)
  ) _713_ (
    .A({ \int_stage[0].int_inst.data_out [4], \comb_stage[3].comb_inst.data_out [4], in_dv }),
    .Y(_174_)
  );
  \$lut  #(
    .LUT(32'hf40b0000),
    .WIDTH(32'h00000005)
  ) _714_ (
    .A({ reset_n, _174_, _166_, _163_, _162_ }),
    .Y(_005_)
  );
  \$lut  #(
    .LUT(32'h87780000),
    .WIDTH(32'h00000005)
  ) _715_ (
    .A({ reset_n, _163_, \int_stage[0].int_inst.data_out [2], \comb_stage[3].comb_inst.data_out [2], in_dv }),
    .Y(_003_)
  );
  \$lut  #(
    .LUT(64'h022ae8c0fdd5573f),
    .WIDTH(32'h00000006)
  ) _716_ (
    .A({ \int_stage[0].int_inst.data_out [3], \comb_stage[3].comb_inst.data_out [3:2], _163_, \int_stage[0].int_inst.data_out [2], in_dv }),
    .Y(_175_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _717_ (
    .A({ reset_n, _175_ }),
    .Y(_004_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _718_ (
    .A({ \comb_stage[2].comb_inst.data_out [10], reset_n }),
    .Y(_129_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _719_ (
    .A({ \comb_stage[2].comb_inst.data_out [9], reset_n }),
    .Y(_128_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _720_ (
    .A({ \comb_stage[2].comb_inst.data_out [8], reset_n }),
    .Y(_127_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _721_ (
    .A({ \comb_stage[2].comb_inst.data_out [7], reset_n }),
    .Y(_126_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _722_ (
    .A({ \comb_stage[2].comb_inst.data_out [6], reset_n }),
    .Y(_125_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _723_ (
    .A({ \comb_stage[2].comb_inst.data_out [5], reset_n }),
    .Y(_124_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _724_ (
    .A({ \comb_stage[2].comb_inst.data_out [4], reset_n }),
    .Y(_123_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _725_ (
    .A({ \comb_stage[2].comb_inst.data_out [3], reset_n }),
    .Y(_122_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _726_ (
    .A({ \comb_stage[2].comb_inst.data_out [2], reset_n }),
    .Y(_121_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _727_ (
    .A({ \comb_stage[2].comb_inst.data_out [1], reset_n }),
    .Y(_120_)
  );
  \$lut  #(
    .LUT(4'h8),
    .WIDTH(32'h00000002)
  ) _728_ (
    .A({ \comb_stage[2].comb_inst.data_out [0], reset_n }),
    .Y(_119_)
  );
  \$lut  #(
    .LUT(32'habff00ab),
    .WIDTH(32'h00000005)
  ) _729_ (
    .A({ \comb_stage[2].comb_inst.data_out [6], \comb_stage[3].comb_inst.data_reg[0] [6], _160_, _157_, _161_ }),
    .Y(_176_)
  );
  \$lut  #(
    .LUT(32'h7f571501),
    .WIDTH(32'h00000005)
  ) _730_ (
    .A({ \comb_stage[3].comb_inst.data_reg[0] [8:7], _176_, \comb_stage[2].comb_inst.data_out [7], \comb_stage[2].comb_inst.data_out [8] }),
    .Y(_177_)
  );
  \$lut  #(
    .LUT(64'hd42b2bd400000000),
    .WIDTH(32'h00000006)
  ) _731_ (
    .A({ reset_n, \comb_stage[3].comb_inst.data_reg[0] [10], \comb_stage[2].comb_inst.data_out [10], _177_, \comb_stage[3].comb_inst.data_reg[0] [9], \comb_stage[2].comb_inst.data_out [9] }),
    .Y(_118_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _732_ (
    .A({ reset_n, _177_, \comb_stage[3].comb_inst.data_reg[0] [9], \comb_stage[2].comb_inst.data_out [9] }),
    .Y(_117_)
  );
  \$lut  #(
    .LUT(64'h4db2b24d00000000),
    .WIDTH(32'h00000006)
  ) _733_ (
    .A({ reset_n, \comb_stage[3].comb_inst.data_reg[0] [8], \comb_stage[2].comb_inst.data_out [8], _176_, \comb_stage[3].comb_inst.data_reg[0] [7], \comb_stage[2].comb_inst.data_out [7] }),
    .Y(_116_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _734_ (
    .A({ reset_n, _176_, \comb_stage[3].comb_inst.data_reg[0] [7], \comb_stage[2].comb_inst.data_out [7] }),
    .Y(_115_)
  );
  \$lut  #(
    .LUT(64'hef8cce08ee88cc00),
    .WIDTH(32'h00000006)
  ) _735_ (
    .A({ _169_, \int_stage[0].int_inst.data_out [8], \int_stage[0].int_inst.data_out [9], _168_, \comb_stage[3].comb_inst.data_out [9:8] }),
    .Y(_178_)
  );
  \$lut  #(
    .LUT(32'hd7280000),
    .WIDTH(32'h00000005)
  ) _736_ (
    .A({ reset_n, \int_stage[0].int_inst.data_out [10], _178_, \comb_stage[3].comb_inst.data_out [10], in_dv }),
    .Y(_011_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _737_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [0], \int_stage[0].int_inst.data_out [0] }),
    .Y(_012_)
  );
  \$lut  #(
    .LUT(32'h87780000),
    .WIDTH(32'h00000005)
  ) _738_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [1], \int_stage[0].int_inst.data_out [1], \int_stage[1].int_inst.data_out [0], \int_stage[0].int_inst.data_out [0] }),
    .Y(_013_)
  );
  \$lut  #(
    .LUT(64'h077ff880f880077f),
    .WIDTH(32'h00000006)
  ) _739_ (
    .A({ \int_stage[1].int_inst.data_out [2], \int_stage[0].int_inst.data_out [2], \int_stage[1].int_inst.data_out [1], \int_stage[0].int_inst.data_out [1], \int_stage[1].int_inst.data_out [0], \int_stage[0].int_inst.data_out [0] }),
    .Y(_179_)
  );
  \$lut  #(
    .LUT(4'h4),
    .WIDTH(32'h00000002)
  ) _740_ (
    .A({ reset_n, _179_ }),
    .Y(_014_)
  );
  \$lut  #(
    .LUT(64'hfce8e8c0e8c0e8c0),
    .WIDTH(32'h00000006)
  ) _741_ (
    .A({ \int_stage[0].int_inst.data_out [0], \int_stage[1].int_inst.data_out [0], \int_stage[1].int_inst.data_out [1], \int_stage[1].int_inst.data_out [2], \int_stage[0].int_inst.data_out [2:1] }),
    .Y(_180_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _742_ (
    .A({ reset_n, _180_, \int_stage[1].int_inst.data_out [3], \int_stage[0].int_inst.data_out [3] }),
    .Y(_015_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _743_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [4], \int_stage[0].int_inst.data_out [4], _180_, \int_stage[1].int_inst.data_out [3], \int_stage[0].int_inst.data_out [3] }),
    .Y(_016_)
  );
  \$lut  #(
    .LUT(32'h0115577f),
    .WIDTH(32'h00000005)
  ) _744_ (
    .A({ \int_stage[1].int_inst.data_out [4], _180_, \int_stage[1].int_inst.data_out [3], \int_stage[0].int_inst.data_out [3], \int_stage[0].int_inst.data_out [4] }),
    .Y(_181_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _745_ (
    .A({ reset_n, _181_, \int_stage[1].int_inst.data_out [5], \int_stage[0].int_inst.data_out [5] }),
    .Y(_017_)
  );
  \$lut  #(
    .LUT(64'h8e71718e00000000),
    .WIDTH(32'h00000006)
  ) _746_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [6], \int_stage[0].int_inst.data_out [6], _181_, \int_stage[1].int_inst.data_out [5], \int_stage[0].int_inst.data_out [5] }),
    .Y(_018_)
  );
  \$lut  #(
    .LUT(32'h157f0157),
    .WIDTH(32'h00000005)
  ) _747_ (
    .A({ _181_, \int_stage[1].int_inst.data_out [6:5], \int_stage[0].int_inst.data_out [5], \int_stage[0].int_inst.data_out [6] }),
    .Y(_182_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _748_ (
    .A({ reset_n, _182_, \int_stage[1].int_inst.data_out [7], \int_stage[0].int_inst.data_out [7] }),
    .Y(_019_)
  );
  \$lut  #(
    .LUT(64'h8e71718e00000000),
    .WIDTH(32'h00000006)
  ) _749_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [8], \int_stage[0].int_inst.data_out [8], _182_, \int_stage[1].int_inst.data_out [7], \int_stage[0].int_inst.data_out [7] }),
    .Y(_020_)
  );
  \$lut  #(
    .LUT(16'heee8),
    .WIDTH(32'h00000004)
  ) _750_ (
    .A({ \int_stage[0].int_inst.data_out [7], \int_stage[1].int_inst.data_out [7], \int_stage[1].int_inst.data_out [8], \int_stage[0].int_inst.data_out [8] }),
    .Y(_183_)
  );
  \$lut  #(
    .LUT(32'h14280000),
    .WIDTH(32'h00000005)
  ) _751_ (
    .A({ _183_, \int_stage[1].int_inst.data_out [6:5], \int_stage[0].int_inst.data_out [5], \int_stage[0].int_inst.data_out [6] }),
    .Y(_184_)
  );
  \$lut  #(
    .LUT(64'hfea8ea80ea80ea80),
    .WIDTH(32'h00000006)
  ) _752_ (
    .A({ \int_stage[1].int_inst.data_out [5], \int_stage[0].int_inst.data_out [5], \int_stage[1].int_inst.data_out [7:6], \int_stage[0].int_inst.data_out [6], \int_stage[0].int_inst.data_out [7] }),
    .Y(_185_)
  );
  \$lut  #(
    .LUT(8'he8),
    .WIDTH(32'h00000003)
  ) _753_ (
    .A({ _185_, \int_stage[1].int_inst.data_out [8], \int_stage[0].int_inst.data_out [8] }),
    .Y(_186_)
  );
  \$lut  #(
    .LUT(64'hf40b0bf400000000),
    .WIDTH(32'h00000006)
  ) _754_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [9], \int_stage[0].int_inst.data_out [9], _186_, _184_, _181_ }),
    .Y(_021_)
  );
  \$lut  #(
    .LUT(32'hffbaba00),
    .WIDTH(32'h00000005)
  ) _755_ (
    .A({ \int_stage[1].int_inst.data_out [9], \int_stage[0].int_inst.data_out [9], _184_, _181_, _186_ }),
    .Y(_187_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _756_ (
    .A({ reset_n, _187_, \int_stage[1].int_inst.data_out [10], \int_stage[0].int_inst.data_out [10] }),
    .Y(_022_)
  );
  \$lut  #(
    .LUT(32'hb4d20000),
    .WIDTH(32'h00000005)
  ) _757_ (
    .A({ reset_n, _187_, \int_stage[1].int_inst.data_out [11:10], \int_stage[0].int_inst.data_out [10] }),
    .Y(_023_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _758_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [0], \int_stage[2].int_inst.data_out [0] }),
    .Y(_024_)
  );
  \$lut  #(
    .LUT(32'h87780000),
    .WIDTH(32'h00000005)
  ) _759_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [1], \int_stage[2].int_inst.data_out [1], \int_stage[1].int_inst.data_out [0], \int_stage[2].int_inst.data_out [0] }),
    .Y(_025_)
  );
  \$lut  #(
    .LUT(64'h8e71718e00000000),
    .WIDTH(32'h00000006)
  ) _760_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [2], \int_stage[2].int_inst.data_out [2], _025_, \int_stage[1].int_inst.data_out [1], \int_stage[2].int_inst.data_out [1] }),
    .Y(_026_)
  );
  \$lut  #(
    .LUT(64'hfce8e8c0e8c0e8c0),
    .WIDTH(32'h00000006)
  ) _761_ (
    .A({ \int_stage[2].int_inst.data_out [0], \int_stage[1].int_inst.data_out [0], \int_stage[1].int_inst.data_out [1], \int_stage[1].int_inst.data_out [2], \int_stage[2].int_inst.data_out [2:1] }),
    .Y(_188_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _762_ (
    .A({ reset_n, _188_, \int_stage[1].int_inst.data_out [3], \int_stage[2].int_inst.data_out [3] }),
    .Y(_027_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _763_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [4], \int_stage[2].int_inst.data_out [4], _188_, \int_stage[1].int_inst.data_out [3], \int_stage[2].int_inst.data_out [3] }),
    .Y(_028_)
  );
  \$lut  #(
    .LUT(32'h0317173f),
    .WIDTH(32'h00000005)
  ) _764_ (
    .A({ _188_, \int_stage[1].int_inst.data_out [3], \int_stage[1].int_inst.data_out [4], \int_stage[2].int_inst.data_out [4:3] }),
    .Y(_189_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _765_ (
    .A({ reset_n, _189_, \int_stage[1].int_inst.data_out [5], \int_stage[2].int_inst.data_out [5] }),
    .Y(_029_)
  );
  \$lut  #(
    .LUT(64'h8e71718e00000000),
    .WIDTH(32'h00000006)
  ) _766_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [6], \int_stage[2].int_inst.data_out [6], _189_, \int_stage[1].int_inst.data_out [5], \int_stage[2].int_inst.data_out [5] }),
    .Y(_030_)
  );
  \$lut  #(
    .LUT(64'h8e71718e00000000),
    .WIDTH(32'h00000006)
  ) _767_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [7], \int_stage[2].int_inst.data_out [7], _030_, \int_stage[1].int_inst.data_out [6], \int_stage[2].int_inst.data_out [6] }),
    .Y(_031_)
  );
  \$lut  #(
    .LUT(64'hfffff888f888f888),
    .WIDTH(32'h00000006)
  ) _768_ (
    .A({ \int_stage[1].int_inst.data_out [5], \int_stage[2].int_inst.data_out [5], \int_stage[1].int_inst.data_out [6], \int_stage[2].int_inst.data_out [6], \int_stage[1].int_inst.data_out [7], \int_stage[2].int_inst.data_out [7] }),
    .Y(_190_)
  );
  \$lut  #(
    .LUT(64'h000000000317173f),
    .WIDTH(32'h00000006)
  ) _769_ (
    .A({ _190_, _188_, \int_stage[1].int_inst.data_out [3], \int_stage[1].int_inst.data_out [4], \int_stage[2].int_inst.data_out [4:3] }),
    .Y(_191_)
  );
  \$lut  #(
    .LUT(64'hfce8fce8fce8e8c0),
    .WIDTH(32'h00000006)
  ) _770_ (
    .A({ \int_stage[2].int_inst.data_out [5], \int_stage[1].int_inst.data_out [5], \int_stage[1].int_inst.data_out [6], \int_stage[1].int_inst.data_out [7], \int_stage[2].int_inst.data_out [7:6] }),
    .Y(_192_)
  );
  \$lut  #(
    .LUT(32'h4bb40000),
    .WIDTH(32'h00000005)
  ) _771_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [8], \int_stage[2].int_inst.data_out [8], _192_, _191_ }),
    .Y(_032_)
  );
  \$lut  #(
    .LUT(16'hb2a0),
    .WIDTH(32'h00000004)
  ) _772_ (
    .A({ _192_, \int_stage[1].int_inst.data_out [8], _191_, \int_stage[2].int_inst.data_out [8] }),
    .Y(_193_)
  );
  \$lut  #(
    .LUT(16'h9600),
    .WIDTH(32'h00000004)
  ) _773_ (
    .A({ reset_n, _193_, \int_stage[1].int_inst.data_out [9], \int_stage[2].int_inst.data_out [9] }),
    .Y(_033_)
  );
  \$lut  #(
    .LUT(64'he81717e800000000),
    .WIDTH(32'h00000006)
  ) _774_ (
    .A({ reset_n, \int_stage[1].int_inst.data_out [10], \int_stage[2].int_inst.data_out [10], _193_, \int_stage[1].int_inst.data_out [9], \int_stage[2].int_inst.data_out [9] }),
    .Y(_034_)
  );
  \$lut  #(
    .LUT(64'h111f111f111f1fff),
    .WIDTH(32'h00000006)
  ) _775_ (
    .A({ \int_stage[2].int_inst.data_out [9], \int_stage[1].int_inst.data_out [9], \int_stage[1].int_inst.data_out [10], \int_stage[2].int_inst.data_out [10], \int_stage[1].int_inst.data_out [8], \int_stage[2].int_inst.data_out [8] }),
    .Y(_194_)
  );
  \$lut  #(
    .LUT(64'hfce8e8c0e8c0e8c0),
    .WIDTH(32'h00000006)
  ) _776_ (
    .A({ \int_stage[2].int_inst.data_out [8], \int_stage[1].int_inst.data_out [8], \int_stage[1].int_inst.data_out [9], \int_stage[1].int_inst.data_out [10], \int_stage[2].int_inst.data_out [10:9] }),
    .Y(_195_)
  );
  \$lut  #(
    .LUT(16'h00ef),
    .WIDTH(32'h00000004)
  ) _777_ (
    .A({ _195_, _192_, _191_, _194_ }),
    .Y(_196_)
  );
  \$lut  #(
    .LUT(16'h6900),
    .WIDTH(32'h00000004)
  ) _778_ (
    .A({ reset_n, _196_, \int_stage[1].int_inst.data_out [11], \int_stage[2].int_inst.data_out [11] }),
    .Y(_035_)
  );
  \$lut  #(
    .LUT(32'hb4d20000),
    .WIDTH(32'h00000005)
  ) _779_ (
    .A({ reset_n, _196_, \int_stage[2].int_inst.data_out [12], \int_stage[1].int_inst.data_out [11], \int_stage[2].int_inst.data_out [11] }),
    .Y(_036_)
  );
  \$lut  #(
    .LUT(8'h60),
    .WIDTH(32'h00000003)
  ) _780_ (
    .A({ reset_n, data_out[0], \int_stage[2].int_inst.data_out [0] }),
    .Y(_037_)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _781_ (
    .C(clk),
    .D(_001_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _782_ (
    .C(clk),
    .D(_002_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _783_ (
    .C(clk),
    .D(_003_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _784_ (
    .C(clk),
    .D(_004_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _785_ (
    .C(clk),
    .D(_005_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _786_ (
    .C(clk),
    .D(_006_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _787_ (
    .C(clk),
    .D(_007_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _788_ (
    .C(clk),
    .D(_008_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _789_ (
    .C(clk),
    .D(_009_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _790_ (
    .C(clk),
    .D(_010_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _791_ (
    .C(clk),
    .D(_011_),
    .E(1'h1),
    .Q(\int_stage[0].int_inst.data_out [10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _792_ (
    .C(clk),
    .D(_012_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _793_ (
    .C(clk),
    .D(_013_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _794_ (
    .C(clk),
    .D(_014_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _795_ (
    .C(clk),
    .D(_015_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _796_ (
    .C(clk),
    .D(_016_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _797_ (
    .C(clk),
    .D(_017_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _798_ (
    .C(clk),
    .D(_018_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _799_ (
    .C(clk),
    .D(_019_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _800_ (
    .C(clk),
    .D(_020_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _801_ (
    .C(clk),
    .D(_021_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _802_ (
    .C(clk),
    .D(_022_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _803_ (
    .C(clk),
    .D(_023_),
    .E(1'h1),
    .Q(\int_stage[1].int_inst.data_out [11]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _804_ (
    .C(clk),
    .D(_024_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _805_ (
    .C(clk),
    .D(_025_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _806_ (
    .C(clk),
    .D(_026_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _807_ (
    .C(clk),
    .D(_027_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _808_ (
    .C(clk),
    .D(_028_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _809_ (
    .C(clk),
    .D(_029_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _810_ (
    .C(clk),
    .D(_030_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _811_ (
    .C(clk),
    .D(_031_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _812_ (
    .C(clk),
    .D(_032_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _813_ (
    .C(clk),
    .D(_033_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _814_ (
    .C(clk),
    .D(_034_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _815_ (
    .C(clk),
    .D(_035_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [11]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _816_ (
    .C(clk),
    .D(_036_),
    .E(1'h1),
    .Q(\int_stage[2].int_inst.data_out [12]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _817_ (
    .C(clk),
    .D(_037_),
    .E(1'h1),
    .Q(data_out[0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _818_ (
    .C(clk),
    .D(_038_),
    .E(1'h1),
    .Q(data_out[1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _819_ (
    .C(clk),
    .D(_039_),
    .E(1'h1),
    .Q(data_out[2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _820_ (
    .C(clk),
    .D(_040_),
    .E(1'h1),
    .Q(data_out[3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _821_ (
    .C(clk),
    .D(_041_),
    .E(1'h1),
    .Q(data_out[4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _822_ (
    .C(clk),
    .D(_042_),
    .E(1'h1),
    .Q(data_out[5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _823_ (
    .C(clk),
    .D(_043_),
    .E(1'h1),
    .Q(data_out[6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _824_ (
    .C(clk),
    .D(_044_),
    .E(1'h1),
    .Q(data_out[7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _825_ (
    .C(clk),
    .D(_045_),
    .E(1'h1),
    .Q(data_out[8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _826_ (
    .C(clk),
    .D(_046_),
    .E(1'h1),
    .Q(data_out[9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _827_ (
    .C(clk),
    .D(_047_),
    .E(1'h1),
    .Q(data_out[10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _828_ (
    .C(clk),
    .D(_048_),
    .E(1'h1),
    .Q(data_out[11]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _829_ (
    .C(clk),
    .D(_049_),
    .E(1'h1),
    .Q(data_out[12]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:10.11-10.70" *)
  dffre _830_ (
    .C(clk),
    .D(_050_),
    .E(1'h1),
    .Q(data_out[13]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _831_ (
    .C(clk),
    .D(_051_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _832_ (
    .C(clk),
    .D(_052_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _833_ (
    .C(clk),
    .D(_053_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _834_ (
    .C(clk),
    .D(_054_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _835_ (
    .C(clk),
    .D(_055_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _836_ (
    .C(clk),
    .D(_056_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _837_ (
    .C(clk),
    .D(_057_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _838_ (
    .C(clk),
    .D(_058_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _839_ (
    .C(clk),
    .D(_059_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _840_ (
    .C(clk),
    .D(_060_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _841_ (
    .C(clk),
    .D(_061_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _842_ (
    .C(clk),
    .D(_062_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _843_ (
    .C(clk),
    .D(_063_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _844_ (
    .C(clk),
    .D(_064_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _845_ (
    .C(clk),
    .D(_065_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _846_ (
    .C(clk),
    .D(_066_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _847_ (
    .C(clk),
    .D(_067_),
    .E(_000_),
    .Q(\comb_stage[0].comb_inst.data_reg[0] [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _848_ (
    .C(clk),
    .D(_068_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _849_ (
    .C(clk),
    .D(_069_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _850_ (
    .C(clk),
    .D(_070_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _851_ (
    .C(clk),
    .D(_071_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _852_ (
    .C(clk),
    .D(_072_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _853_ (
    .C(clk),
    .D(_073_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _854_ (
    .C(clk),
    .D(_074_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _855_ (
    .C(clk),
    .D(_075_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _856_ (
    .C(clk),
    .D(_076_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _857_ (
    .C(clk),
    .D(_077_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _858_ (
    .C(clk),
    .D(_078_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _859_ (
    .C(clk),
    .D(_079_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _860_ (
    .C(clk),
    .D(_080_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _861_ (
    .C(clk),
    .D(_081_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _862_ (
    .C(clk),
    .D(_082_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _863_ (
    .C(clk),
    .D(_083_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _864_ (
    .C(clk),
    .D(_084_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _865_ (
    .C(clk),
    .D(_085_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _866_ (
    .C(clk),
    .D(_086_),
    .E(_000_),
    .Q(\comb_stage[1].comb_inst.data_reg[0] [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _867_ (
    .C(clk),
    .D(_087_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _868_ (
    .C(clk),
    .D(_088_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _869_ (
    .C(clk),
    .D(_089_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _870_ (
    .C(clk),
    .D(_090_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _871_ (
    .C(clk),
    .D(_091_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _872_ (
    .C(clk),
    .D(_092_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _873_ (
    .C(clk),
    .D(_093_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _874_ (
    .C(clk),
    .D(_094_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _875_ (
    .C(clk),
    .D(_095_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _876_ (
    .C(clk),
    .D(_096_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _877_ (
    .C(clk),
    .D(_097_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_out [10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _878_ (
    .C(clk),
    .D(_098_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _879_ (
    .C(clk),
    .D(_099_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _880_ (
    .C(clk),
    .D(_100_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _881_ (
    .C(clk),
    .D(_101_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _882_ (
    .C(clk),
    .D(_102_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _883_ (
    .C(clk),
    .D(_103_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _884_ (
    .C(clk),
    .D(_104_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _885_ (
    .C(clk),
    .D(_105_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _886_ (
    .C(clk),
    .D(_106_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _887_ (
    .C(clk),
    .D(_107_),
    .E(_000_),
    .Q(\comb_stage[2].comb_inst.data_reg[0] [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _888_ (
    .C(clk),
    .D(_108_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _889_ (
    .C(clk),
    .D(_109_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _890_ (
    .C(clk),
    .D(_110_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _891_ (
    .C(clk),
    .D(_111_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _892_ (
    .C(clk),
    .D(_112_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _893_ (
    .C(clk),
    .D(_113_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _894_ (
    .C(clk),
    .D(_114_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _895_ (
    .C(clk),
    .D(_115_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _896_ (
    .C(clk),
    .D(_116_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _897_ (
    .C(clk),
    .D(_117_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _898_ (
    .C(clk),
    .D(_118_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_out [10]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _899_ (
    .C(clk),
    .D(_119_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [0]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _900_ (
    .C(clk),
    .D(_120_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [1]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _901_ (
    .C(clk),
    .D(_121_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [2]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _902_ (
    .C(clk),
    .D(_122_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [3]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _903_ (
    .C(clk),
    .D(_123_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [4]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _904_ (
    .C(clk),
    .D(_124_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [5]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _905_ (
    .C(clk),
    .D(_125_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [6]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _906_ (
    .C(clk),
    .D(_126_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [7]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _907_ (
    .C(clk),
    .D(_127_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [8]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _908_ (
    .C(clk),
    .D(_128_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [9]),
    .R(1'h1)
  );
  (* module_not_derived = 32'h00000001 *)
  (* src = "/nfs_eda_sw/softwares/Raptor/instl_dir/04_28_2023_10_25_04/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v:80.11-80.65" *)
  dffre _909_ (
    .C(clk),
    .D(_129_),
    .E(_000_),
    .Q(\comb_stage[3].comb_inst.data_reg[0] [10]),
    .R(1'h1)
  );
  assign _197_ = \int_stage[0].int_inst.data_out [0];
  assign _198_ = \int_stage[0].int_inst.data_out [1];
  assign _199_ = \int_stage[0].int_inst.data_out [2];
  assign _200_ = \int_stage[0].int_inst.data_out [3];
  assign _201_ = \int_stage[0].int_inst.data_out [4];
  assign _202_ = \int_stage[0].int_inst.data_out [5];
  assign _203_ = \int_stage[0].int_inst.data_out [6];
  assign _204_ = \int_stage[0].int_inst.data_out [7];
  assign _205_ = \int_stage[0].int_inst.data_out [8];
  assign _206_ = \int_stage[0].int_inst.data_out [9];
  assign _207_ = \int_stage[0].int_inst.data_out [10];
  assign _208_ = \int_stage[1].int_inst.data_out [0];
  assign _209_ = \int_stage[1].int_inst.data_out [1];
  assign _210_ = \int_stage[1].int_inst.data_out [2];
  assign _211_ = \int_stage[1].int_inst.data_out [3];
  assign _212_ = \int_stage[1].int_inst.data_out [4];
  assign _213_ = \int_stage[1].int_inst.data_out [5];
  assign _214_ = \int_stage[1].int_inst.data_out [6];
  assign _215_ = \int_stage[1].int_inst.data_out [7];
  assign _216_ = \int_stage[1].int_inst.data_out [8];
  assign _217_ = \int_stage[1].int_inst.data_out [9];
  assign _218_ = \int_stage[1].int_inst.data_out [10];
  assign _219_ = \int_stage[1].int_inst.data_out [11];
  assign _220_ = \int_stage[2].int_inst.data_out [0];
  assign _221_ = \int_stage[2].int_inst.data_out [1];
  assign _222_ = \int_stage[2].int_inst.data_out [2];
  assign _223_ = \int_stage[2].int_inst.data_out [3];
  assign _224_ = \int_stage[2].int_inst.data_out [4];
  assign _225_ = \int_stage[2].int_inst.data_out [5];
  assign _226_ = \int_stage[2].int_inst.data_out [6];
  assign _227_ = \int_stage[2].int_inst.data_out [7];
  assign _228_ = \int_stage[2].int_inst.data_out [8];
  assign _229_ = \int_stage[2].int_inst.data_out [9];
  assign _230_ = \int_stage[2].int_inst.data_out [10];
  assign _231_ = \int_stage[2].int_inst.data_out [11];
  assign _232_ = \int_stage[2].int_inst.data_out [12];
  assign _233_ = data_out[0];
  assign _234_ = data_out[1];
  assign _235_ = data_out[2];
  assign _236_ = data_out[3];
  assign _237_ = data_out[4];
  assign _238_ = data_out[5];
  assign _239_ = data_out[6];
  assign _240_ = data_out[7];
  assign _241_ = data_out[8];
  assign _242_ = data_out[9];
  assign _243_ = data_out[10];
  assign _244_ = data_out[11];
  assign _245_ = data_out[12];
  assign _246_ = data_out[13];
  assign _247_ = \comb_stage[0].comb_inst.data_out [0];
  assign _248_ = \comb_stage[0].comb_inst.data_out [1];
  assign _249_ = \comb_stage[0].comb_inst.data_out [2];
  assign _250_ = \comb_stage[0].comb_inst.data_out [3];
  assign _251_ = \comb_stage[0].comb_inst.data_out [4];
  assign _252_ = \comb_stage[0].comb_inst.data_out [5];
  assign _253_ = \comb_stage[0].comb_inst.data_out [6];
  assign _254_ = \comb_stage[0].comb_inst.data_out [7];
  assign _255_ = \comb_stage[0].comb_inst.data_out [8];
  assign _256_ = \comb_stage[0].comb_inst.data_reg[0] [0];
  assign _257_ = \comb_stage[0].comb_inst.data_reg[0] [1];
  assign _258_ = \comb_stage[0].comb_inst.data_reg[0] [2];
  assign _259_ = \comb_stage[0].comb_inst.data_reg[0] [3];
  assign _260_ = \comb_stage[0].comb_inst.data_reg[0] [4];
  assign _261_ = \comb_stage[0].comb_inst.data_reg[0] [5];
  assign _262_ = \comb_stage[0].comb_inst.data_reg[0] [6];
  assign _263_ = \comb_stage[0].comb_inst.data_reg[0] [7];
  assign _264_ = \comb_stage[1].comb_inst.data_out [0];
  assign _265_ = \comb_stage[1].comb_inst.data_out [1];
  assign _266_ = \comb_stage[1].comb_inst.data_out [2];
  assign _267_ = \comb_stage[1].comb_inst.data_out [3];
  assign _268_ = \comb_stage[1].comb_inst.data_out [4];
  assign _269_ = \comb_stage[1].comb_inst.data_out [5];
  assign _270_ = \comb_stage[1].comb_inst.data_out [6];
  assign _271_ = \comb_stage[1].comb_inst.data_out [7];
  assign _272_ = \comb_stage[1].comb_inst.data_out [8];
  assign _273_ = \comb_stage[1].comb_inst.data_out [9];
  assign _274_ = \comb_stage[1].comb_inst.data_reg[0] [0];
  assign _275_ = \comb_stage[1].comb_inst.data_reg[0] [1];
  assign _276_ = \comb_stage[1].comb_inst.data_reg[0] [2];
  assign _277_ = \comb_stage[1].comb_inst.data_reg[0] [3];
  assign _278_ = \comb_stage[1].comb_inst.data_reg[0] [4];
  assign _279_ = \comb_stage[1].comb_inst.data_reg[0] [5];
  assign _280_ = \comb_stage[1].comb_inst.data_reg[0] [6];
  assign _281_ = \comb_stage[1].comb_inst.data_reg[0] [7];
  assign _282_ = \comb_stage[1].comb_inst.data_reg[0] [8];
  assign _283_ = \comb_stage[2].comb_inst.data_out [0];
  assign _284_ = \comb_stage[2].comb_inst.data_out [1];
  assign _285_ = \comb_stage[2].comb_inst.data_out [2];
  assign _286_ = \comb_stage[2].comb_inst.data_out [3];
  assign _287_ = \comb_stage[2].comb_inst.data_out [4];
  assign _288_ = \comb_stage[2].comb_inst.data_out [5];
  assign _289_ = \comb_stage[2].comb_inst.data_out [6];
  assign _290_ = \comb_stage[2].comb_inst.data_out [7];
  assign _291_ = \comb_stage[2].comb_inst.data_out [8];
  assign _292_ = \comb_stage[2].comb_inst.data_out [9];
  assign _293_ = \comb_stage[2].comb_inst.data_out [10];
  assign _294_ = \comb_stage[2].comb_inst.data_reg[0] [0];
  assign _295_ = \comb_stage[2].comb_inst.data_reg[0] [1];
  assign _296_ = \comb_stage[2].comb_inst.data_reg[0] [2];
  assign _297_ = \comb_stage[2].comb_inst.data_reg[0] [3];
  assign _298_ = \comb_stage[2].comb_inst.data_reg[0] [4];
  assign _299_ = \comb_stage[2].comb_inst.data_reg[0] [5];
  assign _300_ = \comb_stage[2].comb_inst.data_reg[0] [6];
  assign _301_ = \comb_stage[2].comb_inst.data_reg[0] [7];
  assign _302_ = \comb_stage[2].comb_inst.data_reg[0] [8];
  assign _303_ = \comb_stage[2].comb_inst.data_reg[0] [9];
  assign _304_ = \comb_stage[3].comb_inst.data_out [0];
  assign _305_ = \comb_stage[3].comb_inst.data_out [1];
  assign _306_ = \comb_stage[3].comb_inst.data_out [2];
  assign _307_ = \comb_stage[3].comb_inst.data_out [3];
  assign _308_ = \comb_stage[3].comb_inst.data_out [4];
  assign _309_ = \comb_stage[3].comb_inst.data_out [5];
  assign _310_ = \comb_stage[3].comb_inst.data_out [6];
  assign _311_ = \comb_stage[3].comb_inst.data_out [7];
  assign _312_ = \comb_stage[3].comb_inst.data_out [8];
  assign _313_ = \comb_stage[3].comb_inst.data_out [9];
  assign _314_ = \comb_stage[3].comb_inst.data_out [10];
  assign _315_ = \comb_stage[3].comb_inst.data_reg[0] [0];
  assign _316_ = \comb_stage[3].comb_inst.data_reg[0] [1];
  assign _317_ = \comb_stage[3].comb_inst.data_reg[0] [2];
  assign _318_ = \comb_stage[3].comb_inst.data_reg[0] [3];
  assign _319_ = \comb_stage[3].comb_inst.data_reg[0] [4];
  assign _320_ = \comb_stage[3].comb_inst.data_reg[0] [5];
  assign _321_ = \comb_stage[3].comb_inst.data_reg[0] [6];
  assign _322_ = \comb_stage[3].comb_inst.data_reg[0] [7];
  assign _323_ = \comb_stage[3].comb_inst.data_reg[0] [8];
  assign _324_ = \comb_stage[3].comb_inst.data_reg[0] [9];
  assign _325_ = \comb_stage[3].comb_inst.data_reg[0] [10];
  assign _326_ = \int_stage[0].int_inst.data_out [0];
  assign _327_ = \int_stage[0].int_inst.data_out [1];
  assign _328_ = \int_stage[0].int_inst.data_out [2];
  assign _329_ = \int_stage[0].int_inst.data_out [3];
  assign _330_ = \int_stage[0].int_inst.data_out [4];
  assign _331_ = \int_stage[0].int_inst.data_out [5];
  assign _332_ = \int_stage[0].int_inst.data_out [6];
  assign _333_ = \int_stage[0].int_inst.data_out [7];
  assign _334_ = \int_stage[0].int_inst.data_out [8];
  assign _335_ = \int_stage[0].int_inst.data_out [9];
  assign _336_ = \int_stage[0].int_inst.data_out [10];
  assign _337_ = \int_stage[1].int_inst.data_out [0];
  assign _338_ = \int_stage[1].int_inst.data_out [1];
  assign _339_ = \int_stage[1].int_inst.data_out [2];
  assign _340_ = \int_stage[1].int_inst.data_out [3];
  assign _341_ = \int_stage[1].int_inst.data_out [4];
  assign _342_ = \int_stage[1].int_inst.data_out [5];
  assign _343_ = \int_stage[1].int_inst.data_out [6];
  assign _344_ = \int_stage[1].int_inst.data_out [7];
  assign _345_ = \int_stage[1].int_inst.data_out [8];
  assign _346_ = \int_stage[1].int_inst.data_out [9];
  assign _347_ = \int_stage[1].int_inst.data_out [10];
  assign _348_ = \int_stage[1].int_inst.data_out [11];
  assign _349_ = \int_stage[2].int_inst.data_out [0];
  assign _350_ = \int_stage[2].int_inst.data_out [1];
  assign _351_ = \int_stage[2].int_inst.data_out [2];
  assign _352_ = \int_stage[2].int_inst.data_out [3];
  assign _353_ = \int_stage[2].int_inst.data_out [4];
  assign _354_ = \int_stage[2].int_inst.data_out [5];
  assign _355_ = \int_stage[2].int_inst.data_out [6];
  assign _356_ = \int_stage[2].int_inst.data_out [7];
  assign _357_ = \int_stage[2].int_inst.data_out [8];
  assign _358_ = \int_stage[2].int_inst.data_out [9];
  assign _359_ = \int_stage[2].int_inst.data_out [10];
  assign _360_ = \int_stage[2].int_inst.data_out [11];
  assign _361_ = \int_stage[2].int_inst.data_out [12];
  assign _362_ = data_out[0];
  assign _363_ = data_out[1];
  assign _364_ = data_out[2];
  assign _365_ = data_out[3];
  assign _366_ = data_out[4];
  assign _367_ = data_out[5];
  assign _368_ = data_out[6];
  assign _369_ = data_out[7];
  assign _370_ = data_out[8];
  assign _371_ = data_out[9];
  assign _372_ = data_out[10];
  assign _373_ = data_out[11];
  assign _374_ = data_out[12];
  assign _375_ = data_out[13];
  assign _376_ = \comb_stage[0].comb_inst.data_out [0];
  assign _377_ = \comb_stage[0].comb_inst.data_out [1];
  assign _378_ = \comb_stage[0].comb_inst.data_out [2];
  assign _379_ = \comb_stage[0].comb_inst.data_out [3];
  assign _380_ = \comb_stage[0].comb_inst.data_out [4];
  assign _381_ = \comb_stage[0].comb_inst.data_out [5];
  assign _382_ = \comb_stage[0].comb_inst.data_out [6];
  assign _383_ = \comb_stage[0].comb_inst.data_out [7];
  assign _384_ = \comb_stage[0].comb_inst.data_out [8];
  assign _385_ = \comb_stage[0].comb_inst.data_reg[0] [0];
  assign _386_ = \comb_stage[0].comb_inst.data_reg[0] [1];
  assign _387_ = \comb_stage[0].comb_inst.data_reg[0] [2];
  assign _388_ = \comb_stage[0].comb_inst.data_reg[0] [3];
  assign _389_ = \comb_stage[0].comb_inst.data_reg[0] [4];
  assign _390_ = \comb_stage[0].comb_inst.data_reg[0] [5];
  assign _391_ = \comb_stage[0].comb_inst.data_reg[0] [6];
  assign _392_ = \comb_stage[0].comb_inst.data_reg[0] [7];
  assign _393_ = \comb_stage[1].comb_inst.data_out [0];
  assign _394_ = \comb_stage[1].comb_inst.data_out [1];
  assign _395_ = \comb_stage[1].comb_inst.data_out [2];
  assign _396_ = \comb_stage[1].comb_inst.data_out [3];
  assign _397_ = \comb_stage[1].comb_inst.data_out [4];
  assign _398_ = \comb_stage[1].comb_inst.data_out [5];
  assign _399_ = \comb_stage[1].comb_inst.data_out [6];
  assign _400_ = \comb_stage[1].comb_inst.data_out [7];
  assign _401_ = \comb_stage[1].comb_inst.data_out [8];
  assign _402_ = \comb_stage[1].comb_inst.data_out [9];
  assign _403_ = \comb_stage[1].comb_inst.data_reg[0] [0];
  assign _404_ = \comb_stage[1].comb_inst.data_reg[0] [1];
  assign _405_ = \comb_stage[1].comb_inst.data_reg[0] [2];
  assign _406_ = \comb_stage[1].comb_inst.data_reg[0] [3];
  assign _407_ = \comb_stage[1].comb_inst.data_reg[0] [4];
  assign _408_ = \comb_stage[1].comb_inst.data_reg[0] [5];
  assign _409_ = \comb_stage[1].comb_inst.data_reg[0] [6];
  assign _410_ = \comb_stage[1].comb_inst.data_reg[0] [7];
  assign _411_ = \comb_stage[1].comb_inst.data_reg[0] [8];
  assign _412_ = \comb_stage[2].comb_inst.data_out [0];
  assign _413_ = \comb_stage[2].comb_inst.data_out [1];
  assign _414_ = \comb_stage[2].comb_inst.data_out [2];
  assign _415_ = \comb_stage[2].comb_inst.data_out [3];
  assign _416_ = \comb_stage[2].comb_inst.data_out [4];
  assign _417_ = \comb_stage[2].comb_inst.data_out [5];
  assign _418_ = \comb_stage[2].comb_inst.data_out [6];
  assign _419_ = \comb_stage[2].comb_inst.data_out [7];
  assign _420_ = \comb_stage[2].comb_inst.data_out [8];
  assign _421_ = \comb_stage[2].comb_inst.data_out [9];
  assign _422_ = \comb_stage[2].comb_inst.data_out [10];
  assign _423_ = \comb_stage[2].comb_inst.data_reg[0] [0];
  assign _424_ = \comb_stage[2].comb_inst.data_reg[0] [1];
  assign _425_ = \comb_stage[2].comb_inst.data_reg[0] [2];
  assign _426_ = \comb_stage[2].comb_inst.data_reg[0] [3];
  assign _427_ = \comb_stage[2].comb_inst.data_reg[0] [4];
  assign _428_ = \comb_stage[2].comb_inst.data_reg[0] [5];
  assign _429_ = \comb_stage[2].comb_inst.data_reg[0] [6];
  assign _430_ = \comb_stage[2].comb_inst.data_reg[0] [7];
  assign _431_ = \comb_stage[2].comb_inst.data_reg[0] [8];
  assign _432_ = \comb_stage[2].comb_inst.data_reg[0] [9];
  assign _433_ = \comb_stage[3].comb_inst.data_out [0];
  assign _434_ = \comb_stage[3].comb_inst.data_out [1];
  assign _435_ = \comb_stage[3].comb_inst.data_out [2];
  assign _436_ = \comb_stage[3].comb_inst.data_out [3];
  assign _437_ = \comb_stage[3].comb_inst.data_out [4];
  assign _438_ = \comb_stage[3].comb_inst.data_out [5];
  assign _439_ = \comb_stage[3].comb_inst.data_out [6];
  assign _440_ = \comb_stage[3].comb_inst.data_out [7];
  assign _441_ = \comb_stage[3].comb_inst.data_out [8];
  assign _442_ = \comb_stage[3].comb_inst.data_out [9];
  assign _443_ = \comb_stage[3].comb_inst.data_out [10];
  assign _444_ = \comb_stage[3].comb_inst.data_reg[0] [0];
  assign _445_ = \comb_stage[3].comb_inst.data_reg[0] [1];
  assign _446_ = \comb_stage[3].comb_inst.data_reg[0] [2];
  assign _447_ = \comb_stage[3].comb_inst.data_reg[0] [3];
  assign _448_ = \comb_stage[3].comb_inst.data_reg[0] [4];
  assign _449_ = \comb_stage[3].comb_inst.data_reg[0] [5];
  assign _450_ = \comb_stage[3].comb_inst.data_reg[0] [6];
  assign _451_ = \comb_stage[3].comb_inst.data_reg[0] [7];
  assign _452_ = \comb_stage[3].comb_inst.data_reg[0] [8];
  assign _453_ = \comb_stage[3].comb_inst.data_reg[0] [9];
  assign _454_ = \comb_stage[3].comb_inst.data_reg[0] [10];
  assign _455_ = \int_stage[0].int_inst.data_out [0];
  assign _456_ = \int_stage[0].int_inst.data_out [1];
  assign _457_ = \int_stage[0].int_inst.data_out [2];
  assign _458_ = \int_stage[0].int_inst.data_out [3];
  assign _459_ = \int_stage[0].int_inst.data_out [4];
  assign _460_ = \int_stage[0].int_inst.data_out [5];
  assign _461_ = \int_stage[0].int_inst.data_out [6];
  assign _462_ = \int_stage[0].int_inst.data_out [7];
  assign _463_ = \int_stage[0].int_inst.data_out [8];
  assign _464_ = \int_stage[0].int_inst.data_out [9];
  assign _465_ = \int_stage[0].int_inst.data_out [10];
  assign _466_ = \int_stage[1].int_inst.data_out [0];
  assign _467_ = \int_stage[1].int_inst.data_out [1];
  assign _468_ = \int_stage[1].int_inst.data_out [2];
  assign _469_ = \int_stage[1].int_inst.data_out [3];
  assign _470_ = \int_stage[1].int_inst.data_out [4];
  assign _471_ = \int_stage[1].int_inst.data_out [5];
  assign _472_ = \int_stage[1].int_inst.data_out [6];
  assign _473_ = \int_stage[1].int_inst.data_out [7];
  assign _474_ = \int_stage[1].int_inst.data_out [8];
  assign _475_ = \int_stage[1].int_inst.data_out [9];
  assign _476_ = \int_stage[1].int_inst.data_out [10];
  assign _477_ = \int_stage[1].int_inst.data_out [11];
  assign _478_ = \int_stage[2].int_inst.data_out [0];
  assign _479_ = \int_stage[2].int_inst.data_out [1];
  assign _480_ = \int_stage[2].int_inst.data_out [2];
  assign _481_ = \int_stage[2].int_inst.data_out [3];
  assign _482_ = \int_stage[2].int_inst.data_out [4];
  assign _483_ = \int_stage[2].int_inst.data_out [5];
  assign _484_ = \int_stage[2].int_inst.data_out [6];
  assign _485_ = \int_stage[2].int_inst.data_out [7];
  assign _486_ = \int_stage[2].int_inst.data_out [8];
  assign _487_ = \int_stage[2].int_inst.data_out [9];
  assign _488_ = \int_stage[2].int_inst.data_out [10];
  assign _489_ = \int_stage[2].int_inst.data_out [11];
  assign _490_ = \int_stage[2].int_inst.data_out [12];
  assign _491_ = data_out[0];
  assign _492_ = data_out[1];
  assign _493_ = data_out[2];
  assign _494_ = data_out[3];
  assign _495_ = data_out[4];
  assign _496_ = data_out[5];
  assign _497_ = data_out[6];
  assign _498_ = data_out[7];
  assign _499_ = data_out[8];
  assign _500_ = data_out[9];
  assign _501_ = data_out[10];
  assign _502_ = data_out[11];
  assign _503_ = data_out[12];
  assign _504_ = data_out[13];
  assign _505_ = \comb_stage[0].comb_inst.data_out [0];
  assign _506_ = \comb_stage[0].comb_inst.data_out [1];
  assign _507_ = \comb_stage[0].comb_inst.data_out [2];
  assign _508_ = \comb_stage[0].comb_inst.data_out [3];
  assign _509_ = \comb_stage[0].comb_inst.data_out [4];
  assign _510_ = \comb_stage[0].comb_inst.data_out [5];
  assign _511_ = \comb_stage[0].comb_inst.data_out [6];
  assign _512_ = \comb_stage[0].comb_inst.data_out [7];
  assign _513_ = \comb_stage[0].comb_inst.data_out [8];
  assign _514_ = \comb_stage[0].comb_inst.data_reg[0] [0];
  assign _515_ = \comb_stage[0].comb_inst.data_reg[0] [1];
  assign _516_ = \comb_stage[0].comb_inst.data_reg[0] [2];
  assign _517_ = \comb_stage[0].comb_inst.data_reg[0] [3];
  assign _518_ = \comb_stage[0].comb_inst.data_reg[0] [4];
  assign _519_ = \comb_stage[0].comb_inst.data_reg[0] [5];
  assign _520_ = \comb_stage[0].comb_inst.data_reg[0] [6];
  assign _521_ = \comb_stage[0].comb_inst.data_reg[0] [7];
  assign _522_ = \comb_stage[1].comb_inst.data_out [0];
  assign _523_ = \comb_stage[1].comb_inst.data_out [1];
  assign _524_ = \comb_stage[1].comb_inst.data_out [2];
  assign _525_ = \comb_stage[1].comb_inst.data_out [3];
  assign _526_ = \comb_stage[1].comb_inst.data_out [4];
  assign _527_ = \comb_stage[1].comb_inst.data_out [5];
  assign _528_ = \comb_stage[1].comb_inst.data_out [6];
  assign _529_ = \comb_stage[1].comb_inst.data_out [7];
  assign _530_ = \comb_stage[1].comb_inst.data_out [8];
  assign _531_ = \comb_stage[1].comb_inst.data_out [9];
  assign _532_ = \comb_stage[1].comb_inst.data_reg[0] [0];
  assign _533_ = \comb_stage[1].comb_inst.data_reg[0] [1];
  assign _534_ = \comb_stage[1].comb_inst.data_reg[0] [2];
  assign _535_ = \comb_stage[1].comb_inst.data_reg[0] [3];
  assign _536_ = \comb_stage[1].comb_inst.data_reg[0] [4];
  assign _537_ = \comb_stage[1].comb_inst.data_reg[0] [5];
  assign _538_ = \comb_stage[1].comb_inst.data_reg[0] [6];
  assign _539_ = \comb_stage[1].comb_inst.data_reg[0] [7];
  assign _540_ = \comb_stage[1].comb_inst.data_reg[0] [8];
  assign _541_ = \comb_stage[2].comb_inst.data_out [0];
  assign _542_ = \comb_stage[2].comb_inst.data_out [1];
  assign _543_ = \comb_stage[2].comb_inst.data_out [2];
  assign _544_ = \comb_stage[2].comb_inst.data_out [3];
  assign _545_ = \comb_stage[2].comb_inst.data_out [4];
  assign _546_ = \comb_stage[2].comb_inst.data_out [5];
  assign _547_ = \comb_stage[2].comb_inst.data_out [6];
  assign _548_ = \comb_stage[2].comb_inst.data_out [7];
  assign _549_ = \comb_stage[2].comb_inst.data_out [8];
  assign _550_ = \comb_stage[2].comb_inst.data_out [9];
  assign _551_ = \comb_stage[2].comb_inst.data_out [10];
  assign _552_ = \comb_stage[2].comb_inst.data_reg[0] [0];
  assign _553_ = \comb_stage[2].comb_inst.data_reg[0] [1];
  assign _554_ = \comb_stage[2].comb_inst.data_reg[0] [2];
  assign _555_ = \comb_stage[2].comb_inst.data_reg[0] [3];
  assign _556_ = \comb_stage[2].comb_inst.data_reg[0] [4];
  assign _557_ = \comb_stage[2].comb_inst.data_reg[0] [5];
  assign _558_ = \comb_stage[2].comb_inst.data_reg[0] [6];
  assign _559_ = \comb_stage[2].comb_inst.data_reg[0] [7];
  assign _560_ = \comb_stage[2].comb_inst.data_reg[0] [8];
  assign _561_ = \comb_stage[2].comb_inst.data_reg[0] [9];
  assign _562_ = \comb_stage[3].comb_inst.data_out [0];
  assign _563_ = \comb_stage[3].comb_inst.data_out [1];
  assign _564_ = \comb_stage[3].comb_inst.data_out [2];
  assign _565_ = \comb_stage[3].comb_inst.data_out [3];
  assign _566_ = \comb_stage[3].comb_inst.data_out [4];
  assign _567_ = \comb_stage[3].comb_inst.data_out [5];
  assign _568_ = \comb_stage[3].comb_inst.data_out [6];
  assign _569_ = \comb_stage[3].comb_inst.data_out [7];
  assign _570_ = \comb_stage[3].comb_inst.data_out [8];
  assign _571_ = \comb_stage[3].comb_inst.data_out [9];
  assign _572_ = \comb_stage[3].comb_inst.data_out [10];
  assign _573_ = \comb_stage[3].comb_inst.data_reg[0] [0];
  assign _574_ = \comb_stage[3].comb_inst.data_reg[0] [1];
  assign _575_ = \comb_stage[3].comb_inst.data_reg[0] [2];
  assign _576_ = \comb_stage[3].comb_inst.data_reg[0] [3];
  assign _577_ = \comb_stage[3].comb_inst.data_reg[0] [4];
  assign _578_ = \comb_stage[3].comb_inst.data_reg[0] [5];
  assign _579_ = \comb_stage[3].comb_inst.data_reg[0] [6];
  assign _580_ = \comb_stage[3].comb_inst.data_reg[0] [7];
  assign _581_ = \comb_stage[3].comb_inst.data_reg[0] [8];
  assign _582_ = \comb_stage[3].comb_inst.data_reg[0] [9];
  assign _583_ = \comb_stage[3].comb_inst.data_reg[0] [10];
  assign \int_stage[3].int_inst.data_out  = data_out;
endmodule
