/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.07
Build    : 1.1.18
Hash     : 4dceb7b
Date     : Jul  1 2024
Type     : Engineering
Log Time   : Mon Jul  8 10:50:06 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.07
Build    : 1.1.18
Hash     : 4dceb7b
Date     : Jul  1 2024
Type     : Engineering
Log Time   : Mon Jul  8 10:43:44 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.07
Build    : 1.1.18
Hash     : 4dceb7b
Date     : Jul  1 2024
Type     : Engineering
Log Time   : Mon Jul  8 10:39:25 2024 GMT
/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.07
Build    : 1.1.18
Hash     : 4dceb7b
Date     : Jul  1 2024
Type     : Engineering
Log Time   : Mon Jul  8 10:39:25 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38 (git sha1 44af79f65, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/sudoku_check/run_1/synth_1_1/analysis/sudoku_check_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/07_01_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/07_01_2024_09_15_02/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FCLK_BUF'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/fifo.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/fifo.v' to AST representation.
Warning: Encountered `translate_off' comment! Such legacy hot comments are supported by Yosys, but are not part of any formal language specification. Using a portable and standards-compliant construct such as `ifdef is recommended!
Generating RTLIL representation for module `\fifo'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/pll.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/puz_bank3.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/puz_bank3.v' to AST representation.
Generating RTLIL representation for module `\puz_bank3'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/puz_bank3.v:47.1-1586.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku.v:120)
Generating RTLIL representation for module `\sudoku'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_ans.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_ans.v' to AST representation.
Generating RTLIL representation for module `\sudoku_ans'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_bin2hex.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_bin2hex.v' to AST representation.
Generating RTLIL representation for module `\sudoku_bin2hex'.
Generating RTLIL representation for module `\bin2hex'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_bin2hex.v:28.1-42.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_check.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_check.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_check.v:36)
Generating RTLIL representation for module `\sudoku_check'.
Generating RTLIL representation for module `\sudoku_check_bench'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_core.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_core.v' to AST representation.
Generating RTLIL representation for module `\sudoku_core'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_hex2bin.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_hex2bin.v' to AST representation.
Generating RTLIL representation for module `\sudoku_hex2bin'.
Generating RTLIL representation for module `\hex2bin'.
Note: Assuming pure combinatorial block at /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_hex2bin.v:28.1-42.4 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_mask.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_mask.v' to AST representation.
Generating RTLIL representation for module `\sudoku_mask'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_mask_stg2.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_mask_stg2.v' to AST representation.
Generating RTLIL representation for module `\sudoku_mask_stg2'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_partials.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_partials.v' to AST representation.
Generating RTLIL representation for module `\sudoku_partials'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_solution.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/zaheer_ahmad/os_fpga2/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/sudoku_check/results_dir/.././rtl/sudoku_solution.v' to AST representation.
Generating RTLIL representation for module `\sudoku_solution'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top sudoku_check' --

15. Executing HIERARCHY pass (managing design hierarchy).

15.1. Analyzing design hierarchy..
Top module:  \sudoku_check
Used module:     \sudoku
Used module:         \sudoku_solution
Used module:         \sudoku_core
Used module:             \sudoku_bin2hex
Used module:                 \bin2hex
Used module:             \sudoku_ans
Used module:                 \sudoku_partials
Used module:             \sudoku_mask_stg2
Used module:             \sudoku_mask
Used module:             \sudoku_hex2bin
Used module:                 \hex2bin
Used module:         \fifo
Used module:     \puz_bank3
Parameter \WIDTH = 4

15.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sudoku_solution'.
Parameter \WIDTH = 4
Generating RTLIL representation for module `$paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000000100'.
Parameter \WIDTH = 9

15.3. Executing AST frontend in derive mode using pre-parsed AST for module `\sudoku_solution'.
Parameter \WIDTH = 9
Generating RTLIL representation for module `$paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000001001'.

15.4. Analyzing design hierarchy..
Top module:  \sudoku_check
Used module:     \sudoku
Used module:         $paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000000100
Used module:         \sudoku_core
Used module:             \sudoku_bin2hex
Used module:                 \bin2hex
Used module:             \sudoku_ans
Used module:                 \sudoku_partials
Used module:             \sudoku_mask_stg2
Used module:             \sudoku_mask
Used module:             \sudoku_hex2bin
Used module:                 \hex2bin
Used module:             $paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000001001
Used module:         \fifo
Used module:     \puz_bank3

15.5. Analyzing design hierarchy..
Top module:  \sudoku_check
Used module:     \sudoku
Used module:         $paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000000100
Used module:         \sudoku_core
Used module:             \sudoku_bin2hex
Used module:                 \bin2hex
Used module:             \sudoku_ans
Used module:                 \sudoku_partials
Used module:             \sudoku_mask_stg2
Used module:             \sudoku_mask
Used module:             \sudoku_hex2bin
Used module:                 \hex2bin
Used module:             $paramod\sudoku_solution\WIDTH=s32'00000000000000000000000000001001
Used module:         \fifo
Used module:     \puz_bank3
Removing unused module `\sudoku_solution'.
Removing unused module `\sudoku_check_bench'.
Removing unused module `\pll'.
Removed 3 unused modules.

Dumping file hier_info.json ...
 Process module "$paramod\\sudoku_solution\\WIDTH=s32'00000000000000000000000000000100"
 Process module "$paramod\\sudoku_solution\\WIDTH=s32'00000000000000000000000000001001"
 Process module "bin2hex"
 Process module "fifo"
 Process module "hex2bin"
 Process module "puz_bank3"
 Process module "sudoku"
 Process module "sudoku_ans"
 Process module "sudoku_bin2hex"
 Process module "sudoku_core"
 Process module "sudoku_hex2bin"
 Process module "sudoku_mask"
 Process module "sudoku_mask_stg2"
 Process module "sudoku_partials"
Dumping file port_info.json ...

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: 33cb5ce662, CPU: user 37.87s system 0.48s, MEM: 504.00 MB peak
Yosys 0.38 (git sha1 44af79f65, gcc 11.2.1 -fPIC -Os)
Time spent: 97% 28x read_verilog (36 sec), 1% 1x hierarchy (0 sec), ...
