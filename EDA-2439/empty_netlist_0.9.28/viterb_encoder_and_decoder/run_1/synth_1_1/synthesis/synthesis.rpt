/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.01
Build    : 0.9.28
Hash     : 0207cc3
Date     : Jan 25 2024
Type     : Engineering
Log Time   : Fri Jan 26 08:16:59 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 e9e2c024c, gcc 11.2.1 -fPIC -Os)


-- Executing script file `viterb_encoder_and_decoder.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v' to AST representation.
Generating RTLIL representation for module `\bmc000'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v:14: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v:15: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v:17: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc000.v:18: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v' to AST representation.
Generating RTLIL representation for module `\bmc001'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc001.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v' to AST representation.
Generating RTLIL representation for module `\bmc010'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc010.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v' to AST representation.
Generating RTLIL representation for module `\bmc011'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc011.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v' to AST representation.
Generating RTLIL representation for module `\bmc100'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc100.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v' to AST representation.
Generating RTLIL representation for module `\bmc101'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc101.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v' to AST representation.
Generating RTLIL representation for module `\bmc110'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc110.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v' to AST representation.
Generating RTLIL representation for module `\bmc111'.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v:13: Warning: Identifier `\tmp00' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v:14: Warning: Identifier `\tmp01' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v:16: Warning: Identifier `\tmp10' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/bmc111.v:17: Warning: Identifier `\tmp11' is implicitly declared.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v' to AST representation.
Generating RTLIL representation for module `\ACS'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v' to AST representation.
Generating RTLIL representation for module `\tbu'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v' to AST representation.
Generating RTLIL representation for module `\mem'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v' to AST representation.
Generating RTLIL representation for module `\mem_disp'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v' to AST representation.
Generating RTLIL representation for module `\encoder'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v' to AST representation.
Generating RTLIL representation for module `\decoder'.
Warning: Replacing memory \path_cost with list of registers. See /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:171
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:487: Warning: Identifier `\d_o_disp_mem_0' is implicitly declared.
/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:496: Warning: Identifier `\d_o_disp_mem_1' is implicitly declared.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v' to AST representation.
Generating RTLIL representation for module `\viterbi_tx_rx'.
Successfully finished Verilog frontend.

17. Executing HIERARCHY pass (managing design hierarchy).

17.1. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:         \bmc111
Used module:         \bmc110
Used module:         \bmc101
Used module:         \bmc100
Used module:         \bmc011
Used module:         \bmc010
Used module:         \bmc001
Used module:         \bmc000
Used module:     \encoder

17.2. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:         \bmc111
Used module:         \bmc110
Used module:         \bmc101
Used module:         \bmc100
Used module:         \bmc011
Used module:         \bmc010
Used module:         \bmc001
Used module:         \bmc000
Used module:     \encoder
Removed 0 unused modules.
Mapping positional arguments of cell decoder.ACS111 (ACS).
Mapping positional arguments of cell decoder.ACS110 (ACS).
Mapping positional arguments of cell decoder.ACS101 (ACS).
Mapping positional arguments of cell decoder.ACS100 (ACS).
Mapping positional arguments of cell decoder.ACS011 (ACS).
Mapping positional arguments of cell decoder.ACS010 (ACS).
Mapping positional arguments of cell decoder.ACS001 (ACS).
Mapping positional arguments of cell decoder.ACS000 (ACS).
Mapping positional arguments of cell decoder.bmc111_inst (bmc111).
Mapping positional arguments of cell decoder.bmc110_inst (bmc110).
Mapping positional arguments of cell decoder.bmc101_inst (bmc101).
Mapping positional arguments of cell decoder.bmc100_inst (bmc100).
Mapping positional arguments of cell decoder.bmc011_inst (bmc011).
Mapping positional arguments of cell decoder.bmc010_inst (bmc010).
Mapping positional arguments of cell decoder.bmc001_inst (bmc001).
Mapping positional arguments of cell decoder.bmc000_inst (bmc000).

18. Executing synth_rs pass: v0.4.218

18.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

18.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

18.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

18.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

18.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

18.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

18.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-20.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

18.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-20.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

18.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-21.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

18.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-20.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

18.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-20.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

18.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

18.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

18.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

18.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

18.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\RS_TDP36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:113.1-641.10.
Generating RTLIL representation for module `\RS_TDP36K'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:642.1-1070.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:1072.1-1481.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:1483.1-1886.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

18.17. Executing HIERARCHY pass (managing design hierarchy).

18.17.1. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:         \bmc111
Used module:         \bmc110
Used module:         \bmc101
Used module:         \bmc100
Used module:         \bmc011
Used module:         \bmc010
Used module:         \bmc001
Used module:         \bmc000
Used module:     \encoder

18.17.2. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Used module:     \decoder
Used module:         \mem_disp
Used module:         \tbu
Used module:         \mem
Used module:         \ACS
Used module:         \bmc111
Used module:         \bmc110
Used module:         \bmc101
Used module:         \bmc100
Used module:         \bmc011
Used module:         \bmc010
Used module:         \bmc001
Used module:         \bmc000
Used module:     \encoder
Removed 0 unused modules.

18.18. Executing PROC pass (convert processes to netlists).

18.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

18.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207 in module viterbi_tx_rx.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:549$206 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513$199 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:503$195 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193 in module decoder.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190 in module decoder.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184 in module decoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179 in module decoder.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175 in module decoder.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171 in module decoder.
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153 in module decoder.
Marked 2 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118 in module encoder.
Removed 1 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109 in module encoder.
Marked 9 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109 in module encoder.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99 in module mem_disp.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90 in module mem.
Removed 17 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80 in module tbu.
Marked 25 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80 in module tbu.
Marked 3 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74 in module tbu.
Removed 1 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70 in module ACS.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70 in module ACS.
Removed a total of 19 dead cases.

18.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 40 redundant assignments.
Promoted 28 assignments to connections.

18.18.4. Executing PROC_INIT pass (extract init attributes).

18.18.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171'.
Found async reset \rst in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
Found async reset \rst in `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118'.
Found async reset \rst in `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74'.

18.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~56 debug messages>

18.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
     1/3: $0\encoder_o_reg[1:0]
     2/3: $0\error_counter[3:0]
     3/3: $0\enable_decoder_in[0:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:549$206'.
     1/1: $0\decoder_o_reg[0:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:544$205'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:541$204'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203'.
     1/2: $0\addr_disp_mem_1[9:0]
     2/2: $0\addr_disp_mem_0[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513$199'.
     1/1: $0\rd_mem_counter_disp[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:503$195'.
     1/1: $0\wr_mem_counter_disp[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:500$194'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
     1/6: $0\selection_tbu_1[0:0]
     2/6: $0\selection_tbu_0[0:0]
     3/6: $0\d_in_1_tbu_1[7:0]
     4/6: $0\d_in_0_tbu_1[7:0]
     5/6: $0\d_in_1_tbu_0[7:0]
     6/6: $0\d_in_0_tbu_0[7:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190'.
     1/1: $0\enable_tbu_1[0:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187'.
     1/1: $0\enable_tbu_0[0:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:370$186'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:367$185'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
     1/8: $0\wr_mem_D[0:0]
     2/8: $0\wr_mem_C[0:0]
     3/8: $0\wr_mem_B[0:0]
     4/8: $0\wr_mem_A[0:0]
     5/8: $0\addr_mem_D[9:0]
     6/8: $0\addr_mem_C[9:0]
     7/8: $0\addr_mem_B[9:0]
     8/8: $0\addr_mem_A[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179'.
     1/1: $0\mem_bank[1:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
     1/2: $0\rd_mem_counter[9:0]
     2/2: $1\wr_mem_counter[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171'.
     1/1: $0\wr_mem_counter[9:0]
Creating decoders for process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
     1/10: $0\path_cost[7][7:0]
     2/10: $0\path_cost[6][7:0]
     3/10: $0\path_cost[5][7:0]
     4/10: $0\path_cost[4][7:0]
     5/10: $0\path_cost[3][7:0]
     6/10: $0\path_cost[2][7:0]
     7/10: $0\path_cost[1][7:0]
     8/10: $0\path_cost[0][7:0]
     9/10: $0\selection[7:0]
    10/10: $0\validity[7:0]
Creating decoders for process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118'.
     1/1: $0\cstate[2:0]
Creating decoders for process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
     1/18: $9\d_out_reg[1:0]
     2/18: $9\nstate[2:0]
     3/18: $8\d_out_reg[1:0]
     4/18: $8\nstate[2:0]
     5/18: $7\d_out_reg[1:0]
     6/18: $7\nstate[2:0]
     7/18: $6\d_out_reg[1:0]
     8/18: $6\nstate[2:0]
     9/18: $5\d_out_reg[1:0]
    10/18: $5\nstate[2:0]
    11/18: $4\d_out_reg[1:0]
    12/18: $4\nstate[2:0]
    13/18: $3\d_out_reg[1:0]
    14/18: $3\nstate[2:0]
    15/18: $2\d_out_reg[1:0]
    16/18: $2\nstate[2:0]
    17/18: $1\d_out_reg[1:0]
    18/18: $1\nstate[2:0]
Creating decoders for process `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
     1/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_EN[0:0]$105
     2/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_DATA[0:0]$104
     3/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_ADDR[9:0]$103
Creating decoders for process `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
     1/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$96
     2/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_DATA[7:0]$95
     3/3: $1$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_ADDR[9:0]$94
Creating decoders for process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80'.
     1/43: $25\nstate[2:0]
     2/43: $24\nstate[2:0]
     3/43: $23\nstate[2:0]
     4/43: $9\wr_en_reg[0:0]
     5/43: $9\d_o_reg[0:0]
     6/43: $22\nstate[2:0]
     7/43: $21\nstate[2:0]
     8/43: $20\nstate[2:0]
     9/43: $8\wr_en_reg[0:0]
    10/43: $8\d_o_reg[0:0]
    11/43: $19\nstate[2:0]
    12/43: $18\nstate[2:0]
    13/43: $17\nstate[2:0]
    14/43: $7\wr_en_reg[0:0]
    15/43: $7\d_o_reg[0:0]
    16/43: $16\nstate[2:0]
    17/43: $15\nstate[2:0]
    18/43: $14\nstate[2:0]
    19/43: $6\wr_en_reg[0:0]
    20/43: $6\d_o_reg[0:0]
    21/43: $13\nstate[2:0]
    22/43: $12\nstate[2:0]
    23/43: $11\nstate[2:0]
    24/43: $5\wr_en_reg[0:0]
    25/43: $5\d_o_reg[0:0]
    26/43: $10\nstate[2:0]
    27/43: $9\nstate[2:0]
    28/43: $8\nstate[2:0]
    29/43: $4\wr_en_reg[0:0]
    30/43: $4\d_o_reg[0:0]
    31/43: $7\nstate[2:0]
    32/43: $6\nstate[2:0]
    33/43: $5\nstate[2:0]
    34/43: $3\wr_en_reg[0:0]
    35/43: $3\d_o_reg[0:0]
    36/43: $4\nstate[2:0]
    37/43: $3\nstate[2:0]
    38/43: $2\nstate[2:0]
    39/43: $2\wr_en_reg[0:0]
    40/43: $2\d_o_reg[0:0]
    41/43: $1\nstate[2:0]
    42/43: $1\wr_en_reg[0:0]
    43/43: $1\d_o_reg[0:0]
Creating decoders for process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74'.
     1/1: $0\pstate[2:0]
Creating decoders for process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:32$73'.
Creating decoders for process `\ACS.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70'.
     1/2: $1\valid_o[0:0]
     2/2: $1\selection[0:0]

18.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\encoder.\valid_o' from process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
No latch inferred for signal `\encoder.\nstate' from process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
No latch inferred for signal `\encoder.\d_out_reg' from process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
No latch inferred for signal `\tbu.\wr_en_reg' from process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80'.
No latch inferred for signal `\tbu.\nstate' from process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80'.
Latch inferred for signal `\tbu.\d_o_reg' from process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80': $auto$proc_dlatch.cc:427:proc_dlatch$1113
No latch inferred for signal `\ACS.\selection' from process `\ACS.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70'.
No latch inferred for signal `\ACS.\valid_o' from process `\ACS.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70'.

18.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\viterbi_tx_rx.\error_counter' using process `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
  created $adff cell `$procdff$1114' with positive edge clock and negative level reset.
Creating register for signal `\viterbi_tx_rx.\encoder_o_reg' using process `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
  created $adff cell `$procdff$1115' with positive edge clock and negative level reset.
Creating register for signal `\viterbi_tx_rx.\enable_decoder_in' using process `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
  created $adff cell `$procdff$1116' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\decoder_o_reg' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:549$206'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\decoder.\mem_bank_buf_buf_buf_buf_buf' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:544$205'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\decoder.\mem_bank_buf_buf_buf_buf' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:541$204'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\decoder.\addr_disp_mem_0' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\decoder.\addr_disp_mem_1' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\decoder.\rd_mem_counter_disp' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513$199'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\decoder.\wr_mem_counter_disp' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:503$195'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\decoder.\mem_bank_buf_buf_buf' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:500$194'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\decoder.\selection_tbu_0' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\decoder.\selection_tbu_1' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `\decoder.\d_in_0_tbu_0' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `\decoder.\d_in_1_tbu_0' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\decoder.\d_in_0_tbu_1' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `\decoder.\d_in_1_tbu_1' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `\decoder.\enable_tbu_1' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190'.
  created $adff cell `$procdff$1131' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\enable_tbu_0' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187'.
  created $adff cell `$procdff$1132' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\mem_bank_buf_buf' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:370$186'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `\decoder.\mem_bank_buf' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:367$185'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\decoder.\addr_mem_A' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `\decoder.\addr_mem_B' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\decoder.\addr_mem_C' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\decoder.\addr_mem_D' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `\decoder.\wr_mem_A' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `\decoder.\wr_mem_B' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `\decoder.\wr_mem_C' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\decoder.\wr_mem_D' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `\decoder.\d_in_mem_A' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `\decoder.\d_in_mem_B' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `\decoder.\d_in_mem_C' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `\decoder.\d_in_mem_D' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `\decoder.\mem_bank' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179'.
  created $adff cell `$procdff$1147' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\wr_mem_counter' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `\decoder.\rd_mem_counter' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
  created $adff cell `$procdff$1151' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\wr_mem_counter' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171'.
  created $adff cell `$procdff$1152' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\selection' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1153' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\validity' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1154' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[0]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1155' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[1]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1156' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[2]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1157' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[3]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1158' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[4]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1159' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[5]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1160' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[6]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1161' with positive edge clock and negative level reset.
Creating register for signal `\decoder.\path_cost[7]' using process `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
  created $adff cell `$procdff$1162' with positive edge clock and negative level reset.
Creating register for signal `\encoder.\cstate' using process `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118'.
  created $adff cell `$procdff$1163' with positive edge clock and negative level reset.
Creating register for signal `\mem_disp.\d_o' using process `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
  created $dff cell `$procdff$1164' with positive edge clock.
Creating register for signal `\mem_disp.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_ADDR' using process `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
  created $dff cell `$procdff$1165' with positive edge clock.
Creating register for signal `\mem_disp.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_DATA' using process `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
  created $dff cell `$procdff$1166' with positive edge clock.
Creating register for signal `\mem_disp.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:22$98_EN' using process `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
  created $dff cell `$procdff$1167' with positive edge clock.
Creating register for signal `\mem.\d_o' using process `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
  created $dff cell `$procdff$1168' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_ADDR' using process `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
  created $dff cell `$procdff$1169' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_DATA' using process `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
  created $dff cell `$procdff$1170' with positive edge clock.
Creating register for signal `\mem.$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN' using process `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
  created $dff cell `$procdff$1171' with positive edge clock.
Creating register for signal `\tbu.\pstate' using process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74'.
  created $adff cell `$procdff$1172' with positive edge clock and negative level reset.
Creating register for signal `\tbu.\d_o' using process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:32$73'.
  created $dff cell `$procdff$1173' with positive edge clock.
Creating register for signal `\tbu.\wr_en' using process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:32$73'.
  created $dff cell `$procdff$1174' with positive edge clock.
Creating register for signal `\tbu.\selection_buf' using process `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:32$73'.
  created $dff cell `$procdff$1175' with positive edge clock.

18.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

18.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
Removing empty process `viterbi_tx_rx.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:25$207'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:549$206'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:549$206'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:544$205'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:541$204'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:524$203'.
Found and cleaned up 2 empty switches in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513$199'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513$199'.
Found and cleaned up 2 empty switches in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:503$195'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:503$195'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:500$194'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:398$193'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:386$190'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:374$187'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:370$186'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:367$185'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:272$184'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:262$183'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:251$179'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:240$175'.
Found and cleaned up 1 empty switch in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:230$171'.
Found and cleaned up 2 empty switches in `\decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
Removing empty process `decoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:164$153'.
Found and cleaned up 1 empty switch in `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118'.
Removing empty process `encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:138$118'.
Found and cleaned up 9 empty switches in `\encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
Removing empty process `encoder.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/encoder.v:25$109'.
Found and cleaned up 1 empty switch in `\mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
Removing empty process `mem_disp.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_1x1024.v:19$99'.
Found and cleaned up 1 empty switch in `\mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
Removing empty process `mem.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:20$90'.
Found and cleaned up 25 empty switches in `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80'.
Removing empty process `tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:51$80'.
Found and cleaned up 2 empty switches in `\tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74'.
Removing empty process `tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:38$74'.
Removing empty process `tbu.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:32$73'.
Found and cleaned up 1 empty switch in `\ACS.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70'.
Removing empty process `ACS.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/ACS.v:35$70'.
Cleaned up 56 empty switches.

18.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~1 debug messages>
Optimizing module decoder.
<suppressed ~45 debug messages>
Optimizing module encoder.
<suppressed ~32 debug messages>
Optimizing module mem_disp.
Optimizing module mem.
Optimizing module tbu.
<suppressed ~134 debug messages>
Optimizing module ACS.
<suppressed ~3 debug messages>
Optimizing module bmc111.
<suppressed ~4 debug messages>
Optimizing module bmc110.
<suppressed ~4 debug messages>
Optimizing module bmc101.
<suppressed ~4 debug messages>
Optimizing module bmc100.
<suppressed ~4 debug messages>
Optimizing module bmc011.
<suppressed ~4 debug messages>
Optimizing module bmc010.
<suppressed ~4 debug messages>
Optimizing module bmc001.
<suppressed ~4 debug messages>
Optimizing module bmc000.
<suppressed ~4 debug messages>

18.19. Executing DEMUXMAP pass.

18.20. Executing FLATTEN pass (flatten design).
Deleting now unused module ACS.
Deleting now unused module bmc000.
Deleting now unused module bmc001.
Deleting now unused module bmc010.
Deleting now unused module bmc011.
Deleting now unused module bmc100.
Deleting now unused module bmc101.
Deleting now unused module bmc110.
Deleting now unused module bmc111.
Deleting now unused module decoder.
Deleting now unused module encoder.
Deleting now unused module mem.
Deleting now unused module mem_disp.
Deleting now unused module tbu.
<suppressed ~26 debug messages>

18.21. Executing DEMUXMAP pass.

18.22. Executing TRIBUF pass.

18.23. Executing TRIBUF pass.

18.24. Executing DEMINOUT pass (demote inout ports to input or output).

18.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 48 unused cells and 770 unused wires.
<suppressed ~49 debug messages>

18.27. Executing CHECK pass (checking for obvious problems).
Checking module viterbi_tx_rx...
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [9]:
    port Q[9] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[9] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [8]:
    port Q[8] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[8] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [7]:
    port Q[7] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[7] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [6]:
    port Q[6] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[6] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [5]:
    port Q[5] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[5] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [4]:
    port Q[4] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[4] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [3]:
    port Q[3] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[3] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [2]:
    port Q[2] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[2] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [1]:
    port Q[1] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[1] of cell $flatten\decoder1.$procdff$1152 ($adff)
Warning: multiple conflicting drivers for viterbi_tx_rx.\decoder1.wr_mem_counter [0]:
    port Q[0] of cell $flatten\decoder1.$procdff$1150 ($dff)
    port Q[0] of cell $flatten\decoder1.$procdff$1152 ($adff)
Found and reported 10 problems.

18.28. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:               1008
   Number of wire bits:           2687
   Number of public wires:         321
   Number of public wire bits:    1132
   Number of memories:               6
   Number of memory bits:        34816
   Number of processes:              0
   Number of cells:                852
     $add                           20
     $adff                          21
     $and                           56
     $dff                           41
     $dlatch                         2
     $eq                           234
     $gt                             8
     $logic_and                      9
     $logic_not                     50
     $memrd_v2                       6
     $memwr_v2                       6
     $mux                          236
     $not                           70
     $pmux                          73
     $reduce_or                      2
     $sub                            2
     $xor                           16

18.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~828 debug messages>
Removed a total of 276 cells.

18.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$554.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$556.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$562.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$564.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$569.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$574.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$586.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$588.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$595.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$597.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$603.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$609.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$623.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$625.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$633.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$635.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$642.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$649.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$665.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$667.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$676.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$678.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$686.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$694.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$712.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$714.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$724.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$726.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$735.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$744.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$764.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$766.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$777.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$779.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$789.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$799.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$821.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$823.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$835.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$837.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$848.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$859.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$883.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$885.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_0.$procmux$898.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$900.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$912.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_0.$procmux$924.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$554.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$556.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$562.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$564.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$569.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$574.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$586.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$588.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$595.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$597.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$603.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$609.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$623.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$625.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$633.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$635.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$642.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$649.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$665.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$667.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$676.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$678.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$686.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$694.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$712.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$714.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$724.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$726.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$735.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$744.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$764.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$766.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$777.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$779.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$789.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$799.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$821.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$823.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$835.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$837.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$848.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$859.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$883.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$885.
    dead port 1/2 on $mux $flatten\decoder1.\tbu_1.$procmux$898.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$900.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$912.
    dead port 2/2 on $mux $flatten\decoder1.\tbu_1.$procmux$924.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$381.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$386.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$392.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$398.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$405.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$412.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$420.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$428.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$437.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$446.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$456.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$466.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$477.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$488.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$500.
    dead port 2/2 on $mux $flatten\encoder1.$procmux$512.
Removed 112 multiplexer ports.
<suppressed ~86 debug messages>

18.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS110.$procmux$976: { $flatten\decoder1.\ACS110.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1211 $flatten\decoder1.\ACS110.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$281: { $flatten\decoder1.$procmux$270_CMP $auto$opt_reduce.cc:134:opt_pmux$1213 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$235: { $auto$opt_reduce.cc:134:opt_pmux$1217 $auto$opt_reduce.cc:134:opt_pmux$1215 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$286: { $flatten\decoder1.$procmux$269_CMP $auto$opt_reduce.cc:134:opt_pmux$1219 $flatten\decoder1.$procmux$267_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS111.$procmux$971: { $flatten\decoder1.\ACS111.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1221 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS111.$procmux$976: { $flatten\decoder1.\ACS111.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1223 $flatten\decoder1.\ACS111.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$291: { $flatten\decoder1.$procmux$270_CMP $flatten\decoder1.$procmux$268_CMP $auto$opt_reduce.cc:134:opt_pmux$1225 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$296: { $flatten\decoder1.$procmux$269_CMP $auto$opt_reduce.cc:134:opt_pmux$1227 $flatten\decoder1.$procmux$267_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$240: { $auto$opt_reduce.cc:134:opt_pmux$1231 $auto$opt_reduce.cc:134:opt_pmux$1229 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$301: { $flatten\decoder1.$procmux$270_CMP $flatten\decoder1.$procmux$268_CMP $auto$opt_reduce.cc:134:opt_pmux$1233 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$245: { $auto$opt_reduce.cc:134:opt_pmux$1237 $auto$opt_reduce.cc:134:opt_pmux$1235 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$250: { $auto$opt_reduce.cc:134:opt_pmux$1241 $auto$opt_reduce.cc:134:opt_pmux$1239 }
    New ctrl vector for $pmux cell $flatten\decoder1.\tbu_0.$procmux$956: { $flatten\decoder1.\tbu_0.$procmux$824_CMP $flatten\decoder1.\tbu_0.$procmux$767_CMP $flatten\decoder1.\tbu_0.$procmux$715_CMP $flatten\decoder1.\tbu_0.$procmux$668_CMP $flatten\decoder1.\tbu_0.$procmux$626_CMP $flatten\decoder1.\tbu_0.$procmux$589_CMP $flatten\decoder1.\tbu_0.$procmux$557_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS000.$procmux$971: { $flatten\decoder1.\ACS000.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1243 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS000.$procmux$976: { $flatten\decoder1.\ACS000.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1245 $flatten\decoder1.\ACS000.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$255: { $auto$opt_reduce.cc:134:opt_pmux$1249 $auto$opt_reduce.cc:134:opt_pmux$1247 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS110.$procmux$971: { $flatten\decoder1.\ACS110.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1251 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS001.$procmux$971: { $flatten\decoder1.\ACS001.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1253 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$266: { $auto$opt_reduce.cc:134:opt_pmux$1255 $flatten\decoder1.$procmux$267_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS001.$procmux$976: { $flatten\decoder1.\ACS001.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1257 $flatten\decoder1.\ACS001.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$271: { $flatten\decoder1.$procmux$268_CMP $auto$opt_reduce.cc:134:opt_pmux$1259 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS010.$procmux$971: { $flatten\decoder1.\ACS010.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1261 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS010.$procmux$976: { $flatten\decoder1.\ACS010.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1263 $flatten\decoder1.\ACS010.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS011.$procmux$971: { $flatten\decoder1.\ACS011.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1265 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS011.$procmux$976: { $flatten\decoder1.\ACS011.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1267 $flatten\decoder1.\ACS011.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\tbu_1.$procmux$956: { $flatten\decoder1.\tbu_1.$procmux$824_CMP $flatten\decoder1.\tbu_1.$procmux$767_CMP $flatten\decoder1.\tbu_1.$procmux$715_CMP $flatten\decoder1.\tbu_1.$procmux$668_CMP $flatten\decoder1.\tbu_1.$procmux$626_CMP $flatten\decoder1.\tbu_1.$procmux$589_CMP $flatten\decoder1.\tbu_1.$procmux$557_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS100.$procmux$971: { $flatten\decoder1.\ACS100.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1269 }
    Consolidated identical input bits for $mux cell $flatten\decoder1.\trelis_mem_A.$procmux$542:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93
      New ports: A=1'0, B=1'1, Y=$flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0]
      New connections: $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [7:1] = { $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_A.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] }
    Consolidated identical input bits for $mux cell $flatten\decoder1.\trelis_mem_B.$procmux$542:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93
      New ports: A=1'0, B=1'1, Y=$flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0]
      New connections: $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [7:1] = { $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_B.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] }
    Consolidated identical input bits for $mux cell $flatten\decoder1.\trelis_mem_C.$procmux$542:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93
      New ports: A=1'0, B=1'1, Y=$flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0]
      New connections: $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [7:1] = { $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_C.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] }
    Consolidated identical input bits for $mux cell $flatten\decoder1.\trelis_mem_D.$procmux$542:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93
      New ports: A=1'0, B=1'1, Y=$flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0]
      New connections: $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [7:1] = { $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] $flatten\decoder1.\trelis_mem_D.$0$memwr$\mem$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/mem_8x1024.v:23$89_EN[7:0]$93 [0] }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS100.$procmux$976: { $flatten\decoder1.\ACS100.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1271 $flatten\decoder1.\ACS100.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$276: { $flatten\decoder1.$procmux$269_CMP $auto$opt_reduce.cc:134:opt_pmux$1273 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS101.$procmux$971: { $flatten\decoder1.\ACS101.$procmux$975_CMP $auto$opt_reduce.cc:134:opt_pmux$1275 }
    New ctrl vector for $pmux cell $flatten\decoder1.\ACS101.$procmux$976: { $flatten\decoder1.\ACS101.$procmux$974_CMP $auto$opt_reduce.cc:134:opt_pmux$1277 $flatten\decoder1.\ACS101.$procmux$972_CMP }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$230: { $auto$opt_reduce.cc:134:opt_pmux$1281 $auto$opt_reduce.cc:134:opt_pmux$1279 }
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 36 changes.

18.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

18.34. Executing OPT_SHARE pass.

18.35. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=61, #solve=0, #remove=0, time=0.00 sec.]

18.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 0 unused cells and 375 unused wires.
<suppressed ~1 debug messages>

18.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~86 debug messages>

18.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
    New ctrl vector for $pmux cell $flatten\decoder1.\tbu_0.$procmux$947: $auto$opt_reduce.cc:134:opt_pmux$1283
    New ctrl vector for $pmux cell $flatten\decoder1.\tbu_1.$procmux$947: $auto$opt_reduce.cc:134:opt_pmux$1285
    New ctrl vector for $pmux cell $flatten\encoder1.$procmux$514: { $auto$opt_reduce.cc:134:opt_pmux$1289 $auto$opt_reduce.cc:134:opt_pmux$1287 }
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 3 changes.

18.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.41. Executing OPT_SHARE pass.

18.42. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=61, #solve=0, #remove=0, time=0.00 sec.]

18.43. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~86 debug messages>

18.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.48. Executing OPT_SHARE pass.

18.49. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=61, #solve=0, #remove=0, time=0.00 sec.]

18.50. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 3

18.52. Executing FSM pass (extract and optimize FSM).

18.52.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking viterbi_tx_rx.decoder1.selection as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register viterbi_tx_rx.decoder1.tbu_0.pstate.
Found FSM state register viterbi_tx_rx.decoder1.tbu_1.pstate.
Not marking viterbi_tx_rx.decoder1.validity as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register viterbi_tx_rx.encoder1.cstate.

18.52.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\decoder1.tbu_0.pstate' from module `\viterbi_tx_rx'.
  found $adff cell for state register: $flatten\decoder1.\tbu_0.$procdff$1172
  root of input selection tree: $flatten\decoder1.\tbu_0.$0\pstate[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \decoder1.enable_tbu_0
  found ctrl input: $flatten\decoder1.\tbu_0.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$557_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$589_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$626_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$668_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$715_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$767_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$824_CMP
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$886_CMP
  found ctrl input: \decoder1.selection_tbu_0
  found ctrl input: \decoder1.d_in_0_tbu_0 [7]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$561_CMP
  found state code: 3'111
  found state code: 3'110
  found ctrl input: \decoder1.d_in_1_tbu_0 [7]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$552_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [6]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$594_CMP
  found state code: 3'100
  found state code: 3'101
  found ctrl input: \decoder1.d_in_1_tbu_0 [6]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$584_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [5]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$632_CMP
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \decoder1.d_in_1_tbu_0 [5]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$621_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [4]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$675_CMP
  found state code: 3'001
  found ctrl input: \decoder1.d_in_1_tbu_0 [4]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$663_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [3]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$723_CMP
  found ctrl input: \decoder1.d_in_1_tbu_0 [3]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$710_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [2]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$776_CMP
  found ctrl input: \decoder1.d_in_1_tbu_0 [2]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$762_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [1]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$834_CMP
  found ctrl input: \decoder1.d_in_1_tbu_0 [1]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$819_CMP
  found ctrl input: \decoder1.d_in_0_tbu_0 [0]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$897_CMP
  found ctrl input: \decoder1.d_in_1_tbu_0 [0]
  found ctrl input: $flatten\decoder1.\tbu_0.$procmux$881_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$886_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$824_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$767_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$715_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$668_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$626_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$589_CMP
  found ctrl output: $flatten\decoder1.\tbu_0.$procmux$557_CMP
  ctrl inputs: { \decoder1.selection_tbu_0 \decoder1.enable_tbu_0 \decoder1.d_in_1_tbu_0 \decoder1.d_in_0_tbu_0 $flatten\decoder1.\tbu_0.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y $flatten\decoder1.\tbu_0.$procmux$552_CMP $flatten\decoder1.\tbu_0.$procmux$561_CMP $flatten\decoder1.\tbu_0.$procmux$584_CMP $flatten\decoder1.\tbu_0.$procmux$594_CMP $flatten\decoder1.\tbu_0.$procmux$621_CMP $flatten\decoder1.\tbu_0.$procmux$632_CMP $flatten\decoder1.\tbu_0.$procmux$663_CMP $flatten\decoder1.\tbu_0.$procmux$675_CMP $flatten\decoder1.\tbu_0.$procmux$710_CMP $flatten\decoder1.\tbu_0.$procmux$723_CMP $flatten\decoder1.\tbu_0.$procmux$762_CMP $flatten\decoder1.\tbu_0.$procmux$776_CMP $flatten\decoder1.\tbu_0.$procmux$819_CMP $flatten\decoder1.\tbu_0.$procmux$834_CMP $flatten\decoder1.\tbu_0.$procmux$881_CMP $flatten\decoder1.\tbu_0.$procmux$897_CMP }
  ctrl outputs: { $flatten\decoder1.\tbu_0.$0\pstate[2:0] $flatten\decoder1.\tbu_0.$procmux$557_CMP $flatten\decoder1.\tbu_0.$procmux$589_CMP $flatten\decoder1.\tbu_0.$procmux$626_CMP $flatten\decoder1.\tbu_0.$procmux$668_CMP $flatten\decoder1.\tbu_0.$procmux$715_CMP $flatten\decoder1.\tbu_0.$procmux$767_CMP $flatten\decoder1.\tbu_0.$procmux$824_CMP $flatten\decoder1.\tbu_0.$procmux$886_CMP }
  transition:      3'000 35'-0--------------------------------- ->      3'000 11'00000000001
  transition:      3'000 35'01---------------00---------------- ->      3'000 11'00000000001
  transition:      3'000 35'01---------------10---------------- ->      3'001 11'00100000001
  transition:      3'000 35'11-------0--------0---------------- ->      3'000 11'00000000001
  transition:      3'000 35'11-------1--------0---------------- ->      3'001 11'00100000001
  transition:      3'000 35'-1----------------1---------------- ->      3'000 11'00000000001
  transition:      3'100 35'-0--------------------------------- ->      3'000 11'00000010000
  transition:      3'100 35'01-----------0----0---------------- ->      3'001 11'00100010000
  transition:      3'100 35'01-----------1----0---------------- ->      3'000 11'00000010000
  transition:      3'100 35'11---0------------0---------------- ->      3'001 11'00100010000
  transition:      3'100 35'11---1------------0---------------- ->      3'000 11'00000010000
  transition:      3'100 35'-1----------------1---------------- ->      3'000 11'00000010000
  transition:      3'010 35'-0--------------------------------- ->      3'000 11'00000000100
  transition:      3'010 35'01-------------0--0---------------- ->      3'100 11'10000000100
  transition:      3'010 35'01-------------1--0---------------- ->      3'101 11'10100000100
  transition:      3'010 35'11-----0----------0---------------- ->      3'100 11'10000000100
  transition:      3'010 35'11-----1----------0---------------- ->      3'101 11'10100000100
  transition:      3'010 35'-1----------------1---------------- ->      3'000 11'00000000100
  transition:      3'110 35'-0--------------------------------- ->      3'000 11'00001000000
  transition:      3'110 35'01---------0------0---------------- ->      3'101 11'10101000000
  transition:      3'110 35'01---------1------0---------------- ->      3'100 11'10001000000
  transition:      3'110 35'11-0--------------0---------------- ->      3'101 11'10101000000
  transition:      3'110 35'11-1--------------0---------------- ->      3'100 11'10001000000
  transition:      3'110 35'-1----------------1---------------- ->      3'000 11'00001000000
  transition:      3'001 35'-0--------------------------------- ->      3'000 11'00000000010
  transition:      3'001 35'01--------------0-0---------------- ->      3'011 11'01100000010
  transition:      3'001 35'01--------------1-0---------------- ->      3'010 11'01000000010
  transition:      3'001 35'11------0---------0---------------- ->      3'011 11'01100000010
  transition:      3'001 35'11------1---------0---------------- ->      3'010 11'01000000010
  transition:      3'001 35'-1----------------1---------------- ->      3'000 11'00000000010
  transition:      3'101 35'-0--------------------------------- ->      3'000 11'00000100000
  transition:      3'101 35'01----------0-----0---------------- ->      3'010 11'01000100000
  transition:      3'101 35'01----------1-----0---------------- ->      3'011 11'01100100000
  transition:      3'101 35'11--0-------------0---------------- ->      3'010 11'01000100000
  transition:      3'101 35'11--1-------------0---------------- ->      3'011 11'01100100000
  transition:      3'101 35'-1----------------1---------------- ->      3'000 11'00000100000
  transition:      3'011 35'-0--------------------------------- ->      3'000 11'00000001000
  transition:      3'011 35'01------------0---0---------------- ->      3'111 11'11100001000
  transition:      3'011 35'01------------1---0---------------- ->      3'110 11'11000001000
  transition:      3'011 35'11----0-----------0---------------- ->      3'111 11'11100001000
  transition:      3'011 35'11----1-----------0---------------- ->      3'110 11'11000001000
  transition:      3'011 35'-1----------------1---------------- ->      3'000 11'00000001000
  transition:      3'111 35'-0--------------------------------- ->      3'000 11'00010000000
  transition:      3'111 35'01--------0-------0---------------- ->      3'110 11'11010000000
  transition:      3'111 35'01--------1-------0---------------- ->      3'111 11'11110000000
  transition:      3'111 35'110---------------0---------------- ->      3'110 11'11010000000
  transition:      3'111 35'111---------------0---------------- ->      3'111 11'11110000000
  transition:      3'111 35'-1----------------1---------------- ->      3'000 11'00010000000
Extracting FSM `\decoder1.tbu_1.pstate' from module `\viterbi_tx_rx'.
  found $adff cell for state register: $flatten\decoder1.\tbu_1.$procdff$1172
  root of input selection tree: $flatten\decoder1.\tbu_1.$0\pstate[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \decoder1.enable_tbu_1
  found ctrl input: $flatten\decoder1.\tbu_1.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$557_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$589_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$626_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$668_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$715_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$767_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$824_CMP
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$886_CMP
  found ctrl input: \decoder1.selection_tbu_1
  found ctrl input: \decoder1.d_in_0_tbu_1 [7]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$561_CMP
  found state code: 3'111
  found state code: 3'110
  found ctrl input: \decoder1.d_in_1_tbu_1 [7]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$552_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [6]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$594_CMP
  found state code: 3'100
  found state code: 3'101
  found ctrl input: \decoder1.d_in_1_tbu_1 [6]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$584_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [5]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$632_CMP
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \decoder1.d_in_1_tbu_1 [5]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$621_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [4]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$675_CMP
  found state code: 3'001
  found ctrl input: \decoder1.d_in_1_tbu_1 [4]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$663_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [3]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$723_CMP
  found ctrl input: \decoder1.d_in_1_tbu_1 [3]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$710_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [2]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$776_CMP
  found ctrl input: \decoder1.d_in_1_tbu_1 [2]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$762_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [1]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$834_CMP
  found ctrl input: \decoder1.d_in_1_tbu_1 [1]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$819_CMP
  found ctrl input: \decoder1.d_in_0_tbu_1 [0]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$897_CMP
  found ctrl input: \decoder1.d_in_1_tbu_1 [0]
  found ctrl input: $flatten\decoder1.\tbu_1.$procmux$881_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$886_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$824_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$767_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$715_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$668_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$626_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$589_CMP
  found ctrl output: $flatten\decoder1.\tbu_1.$procmux$557_CMP
  ctrl inputs: { \decoder1.selection_tbu_1 \decoder1.enable_tbu_1 \decoder1.d_in_1_tbu_1 \decoder1.d_in_0_tbu_1 $flatten\decoder1.\tbu_1.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y $flatten\decoder1.\tbu_1.$procmux$552_CMP $flatten\decoder1.\tbu_1.$procmux$561_CMP $flatten\decoder1.\tbu_1.$procmux$584_CMP $flatten\decoder1.\tbu_1.$procmux$594_CMP $flatten\decoder1.\tbu_1.$procmux$621_CMP $flatten\decoder1.\tbu_1.$procmux$632_CMP $flatten\decoder1.\tbu_1.$procmux$663_CMP $flatten\decoder1.\tbu_1.$procmux$675_CMP $flatten\decoder1.\tbu_1.$procmux$710_CMP $flatten\decoder1.\tbu_1.$procmux$723_CMP $flatten\decoder1.\tbu_1.$procmux$762_CMP $flatten\decoder1.\tbu_1.$procmux$776_CMP $flatten\decoder1.\tbu_1.$procmux$819_CMP $flatten\decoder1.\tbu_1.$procmux$834_CMP $flatten\decoder1.\tbu_1.$procmux$881_CMP $flatten\decoder1.\tbu_1.$procmux$897_CMP }
  ctrl outputs: { $flatten\decoder1.\tbu_1.$0\pstate[2:0] $flatten\decoder1.\tbu_1.$procmux$557_CMP $flatten\decoder1.\tbu_1.$procmux$589_CMP $flatten\decoder1.\tbu_1.$procmux$626_CMP $flatten\decoder1.\tbu_1.$procmux$668_CMP $flatten\decoder1.\tbu_1.$procmux$715_CMP $flatten\decoder1.\tbu_1.$procmux$767_CMP $flatten\decoder1.\tbu_1.$procmux$824_CMP $flatten\decoder1.\tbu_1.$procmux$886_CMP }
  transition:      3'000 35'-0--------------------------------- ->      3'000 11'00000000001
  transition:      3'000 35'01---------------00---------------- ->      3'000 11'00000000001
  transition:      3'000 35'01---------------10---------------- ->      3'001 11'00100000001
  transition:      3'000 35'11-------0--------0---------------- ->      3'000 11'00000000001
  transition:      3'000 35'11-------1--------0---------------- ->      3'001 11'00100000001
  transition:      3'000 35'-1----------------1---------------- ->      3'000 11'00000000001
  transition:      3'100 35'-0--------------------------------- ->      3'000 11'00000010000
  transition:      3'100 35'01-----------0----0---------------- ->      3'001 11'00100010000
  transition:      3'100 35'01-----------1----0---------------- ->      3'000 11'00000010000
  transition:      3'100 35'11---0------------0---------------- ->      3'001 11'00100010000
  transition:      3'100 35'11---1------------0---------------- ->      3'000 11'00000010000
  transition:      3'100 35'-1----------------1---------------- ->      3'000 11'00000010000
  transition:      3'010 35'-0--------------------------------- ->      3'000 11'00000000100
  transition:      3'010 35'01-------------0--0---------------- ->      3'100 11'10000000100
  transition:      3'010 35'01-------------1--0---------------- ->      3'101 11'10100000100
  transition:      3'010 35'11-----0----------0---------------- ->      3'100 11'10000000100
  transition:      3'010 35'11-----1----------0---------------- ->      3'101 11'10100000100
  transition:      3'010 35'-1----------------1---------------- ->      3'000 11'00000000100
  transition:      3'110 35'-0--------------------------------- ->      3'000 11'00001000000
  transition:      3'110 35'01---------0------0---------------- ->      3'101 11'10101000000
  transition:      3'110 35'01---------1------0---------------- ->      3'100 11'10001000000
  transition:      3'110 35'11-0--------------0---------------- ->      3'101 11'10101000000
  transition:      3'110 35'11-1--------------0---------------- ->      3'100 11'10001000000
  transition:      3'110 35'-1----------------1---------------- ->      3'000 11'00001000000
  transition:      3'001 35'-0--------------------------------- ->      3'000 11'00000000010
  transition:      3'001 35'01--------------0-0---------------- ->      3'011 11'01100000010
  transition:      3'001 35'01--------------1-0---------------- ->      3'010 11'01000000010
  transition:      3'001 35'11------0---------0---------------- ->      3'011 11'01100000010
  transition:      3'001 35'11------1---------0---------------- ->      3'010 11'01000000010
  transition:      3'001 35'-1----------------1---------------- ->      3'000 11'00000000010
  transition:      3'101 35'-0--------------------------------- ->      3'000 11'00000100000
  transition:      3'101 35'01----------0-----0---------------- ->      3'010 11'01000100000
  transition:      3'101 35'01----------1-----0---------------- ->      3'011 11'01100100000
  transition:      3'101 35'11--0-------------0---------------- ->      3'010 11'01000100000
  transition:      3'101 35'11--1-------------0---------------- ->      3'011 11'01100100000
  transition:      3'101 35'-1----------------1---------------- ->      3'000 11'00000100000
  transition:      3'011 35'-0--------------------------------- ->      3'000 11'00000001000
  transition:      3'011 35'01------------0---0---------------- ->      3'111 11'11100001000
  transition:      3'011 35'01------------1---0---------------- ->      3'110 11'11000001000
  transition:      3'011 35'11----0-----------0---------------- ->      3'111 11'11100001000
  transition:      3'011 35'11----1-----------0---------------- ->      3'110 11'11000001000
  transition:      3'011 35'-1----------------1---------------- ->      3'000 11'00000001000
  transition:      3'111 35'-0--------------------------------- ->      3'000 11'00010000000
  transition:      3'111 35'01--------0-------0---------------- ->      3'110 11'11010000000
  transition:      3'111 35'01--------1-------0---------------- ->      3'111 11'11110000000
  transition:      3'111 35'110---------------0---------------- ->      3'110 11'11010000000
  transition:      3'111 35'111---------------0---------------- ->      3'111 11'11110000000
  transition:      3'111 35'-1----------------1---------------- ->      3'000 11'00010000000
Extracting FSM `\encoder1.cstate' from module `\viterbi_tx_rx'.
  found $adff cell for state register: $flatten\encoder1.$procdff$1163
  root of input selection tree: $flatten\encoder1.$0\cstate[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \enable_encoder_i
  found ctrl input: $flatten\encoder1.$procmux$382_CMP
  found ctrl input: $flatten\encoder1.$procmux$393_CMP
  found ctrl input: $flatten\encoder1.$procmux$406_CMP
  found ctrl input: $flatten\encoder1.$procmux$421_CMP
  found ctrl input: $flatten\encoder1.$procmux$438_CMP
  found ctrl input: $flatten\encoder1.$procmux$457_CMP
  found ctrl input: $flatten\encoder1.$procmux$478_CMP
  found ctrl input: $flatten\encoder1.$procmux$501_CMP
  found ctrl input: \encoder_i
  found state code: 3'011
  found state code: 3'111
  found state code: 3'110
  found state code: 3'010
  found state code: 3'001
  found state code: 3'101
  found state code: 3'100
  found ctrl output: $flatten\encoder1.$procmux$382_CMP
  found ctrl output: $flatten\encoder1.$procmux$393_CMP
  found ctrl output: $flatten\encoder1.$procmux$406_CMP
  found ctrl output: $flatten\encoder1.$procmux$421_CMP
  found ctrl output: $flatten\encoder1.$procmux$438_CMP
  found ctrl output: $flatten\encoder1.$procmux$457_CMP
  found ctrl output: $flatten\encoder1.$procmux$478_CMP
  found ctrl output: $flatten\encoder1.$procmux$501_CMP
  ctrl inputs: { \enable_encoder_i \encoder_i }
  ctrl outputs: { $flatten\encoder1.$procmux$501_CMP $flatten\encoder1.$procmux$478_CMP $flatten\encoder1.$procmux$457_CMP $flatten\encoder1.$procmux$438_CMP $flatten\encoder1.$procmux$421_CMP $flatten\encoder1.$procmux$406_CMP $flatten\encoder1.$procmux$393_CMP $flatten\encoder1.$procmux$382_CMP $flatten\encoder1.$0\cstate[2:0] }
  transition:      3'000 2'0- ->      3'000 11'10000000000
  transition:      3'000 2'10 ->      3'000 11'10000000000
  transition:      3'000 2'11 ->      3'100 11'10000000100
  transition:      3'100 2'0- ->      3'000 11'00001000000
  transition:      3'100 2'10 ->      3'010 11'00001000010
  transition:      3'100 2'11 ->      3'110 11'00001000110
  transition:      3'010 2'0- ->      3'000 11'00100000000
  transition:      3'010 2'10 ->      3'101 11'00100000101
  transition:      3'010 2'11 ->      3'001 11'00100000001
  transition:      3'110 2'0- ->      3'000 11'00000010000
  transition:      3'110 2'10 ->      3'111 11'00000010111
  transition:      3'110 2'11 ->      3'011 11'00000010011
  transition:      3'001 2'0- ->      3'000 11'01000000000
  transition:      3'001 2'10 ->      3'100 11'01000000100
  transition:      3'001 2'11 ->      3'000 11'01000000000
  transition:      3'101 2'0- ->      3'000 11'00000100000
  transition:      3'101 2'10 ->      3'110 11'00000100110
  transition:      3'101 2'11 ->      3'010 11'00000100010
  transition:      3'011 2'0- ->      3'000 11'00010000000
  transition:      3'011 2'10 ->      3'001 11'00010000001
  transition:      3'011 2'11 ->      3'101 11'00010000101
  transition:      3'111 2'0- ->      3'000 11'00000001000
  transition:      3'111 2'10 ->      3'011 11'00000001011
  transition:      3'111 2'11 ->      3'111 11'00000001111

18.52.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\encoder1.cstate$1310' from module `\viterbi_tx_rx'.
Optimizing FSM `$fsm$\decoder1.tbu_1.pstate$1300' from module `\viterbi_tx_rx'.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$552_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$561_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$584_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$594_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$621_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$632_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$663_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$675_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$710_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$723_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$762_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$776_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$819_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$834_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$881_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_1.$procmux$897_CMP.
Optimizing FSM `$fsm$\decoder1.tbu_0.pstate$1290' from module `\viterbi_tx_rx'.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$552_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$561_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$584_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$594_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$621_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$632_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$663_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$675_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$710_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$723_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$762_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$776_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$819_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$834_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$881_CMP.
  Removing unused input signal $flatten\decoder1.\tbu_0.$procmux$897_CMP.

18.52.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 123 unused cells and 123 unused wires.
<suppressed ~127 debug messages>

18.52.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\decoder1.tbu_0.pstate$1290' from module `\viterbi_tx_rx'.
  Removing unused output signal $flatten\decoder1.\tbu_0.$0\pstate[2:0] [0].
  Removing unused output signal $flatten\decoder1.\tbu_0.$0\pstate[2:0] [1].
  Removing unused output signal $flatten\decoder1.\tbu_0.$0\pstate[2:0] [2].
Optimizing FSM `$fsm$\decoder1.tbu_1.pstate$1300' from module `\viterbi_tx_rx'.
  Removing unused output signal $flatten\decoder1.\tbu_1.$0\pstate[2:0] [0].
  Removing unused output signal $flatten\decoder1.\tbu_1.$0\pstate[2:0] [1].
  Removing unused output signal $flatten\decoder1.\tbu_1.$0\pstate[2:0] [2].
Optimizing FSM `$fsm$\encoder1.cstate$1310' from module `\viterbi_tx_rx'.
  Removing unused output signal $flatten\encoder1.$0\cstate[2:0] [0].
  Removing unused output signal $flatten\encoder1.$0\cstate[2:0] [1].
  Removing unused output signal $flatten\encoder1.$0\cstate[2:0] [2].

18.52.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\decoder1.tbu_0.pstate$1290' from module `\viterbi_tx_rx' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------
Recoding FSM `$fsm$\decoder1.tbu_1.pstate$1300' from module `\viterbi_tx_rx' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------
Recoding FSM `$fsm$\encoder1.cstate$1310' from module `\viterbi_tx_rx' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -------1
  100 -> ------1-
  010 -> -----1--
  110 -> ----1---
  001 -> ---1----
  101 -> --1-----
  011 -> -1------
  111 -> 1-------

18.52.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\decoder1.tbu_0.pstate$1290' from module `viterbi_tx_rx':
-------------------------------------

  Information on FSM $fsm$\decoder1.tbu_0.pstate$1290 (\decoder1.tbu_0.pstate):

  Number of input signals:   19
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: $flatten\decoder1.\tbu_0.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y
    1: \decoder1.d_in_0_tbu_0 [0]
    2: \decoder1.d_in_0_tbu_0 [1]
    3: \decoder1.d_in_0_tbu_0 [2]
    4: \decoder1.d_in_0_tbu_0 [3]
    5: \decoder1.d_in_0_tbu_0 [4]
    6: \decoder1.d_in_0_tbu_0 [5]
    7: \decoder1.d_in_0_tbu_0 [6]
    8: \decoder1.d_in_0_tbu_0 [7]
    9: \decoder1.d_in_1_tbu_0 [0]
   10: \decoder1.d_in_1_tbu_0 [1]
   11: \decoder1.d_in_1_tbu_0 [2]
   12: \decoder1.d_in_1_tbu_0 [3]
   13: \decoder1.d_in_1_tbu_0 [4]
   14: \decoder1.d_in_1_tbu_0 [5]
   15: \decoder1.d_in_1_tbu_0 [6]
   16: \decoder1.d_in_1_tbu_0 [7]
   17: \decoder1.enable_tbu_0
   18: \decoder1.selection_tbu_0

  Output signals:
    0: $flatten\decoder1.\tbu_0.$procmux$886_CMP
    1: $flatten\decoder1.\tbu_0.$procmux$824_CMP
    2: $flatten\decoder1.\tbu_0.$procmux$767_CMP
    3: $flatten\decoder1.\tbu_0.$procmux$715_CMP
    4: $flatten\decoder1.\tbu_0.$procmux$668_CMP
    5: $flatten\decoder1.\tbu_0.$procmux$626_CMP
    6: $flatten\decoder1.\tbu_0.$procmux$589_CMP
    7: $flatten\decoder1.\tbu_0.$procmux$557_CMP

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 19'01---------------00   ->     0 8'00000001
      1:     0 19'11-------0--------0   ->     0 8'00000001
      2:     0 19'-1----------------1   ->     0 8'00000001
      3:     0 19'-0-----------------   ->     0 8'00000001
      4:     0 19'01---------------10   ->     4 8'00000001
      5:     0 19'11-------1--------0   ->     4 8'00000001
      6:     1 19'01-----------1----0   ->     0 8'00010000
      7:     1 19'11---1------------0   ->     0 8'00010000
      8:     1 19'-1----------------1   ->     0 8'00010000
      9:     1 19'-0-----------------   ->     0 8'00010000
     10:     1 19'01-----------0----0   ->     4 8'00010000
     11:     1 19'11---0------------0   ->     4 8'00010000
     12:     2 19'-1----------------1   ->     0 8'00000100
     13:     2 19'-0-----------------   ->     0 8'00000100
     14:     2 19'01-------------0--0   ->     1 8'00000100
     15:     2 19'11-----0----------0   ->     1 8'00000100
     16:     2 19'01-------------1--0   ->     5 8'00000100
     17:     2 19'11-----1----------0   ->     5 8'00000100
     18:     3 19'-1----------------1   ->     0 8'01000000
     19:     3 19'-0-----------------   ->     0 8'01000000
     20:     3 19'01---------1------0   ->     1 8'01000000
     21:     3 19'11-1--------------0   ->     1 8'01000000
     22:     3 19'01---------0------0   ->     5 8'01000000
     23:     3 19'11-0--------------0   ->     5 8'01000000
     24:     4 19'-1----------------1   ->     0 8'00000010
     25:     4 19'-0-----------------   ->     0 8'00000010
     26:     4 19'01--------------1-0   ->     2 8'00000010
     27:     4 19'11------1---------0   ->     2 8'00000010
     28:     4 19'01--------------0-0   ->     6 8'00000010
     29:     4 19'11------0---------0   ->     6 8'00000010
     30:     5 19'-1----------------1   ->     0 8'00100000
     31:     5 19'-0-----------------   ->     0 8'00100000
     32:     5 19'01----------0-----0   ->     2 8'00100000
     33:     5 19'11--0-------------0   ->     2 8'00100000
     34:     5 19'01----------1-----0   ->     6 8'00100000
     35:     5 19'11--1-------------0   ->     6 8'00100000
     36:     6 19'-1----------------1   ->     0 8'00001000
     37:     6 19'-0-----------------   ->     0 8'00001000
     38:     6 19'01------------1---0   ->     3 8'00001000
     39:     6 19'11----1-----------0   ->     3 8'00001000
     40:     6 19'01------------0---0   ->     7 8'00001000
     41:     6 19'11----0-----------0   ->     7 8'00001000
     42:     7 19'-1----------------1   ->     0 8'10000000
     43:     7 19'-0-----------------   ->     0 8'10000000
     44:     7 19'01--------0-------0   ->     3 8'10000000
     45:     7 19'110---------------0   ->     3 8'10000000
     46:     7 19'01--------1-------0   ->     7 8'10000000
     47:     7 19'111---------------0   ->     7 8'10000000

-------------------------------------

FSM `$fsm$\decoder1.tbu_1.pstate$1300' from module `viterbi_tx_rx':
-------------------------------------

  Information on FSM $fsm$\decoder1.tbu_1.pstate$1300 (\decoder1.tbu_1.pstate):

  Number of input signals:   19
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: $flatten\decoder1.\tbu_1.$logic_and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/tbu.v:44$79_Y
    1: \decoder1.d_in_0_tbu_1 [0]
    2: \decoder1.d_in_0_tbu_1 [1]
    3: \decoder1.d_in_0_tbu_1 [2]
    4: \decoder1.d_in_0_tbu_1 [3]
    5: \decoder1.d_in_0_tbu_1 [4]
    6: \decoder1.d_in_0_tbu_1 [5]
    7: \decoder1.d_in_0_tbu_1 [6]
    8: \decoder1.d_in_0_tbu_1 [7]
    9: \decoder1.d_in_1_tbu_1 [0]
   10: \decoder1.d_in_1_tbu_1 [1]
   11: \decoder1.d_in_1_tbu_1 [2]
   12: \decoder1.d_in_1_tbu_1 [3]
   13: \decoder1.d_in_1_tbu_1 [4]
   14: \decoder1.d_in_1_tbu_1 [5]
   15: \decoder1.d_in_1_tbu_1 [6]
   16: \decoder1.d_in_1_tbu_1 [7]
   17: \decoder1.enable_tbu_1
   18: \decoder1.selection_tbu_1

  Output signals:
    0: $flatten\decoder1.\tbu_1.$procmux$886_CMP
    1: $flatten\decoder1.\tbu_1.$procmux$824_CMP
    2: $flatten\decoder1.\tbu_1.$procmux$767_CMP
    3: $flatten\decoder1.\tbu_1.$procmux$715_CMP
    4: $flatten\decoder1.\tbu_1.$procmux$668_CMP
    5: $flatten\decoder1.\tbu_1.$procmux$626_CMP
    6: $flatten\decoder1.\tbu_1.$procmux$589_CMP
    7: $flatten\decoder1.\tbu_1.$procmux$557_CMP

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 19'01---------------00   ->     0 8'00000001
      1:     0 19'11-------0--------0   ->     0 8'00000001
      2:     0 19'-1----------------1   ->     0 8'00000001
      3:     0 19'-0-----------------   ->     0 8'00000001
      4:     0 19'01---------------10   ->     4 8'00000001
      5:     0 19'11-------1--------0   ->     4 8'00000001
      6:     1 19'01-----------1----0   ->     0 8'00010000
      7:     1 19'11---1------------0   ->     0 8'00010000
      8:     1 19'-1----------------1   ->     0 8'00010000
      9:     1 19'-0-----------------   ->     0 8'00010000
     10:     1 19'01-----------0----0   ->     4 8'00010000
     11:     1 19'11---0------------0   ->     4 8'00010000
     12:     2 19'-1----------------1   ->     0 8'00000100
     13:     2 19'-0-----------------   ->     0 8'00000100
     14:     2 19'01-------------0--0   ->     1 8'00000100
     15:     2 19'11-----0----------0   ->     1 8'00000100
     16:     2 19'01-------------1--0   ->     5 8'00000100
     17:     2 19'11-----1----------0   ->     5 8'00000100
     18:     3 19'-1----------------1   ->     0 8'01000000
     19:     3 19'-0-----------------   ->     0 8'01000000
     20:     3 19'01---------1------0   ->     1 8'01000000
     21:     3 19'11-1--------------0   ->     1 8'01000000
     22:     3 19'01---------0------0   ->     5 8'01000000
     23:     3 19'11-0--------------0   ->     5 8'01000000
     24:     4 19'-1----------------1   ->     0 8'00000010
     25:     4 19'-0-----------------   ->     0 8'00000010
     26:     4 19'01--------------1-0   ->     2 8'00000010
     27:     4 19'11------1---------0   ->     2 8'00000010
     28:     4 19'01--------------0-0   ->     6 8'00000010
     29:     4 19'11------0---------0   ->     6 8'00000010
     30:     5 19'-1----------------1   ->     0 8'00100000
     31:     5 19'-0-----------------   ->     0 8'00100000
     32:     5 19'01----------0-----0   ->     2 8'00100000
     33:     5 19'11--0-------------0   ->     2 8'00100000
     34:     5 19'01----------1-----0   ->     6 8'00100000
     35:     5 19'11--1-------------0   ->     6 8'00100000
     36:     6 19'-1----------------1   ->     0 8'00001000
     37:     6 19'-0-----------------   ->     0 8'00001000
     38:     6 19'01------------1---0   ->     3 8'00001000
     39:     6 19'11----1-----------0   ->     3 8'00001000
     40:     6 19'01------------0---0   ->     7 8'00001000
     41:     6 19'11----0-----------0   ->     7 8'00001000
     42:     7 19'-1----------------1   ->     0 8'10000000
     43:     7 19'-0-----------------   ->     0 8'10000000
     44:     7 19'01--------0-------0   ->     3 8'10000000
     45:     7 19'110---------------0   ->     3 8'10000000
     46:     7 19'01--------1-------0   ->     7 8'10000000
     47:     7 19'111---------------0   ->     7 8'10000000

-------------------------------------

FSM `$fsm$\encoder1.cstate$1310' from module `viterbi_tx_rx':
-------------------------------------

  Information on FSM $fsm$\encoder1.cstate$1310 (\encoder1.cstate):

  Number of input signals:    2
  Number of output signals:   8
  Number of state bits:       8

  Input signals:
    0: \encoder_i
    1: \enable_encoder_i

  Output signals:
    0: $flatten\encoder1.$procmux$382_CMP
    1: $flatten\encoder1.$procmux$393_CMP
    2: $flatten\encoder1.$procmux$406_CMP
    3: $flatten\encoder1.$procmux$421_CMP
    4: $flatten\encoder1.$procmux$438_CMP
    5: $flatten\encoder1.$procmux$457_CMP
    6: $flatten\encoder1.$procmux$478_CMP
    7: $flatten\encoder1.$procmux$501_CMP

  State encoding:
    0: 8'-------1  <RESET STATE>
    1: 8'------1-
    2: 8'-----1--
    3: 8'----1---
    4: 8'---1----
    5: 8'--1-----
    6: 8'-1------
    7: 8'1-------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'10   ->     0 8'10000000
      1:     0 2'0-   ->     0 8'10000000
      2:     0 2'11   ->     1 8'10000000
      3:     1 2'0-   ->     0 8'00001000
      4:     1 2'10   ->     2 8'00001000
      5:     1 2'11   ->     3 8'00001000
      6:     2 2'0-   ->     0 8'00100000
      7:     2 2'11   ->     4 8'00100000
      8:     2 2'10   ->     5 8'00100000
      9:     3 2'0-   ->     0 8'00000010
     10:     3 2'11   ->     6 8'00000010
     11:     3 2'10   ->     7 8'00000010
     12:     4 2'11   ->     0 8'01000000
     13:     4 2'0-   ->     0 8'01000000
     14:     4 2'10   ->     1 8'01000000
     15:     5 2'0-   ->     0 8'00000100
     16:     5 2'11   ->     2 8'00000100
     17:     5 2'10   ->     3 8'00000100
     18:     6 2'0-   ->     0 8'00010000
     19:     6 2'10   ->     4 8'00010000
     20:     6 2'11   ->     5 8'00010000
     21:     7 2'0-   ->     0 8'00000001
     22:     7 2'10   ->     6 8'00000001
     23:     7 2'11   ->     7 8'00000001

-------------------------------------

18.52.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\decoder1.tbu_0.pstate$1290' from module `\viterbi_tx_rx'.
Mapping FSM `$fsm$\decoder1.tbu_1.pstate$1300' from module `\viterbi_tx_rx'.
Mapping FSM `$fsm$\encoder1.cstate$1310' from module `\viterbi_tx_rx'.

18.53. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 4) from port B of cell viterbi_tx_rx.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:37$209 ($add).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1431 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1435 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1562 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1558 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1592 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1596 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1384 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1380 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1367 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1363 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1350 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1418 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1414 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1401 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1397 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1346 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1329 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1325 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1575 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1579 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS000.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS001.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS010.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS011.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS100.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS101.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS110.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.\ACS111.$procmux$974_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1545 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1541 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1528 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1524 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1511 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1507 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1494 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1490 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1473 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1469 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1452 ($eq).
Removed top 1 bits (of 4) from port B of cell viterbi_tx_rx.$auto$fsm_map.cc:77:implement_pattern_cache$1448 ($eq).
Removed top 9 bits (of 10) from port B of cell viterbi_tx_rx.$flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:237$174 ($add).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:257$182 ($add).
Removed top 9 bits (of 10) from port B of cell viterbi_tx_rx.$flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:520$202 ($add).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:203$163 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:204$164 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:205$165 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:206$166 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:207$167 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:208$168 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:209$169 ($and).
Removed top 1 bits (of 8) from port A of cell viterbi_tx_rx.$flatten\decoder1.$and$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:210$170 ($and).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.$procmux$233_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell viterbi_tx_rx.$flatten\decoder1.$procmux$269_CMP0 ($eq).
Removed top 9 bits (of 10) from port B of cell viterbi_tx_rx.$flatten\decoder1.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:247$178 ($sub).
Removed top 9 bits (of 10) from port B of cell viterbi_tx_rx.$flatten\decoder1.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:510$198 ($sub).

18.54. Executing PEEPOPT pass (run peephole optimizers).

18.55. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 0 unused cells and 33 unused wires.
<suppressed ~1 debug messages>

18.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~3 debug messages>

18.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~42 debug messages>
Removed a total of 14 cells.

18.58. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~83 debug messages>

18.59. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.60. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.61. Executing OPT_SHARE pass.

18.62. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\decoder1.$procdff$1151 ($adff) from module viterbi_tx_rx (D = $flatten\decoder1.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:247$178_Y, Q = \decoder1.rd_mem_counter).
Adding EN signal on $flatten\decoder1.$procdff$1150 ($dff) from module viterbi_tx_rx (D = 10'0000000000, Q = \decoder1.wr_mem_counter).
Adding EN signal on $flatten\decoder1.$procdff$1147 ($adff) from module viterbi_tx_rx (D = $flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:257$182_Y, Q = \decoder1.mem_bank).
Adding EN signal on $flatten\decoder1.$procdff$1132 ($adff) from module viterbi_tx_rx (D = 1'1, Q = \decoder1.enable_tbu_0).
Adding EN signal on $flatten\decoder1.$procdff$1131 ($adff) from module viterbi_tx_rx (D = 1'1, Q = \decoder1.enable_tbu_1).
Adding SRST signal on $flatten\decoder1.$procdff$1123 ($dff) from module viterbi_tx_rx (D = $flatten\decoder1.$sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:510$198_Y, Q = \decoder1.wr_mem_counter_disp, rval = 10'0000000010).
Adding SRST signal on $flatten\decoder1.$procdff$1122 ($dff) from module viterbi_tx_rx (D = $flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:520$202_Y, Q = \decoder1.rd_mem_counter_disp, rval = 10'1111111101).
Setting constant 0-bit at position 0 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 2 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 3 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 4 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 5 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 6 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 7 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 8 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
Setting constant 0-bit at position 9 on $auto$ff.cc:294:slice$1687 ($dffe) from module viterbi_tx_rx.
[#visit=61, #solve=0, #remove=10, time=0.00 sec.]

18.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [9] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [8] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [7] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [6] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [5] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [4] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [3] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [2] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [1] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Warning: Driver-driver conflict for \decoder1.wr_mem_counter [0] between cell $flatten\decoder1.$procdff$1152.Q and constant 1'0 in viterbi_tx_rx: Resolved using constant.
Removed 13 unused cells and 26 unused wires.
<suppressed ~14 debug messages>

18.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~1 debug messages>

18.65. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~75 debug messages>

18.66. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$286: { $auto$opt_reduce.cc:134:opt_pmux$1219 $auto$opt_reduce.cc:134:opt_pmux$1698 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$291: { $auto$opt_reduce.cc:134:opt_pmux$1700 $auto$opt_reduce.cc:134:opt_pmux$1225 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$296: { $auto$opt_reduce.cc:134:opt_pmux$1219 $auto$opt_reduce.cc:134:opt_pmux$1702 }
    New ctrl vector for $pmux cell $flatten\decoder1.$procmux$301: { $auto$opt_reduce.cc:134:opt_pmux$1704 $auto$opt_reduce.cc:134:opt_pmux$1225 }
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 4 changes.

18.67. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

18.68. Executing OPT_SHARE pass.

18.69. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on $auto$ff.cc:294:slice$1692 ($adffe) from module viterbi_tx_rx (removing D path).
Setting constant 0-bit at position 0 on $auto$ff.cc:294:slice$1692 ($dlatch) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $auto$ff.cc:294:slice$1692 ($dlatch) from module viterbi_tx_rx.
[#visit=57, #solve=0, #remove=2, time=0.00 sec.]

18.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 1 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

18.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~10 debug messages>

18.72. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$266.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$266.
    dead port 2/3 on $pmux $flatten\decoder1.$procmux$271.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$271.
    dead port 2/3 on $pmux $flatten\decoder1.$procmux$276.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$276.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$281.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$281.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$286.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$286.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$291.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$291.
Removed 12 multiplexer ports.
<suppressed ~73 debug messages>

18.73. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.74. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

18.75. Executing OPT_SHARE pass.

18.76. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1134 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $flatten\decoder1.$procdff$1134 ($dff) from module viterbi_tx_rx.
[#visit=54, #solve=0, #remove=2, time=0.00 sec.]

18.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

18.78. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.79. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~62 debug messages>

18.80. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.82. Executing OPT_SHARE pass.

18.83. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1133 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $flatten\decoder1.$procdff$1133 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 2 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 3 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 4 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 5 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 6 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 7 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 8 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 9 on $flatten\decoder1.$procdff$1135 ($dff) from module viterbi_tx_rx.
Setting constant 1-bit at position 0 on $flatten\decoder1.$procdff$1139 ($dff) from module viterbi_tx_rx.
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1140 ($dff) from module viterbi_tx_rx.
[#visit=53, #solve=0, #remove=14, time=0.00 sec.]

18.84. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.85. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~17 debug messages>

18.86. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$230.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$230.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$235.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$235.
    dead port 2/3 on $pmux $flatten\decoder1.$procmux$240.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$240.
    dead port 2/3 on $pmux $flatten\decoder1.$procmux$245.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$245.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$250.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$250.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$255.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$255.
Removed 12 multiplexer ports.
<suppressed ~55 debug messages>

18.87. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.88. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

18.89. Executing OPT_SHARE pass.

18.90. Executing OPT_DFF pass (perform DFF optimizations).
Handling never-active EN on viterbi_tx_rx:decoder1.enable_tbu_0_1693 ($adffe) from module viterbi_tx_rx (removing D path).
Setting constant 0-bit at position 0 on viterbi_tx_rx:decoder1.enable_tbu_0_1693 ($dlatch) from module viterbi_tx_rx.
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1124 ($dff) from module viterbi_tx_rx.
[#visit=45, #solve=0, #remove=2, time=0.00 sec.]

18.91. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 209 unused cells and 372 unused wires.
<suppressed ~424 debug messages>

18.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~166 debug messages>

18.93. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$218.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$218.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$221.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$221.
Removed 4 multiplexer ports.
<suppressed ~13 debug messages>

18.94. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.95. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

18.96. Executing OPT_SHARE pass.

18.97. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\decoder1.\tbu_0.$procdff$1174 ($dff) from module viterbi_tx_rx (D = 1'x, Q = \decoder1.tbu_0.wr_en, rval = 1'0).
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1119 ($dff) from module viterbi_tx_rx.
Setting constant 1-bit at position 0 on $flatten\decoder1.$procdff$1126 ($dff) from module viterbi_tx_rx.
Setting constant 1-bit at position 0 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 1 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 2 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 3 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 4 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 5 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 6 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 7 on $auto$fsm_map.cc:172:map_fsm$1465 ($adff) from module viterbi_tx_rx.
Setting constant 0-bit at position 0 on viterbi_tx_rx:decoder1.tbu_0.wr_en_1705 ($sdff) from module viterbi_tx_rx.
[#visit=27, #solve=0, #remove=11, time=0.00 sec.]

18.98. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 7 unused cells and 164 unused wires.
<suppressed ~15 debug messages>

18.99. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~24 debug messages>

18.100. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 2/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 3/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 4/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 5/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 6/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 7/8 on $pmux $flatten\decoder1.\tbu_0.$procmux$956.
    dead port 1/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 2/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 3/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 4/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 5/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 6/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
    dead port 7/8 on $pmux $flatten\decoder1.\tbu_1.$procmux$956.
Removed 14 multiplexer ports.
<suppressed ~6 debug messages>

18.101. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.102. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.103. Executing OPT_SHARE pass.

18.104. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active async load on $flatten\decoder1.\tbu_1.$auto$proc_dlatch.cc:427:proc_dlatch$1113 ($dlatch) from module viterbi_tx_rx (changing to combinatorial circuit).
Removing never-active async load on $flatten\decoder1.\tbu_0.$auto$proc_dlatch.cc:427:proc_dlatch$1113 ($dlatch) from module viterbi_tx_rx.
Setting constant 0-bit at position 0 on $flatten\decoder1.$procdff$1118 ($dff) from module viterbi_tx_rx.
Setting constant 1-bit at position 0 on $flatten\decoder1.\tbu_1.$procdff$1174 ($dff) from module viterbi_tx_rx.
[#visit=18, #solve=0, #remove=2, time=0.00 sec.]

18.105. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 5 unused cells and 36 unused wires.
<suppressed ~17 debug messages>

18.106. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.
<suppressed ~4 debug messages>

18.107. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/3 on $pmux $flatten\decoder1.$procmux$215.
    dead port 3/3 on $pmux $flatten\decoder1.$procmux$215.
Removed 2 multiplexer ports.
<suppressed ~1 debug messages>

18.108. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.110. Executing OPT_SHARE pass.

18.111. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=13, #solve=0, #remove=0, time=0.00 sec.]

18.112. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 14 unused cells and 28 unused wires.
<suppressed ~36 debug messages>

18.113. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.114. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.115. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.116. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.117. Executing OPT_SHARE pass.

18.118. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

18.119. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.120. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 9

18.121. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.123. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.124. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.125. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.126. Executing OPT_SHARE pass.

18.127. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

18.128. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.129. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.131. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.132. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.133. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.134. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.135. Executing OPT_SHARE pass.

18.136. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

18.137. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=10, #remove=0, time=0.01 sec.]

18.138. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.139. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.140. Executing WREDUCE pass (reducing word size of cells).

18.141. Executing PEEPOPT pass (run peephole optimizers).

18.142. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.143. Executing DEMUXMAP pass.

18.144. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 72
   Number of wire bits:            170
   Number of public wires:          70
   Number of public wire bits:     159
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                  8
     $add                            1
     $adff                           1
     $dff                            3
     $memrd_v2                       1
     $memwr_v2                       1
     $sdff                           1

18.145. Executing RS_DSP_MULTADD pass.

18.146. Executing WREDUCE pass (reducing word size of cells).

18.147. Executing RS_DSP_MACC pass.
Warning: The synchronous register element Generic DFF $auto$ff.cc:294:slice$1696 (type: $sdff) cannot be merged in RS_DSP due to architectural limitations. Please address this issue in the RTL at line "/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/viterbi_tx_rx.v:56.12-63.5|/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:513.4-521.7"

18.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.149. Executing TECHMAP pass (map to technology primitives).

18.149.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

18.149.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.150. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 72
   Number of wire bits:            170
   Number of public wires:          70
   Number of public wire bits:     159
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                  8
     $add                            1
     $adff                           1
     $dff                            3
     $memrd_v2                       1
     $memwr_v2                       1
     $sdff                           1

18.151. Executing TECHMAP pass (map to technology primitives).

18.151.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

18.151.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.152. Executing TECHMAP pass (map to technology primitives).

18.152.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

18.152.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.153. Executing rs_pack_dsp_regs pass.

18.154. Executing RS_DSP_IO_REGS pass.

18.155. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 72
   Number of wire bits:            170
   Number of public wires:          70
   Number of public wire bits:     159
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                  8
     $add                            1
     $adff                           1
     $dff                            3
     $memrd_v2                       1
     $memwr_v2                       1
     $sdff                           1

18.156. Executing TECHMAP pass (map to technology primitives).

18.156.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

18.156.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~14 debug messages>

18.157. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 72
   Number of wire bits:            170
   Number of public wires:          70
   Number of public wire bits:     159
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                  8
     $add                            1
     $adff                           1
     $dff                            3
     $memrd_v2                       1
     $memwr_v2                       1
     $sdff                           1

18.158. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module viterbi_tx_rx:
  creating $macc model for $flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:520$202 ($add).
  creating $alu model for $macc $flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:520$202.
  creating $alu cell for $flatten\decoder1.$add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/repo_changes_to_newfalg/Validation/RTL_testcases/RTL_Benchmarks_Gap_Analysis/viterb_encoder_and_decoder/EDA-2439/./rtl/decoder.v:520$202: $auto$alumacc.cc:485:replace_alu$1706
  created 1 $alu and 0 $macc cells.

18.159. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.160. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.161. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.162. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.163. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.164. Executing OPT_SHARE pass.

18.165. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

18.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.168. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 74
   Number of wire bits:            190
   Number of public wires:          70
   Number of public wire bits:     159
   Number of memories:               1
   Number of memory bits:         1024
   Number of processes:              0
   Number of cells:                  8
     $adff                           1
     $alu                            1
     $dff                            3
     $memrd_v2                       1
     $memwr_v2                       1
     $sdff                           1

18.169. Executing MEMORY pass.

18.169.1. Executing OPT_MEM pass (optimize memories).
viterbi_tx_rx.decoder1.disp_mem_0.mem: removing const-x lane 0
Performed a total of 2 transformations.

18.169.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

18.169.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

18.169.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

18.169.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

18.169.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 4 unused cells and 9 unused wires.
<suppressed ~10 debug messages>

18.169.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

18.169.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

18.169.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.169.10. Executing MEMORY_COLLECT pass (generating $mem cells).

18.170. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $dff                            2

18.171. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

18.172. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.173. Executing MEMORY_LIBMAP pass (mapping memories to cells).

18.174. Executing MEMORY_LIBMAP pass (mapping memories to cells).

18.175. Executing Rs_BRAM_Split pass.

18.176. Executing TECHMAP pass (map to technology primitives).

18.176.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

18.176.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

18.177. Executing TECHMAP pass (map to technology primitives).

18.177.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

18.177.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.178. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

18.179. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.180. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.181. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.182. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.183. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.184. Executing OPT_SHARE pass.

18.185. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\decoder1.\disp_mem_0.$procdff$1164 ($dff) from module viterbi_tx_rx.
[#visit=2, #solve=0, #remove=1, time=0.00 sec.]

18.186. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.187. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.188. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.189. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.190. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.191. Executing OPT_SHARE pass.

18.192. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 1-bit at position 0 on $flatten\decoder1.$procdff$1117 ($dff) from module viterbi_tx_rx.
[#visit=1, #solve=0, #remove=1, time=0.00 sec.]

18.193. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.194. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.195. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.196. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.197. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.198. Executing OPT_SHARE pass.

18.199. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.200. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.201. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 3

18.202. Executing PMUXTREE pass.

18.203. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.

18.204. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

18.205. Executing TECHMAP pass (map to technology primitives).

18.205.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.205.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

18.205.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

18.206. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

18.207. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.208. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.209. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.210. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.211. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.212. Executing OPT_SHARE pass.

18.213. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.214. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.215. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.216. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.217. Executing TECHMAP pass (map to technology primitives).

18.217.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.217.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

18.218. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

18.219. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.220. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.221. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.222. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.223. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.224. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.225. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.226. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.228. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.229. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.230. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.231. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.232. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.233. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.235. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.236. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.237. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.238. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.239. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.240. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.241. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.242. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.243. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.244. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

   Number of Generic REGs:          0

ABC-DFF iteration : 1

18.245. Executing ABC pass (technology mapping using ABC).

18.245.1. Summary of detected clock domains:

  #logic partitions = 0

18.246. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.247. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.248. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.249. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.250. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.251. Executing OPT_SHARE pass.

18.252. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.253. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.254. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

18.255. Executing ABC pass (technology mapping using ABC).

18.255.1. Summary of detected clock domains:

  #logic partitions = 0

18.256. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.257. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.258. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.259. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.260. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.261. Executing OPT_SHARE pass.

18.262. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.263. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.264. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

18.265. Executing ABC pass (technology mapping using ABC).

18.265.1. Summary of detected clock domains:

  #logic partitions = 0

18.266. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.267. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.268. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.269. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.270. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.271. Executing OPT_SHARE pass.

18.272. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.273. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.274. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

18.275. Executing ABC pass (technology mapping using ABC).

18.275.1. Summary of detected clock domains:

  #logic partitions = 0

18.276. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.277. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.278. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.279. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.280. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.281. Executing OPT_SHARE pass.

18.282. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.283. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1
select with DFL2 synthesis (thresh-logic=0.920000, thresh_dff=0.980000)

18.285. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

18.286. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.287. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.288. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.289. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.290. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.291. Executing OPT_SHARE pass.

18.292. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.293. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.294. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.295. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.296. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.297. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.298. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.299. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.300. Executing OPT_SHARE pass.

18.301. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.302. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.303. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.304. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.305. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.306. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.307. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.308. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.309. Executing OPT_SHARE pass.

18.310. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.311. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.312. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.313. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.314. Executing BMUXMAP pass.

18.315. Executing DEMUXMAP pass.

18.316. Executing ABC pass (technology mapping using ABC).

18.316.1. Extracting gate netlist of module `\viterbi_tx_rx' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

18.317. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.318. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.319. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.320. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.321. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.322. Executing OPT_SHARE pass.

18.323. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.324. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.325. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.326. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

18.327. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.328. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.329. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.330. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.331. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.332. Executing OPT_SHARE pass.

18.333. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.334. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.335. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.336. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.337. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.338. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.339. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.340. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.341. Executing OPT_SHARE pass.

18.342. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.343. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.344. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.345. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.346. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

18.347. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

18.348. Executing RS_DFFSR_CONV pass.

18.349. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                 65
   Number of wire bits:            127
   Number of public wires:          65
   Number of public wire bits:     127
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

18.350. Executing TECHMAP pass (map to technology primitives).

18.350.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.350.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

18.350.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~120 debug messages>

18.351. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.352. Executing SIMPLEMAP pass (map simple cells to gate primitives).

18.353. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.354. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.355. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.356. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.357. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.358. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.359. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.360. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.361. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.362. Executing OPT_SHARE pass.

18.363. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.364. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.365. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.366. Executing TECHMAP pass (map to technology primitives).

18.366.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.366.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

18.367. Executing ABC pass (technology mapping using ABC).

18.367.1. Extracting gate netlist of module `\viterbi_tx_rx' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs (dfl=1).
Don't call ABC as there is nothing to map.

18.368. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

18.369. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.370. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \viterbi_tx_rx..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

18.371. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \viterbi_tx_rx.
Performed a total of 0 changes.

18.372. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\viterbi_tx_rx'.
Removed a total of 0 cells.

18.373. Executing OPT_SHARE pass.

18.374. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

18.375. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..

18.376. Executing OPT_EXPR pass (perform const folding).
Optimizing module viterbi_tx_rx.

RUN-OPT ITERATIONS DONE : 1

18.377. Executing HIERARCHY pass (managing design hierarchy).

18.377.1. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx

18.377.2. Analyzing design hierarchy..
Top module:  \viterbi_tx_rx
Removed 0 unused modules.

18.378. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \viterbi_tx_rx..
Removed 0 unused cells and 60 unused wires.
<suppressed ~60 debug messages>

18.379. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

18.380. Executing TECHMAP pass (map to technology primitives).

18.380.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/01_25_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

18.380.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

18.381. Printing statistics.

=== viterbi_tx_rx ===

   Number of wires:                  5
   Number of wire bits:              5
   Number of public wires:           5
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

   Number of LUTs:                   0
   Number of REGs:                   0
   Number of CARRY ADDERs:           0

19. Executing Verilog backend.
Dumping module `\viterbi_tx_rx'.

20. Executing BLIF backend.

Warnings: 29 unique messages, 57 total
End of script. Logfile hash: d625be737e, CPU: user 1.49s system 0.06s, MEM: 33.27 MB peak
Yosys 0.18+10 (git sha1 e9e2c024c, gcc 11.2.1 -fPIC -Os)
Time spent: 20% 62x read_verilog (0 sec), 18% 61x opt_expr (0 sec), ...
