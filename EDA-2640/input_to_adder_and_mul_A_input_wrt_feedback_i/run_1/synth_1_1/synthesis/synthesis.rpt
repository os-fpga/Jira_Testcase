/*******************************************************************************
Copyright (c) 2022-2024 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.
*********************************************************************************/

Version  : 2024.04
Build    : 1.0.26
Hash     : e61d339
Date     : Apr  2 2024
Type     : Engineering
Log Time   : Tue Apr  2 08:02:39 2024 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 89ed6d12d, gcc 11.2.1 -fPIC -Os)


-- Executing script file `input_to_adder_and_mul_A_input_wrt_feedback_i.ys' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v' to AST representation.
Generating RTLIL representation for module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i

3.2. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i
Removed 0 unused modules.

4. Executing synth_rs pass: v0.4.218

4.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v' to AST representation.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CARRY.v:10.1-19.10.
Generating RTLIL representation for module `\CARRY'.
Successfully finished Verilog frontend.

4.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:20.1-34.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:48.1-62.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:81.1-97.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:115.1-131.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:150.1-166.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v:184.1-200.10.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

4.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v' to AST representation.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFRE'.
Successfully finished Verilog frontend.

4.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v' to AST representation.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DFFNRE.v:11.1-25.10.
Generating RTLIL representation for module `\DFFNRE'.
Successfully finished Verilog frontend.

4.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v' to AST representation.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT1.v:10.1-20.10.
Generating RTLIL representation for module `\LUT1'.
Successfully finished Verilog frontend.

4.7. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v' to AST representation.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT2.v:10.1-21.10.
Generating RTLIL representation for module `\LUT2'.
Successfully finished Verilog frontend.

4.8. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v' to AST representation.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT3.v:10.1-22.10.
Generating RTLIL representation for module `\LUT3'.
Successfully finished Verilog frontend.

4.9. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v' to AST representation.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT4.v:11.1-25.10.
Generating RTLIL representation for module `\LUT4'.
Successfully finished Verilog frontend.

4.10. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v' to AST representation.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT5.v:10.1-24.10.
Generating RTLIL representation for module `\LUT5'.
Successfully finished Verilog frontend.

4.11. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v' to AST representation.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/LUT6.v:10.1-25.10.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

4.12. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v' to AST representation.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/CLK_BUF.v:10.1-17.10.
Generating RTLIL representation for module `\CLK_BUF'.
Successfully finished Verilog frontend.

4.13. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v' to AST representation.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/O_BUF.v:10.1-22.10.
Generating RTLIL representation for module `\O_BUF'.
Successfully finished Verilog frontend.

4.14. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v' to AST representation.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:10.1-324.10.
Generating RTLIL representation for module `\DSP38'.
/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/sim_models/verilog/DSP38.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

4.15. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v' to AST representation.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:2.1-29.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:33.1-84.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\RS_DSP3'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/bram_map_rs.v:116.1-149.10.
Generating RTLIL representation for module `\DSP19X2'.
Successfully finished Verilog frontend.

4.16. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:112.1-540.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:542.1-951.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v:953.1-1356.10.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.17. Executing HIERARCHY pass (managing design hierarchy).

4.17.1. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i

4.17.2. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i
Removed 0 unused modules.

4.18. Executing PROC pass (convert processes to netlists).

4.18.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.18.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 2 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12 in module input_to_adder_and_mul_A_input_wrt_feedback_i.
Marked 4 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12 in module input_to_adder_and_mul_A_input_wrt_feedback_i.
Removed 1 dead cases from process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3 in module input_to_adder_and_mul_A_input_wrt_feedback_i.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3 in module input_to_adder_and_mul_A_input_wrt_feedback_i.
Marked 1 switch rules as full_case in process $proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1 in module input_to_adder_and_mul_A_input_wrt_feedback_i.
Removed a total of 3 dead cases.

4.18.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 6 redundant assignments.
Promoted 1 assignment to connection.

4.18.4. Executing PROC_INIT pass (extract init attributes).

4.18.5. Executing PROC_ARST pass (detect async resets in processes).

4.18.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~6 debug messages>

4.18.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12'.
     1/1: $0\add_or_sub[37:0]
Creating decoders for process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3'.
     1/1: $1\mul[37:0]
Creating decoders for process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
     1/5: $0\acc_fir_reg[3:0]
     2/5: $0\feedback_i_reg[2:0]
     3/5: $0\subtract_i_reg[0:0]
     4/5: $0\i2[17:0]
     5/5: $0\i1[19:0]

4.18.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\mul' from process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3'.

4.18.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\add_or_sub' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12'.
  created $dff cell `$procdff$58' with positive edge clock.
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\i1' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
  created $dff cell `$procdff$59' with positive edge clock.
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\i2' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
  created $dff cell `$procdff$60' with positive edge clock.
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\acc_fir_reg' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
  created $dff cell `$procdff$61' with positive edge clock.
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\subtract_i_reg' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
  created $dff cell `$procdff$62' with positive edge clock.
Creating register for signal `\input_to_adder_and_mul_A_input_wrt_feedback_i.\feedback_i_reg' using process `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
  created $dff cell `$procdff$63' with positive edge clock.

4.18.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.18.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12'.
Removing empty process `input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:55$12'.
Found and cleaned up 1 empty switch in `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3'.
Removing empty process `input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:34$3'.
Found and cleaned up 1 empty switch in `\input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
Removing empty process `input_to_adder_and_mul_A_input_wrt_feedback_i.$proc$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:15$1'.
Cleaned up 6 empty switches.

4.18.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~5 debug messages>

4.19. Executing SPLITNETS pass (splitting up multi-bit signals).

4.20. Executing DEMUXMAP pass.

4.21. Executing FLATTEN pass (flatten design).

4.22. Executing DEMUXMAP pass.

4.23. Executing TRIBUF pass.

4.24. Executing TRIBUF pass.

4.25. Executing DEMINOUT pass (demote inout ports to input or output).

4.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~1 debug messages>

4.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 3 unused cells and 23 unused wires.
<suppressed ~5 debug messages>

4.28. Executing CHECK pass (checking for obvious problems).
Checking module input_to_adder_and_mul_A_input_wrt_feedback_i...
Found and reported 0 problems.

4.29. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 55
   Number of wire bits:            951
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 55
     $add                            2
     $dff                            6
     $eq                            21
     $logic_not                      3
     $mul                            6
     $mux                            7
     $pmux                           3
     $reduce_or                      3
     $shl                            1
     $sub                            3

4.30. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.31. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.32. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

4.33. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.34. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.35. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $procmux$27 in front of them:
        $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:66$16
        $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:62$14

    Found cells that share an operand and can be merged by moving the $pmux $procmux$36 in front of them:
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:47$9
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:45$8
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:43$7
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:41$6
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:39$5
        $mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:37$4

    Found cells that share an operand and can be merged by moving the $pmux $procmux$22 in front of them:
        $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:78$20
        $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:74$18

4.36. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.37. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

4.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.39. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

4.40. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
    New ctrl vector for $pmux cell $procmux$22: { $procmux$24_CMP $auto$opt_reduce.cc:134:opt_pmux$74 }
    New ctrl vector for $pmux cell $procmux$27: { $procmux$24_CMP $auto$opt_reduce.cc:134:opt_pmux$76 }
    New ctrl vector for $pmux cell $procmux$36: $auto$opt_reduce.cc:134:opt_pmux$78
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$73: { $procmux$25_CMP $procmux$23_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$75: { $procmux$25_CMP $procmux$23_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_pmux$77: { $procmux$25_CMP $procmux$24_CMP $procmux$23_CMP }
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 6 changes.

4.41. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

4.42. Executing OPT_SHARE pass.

4.43. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.44. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

4.45. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.46. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.47. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.48. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.49. Executing OPT_SHARE pass.

4.50. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.52. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 3

4.53. Executing FSM pass (extract and optimize FSM).

4.53.1. Executing FSM_DETECT pass (finding FSMs in design).

4.53.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.53.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.53.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.53.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.53.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.53.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.53.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.54. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell input_to_adder_and_mul_A_input_wrt_feedback_i.$procmux$23_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell input_to_adder_and_mul_A_input_wrt_feedback_i.$procmux$23_CMP1 ($eq).
Removed top 2 bits (of 3) from port B of cell input_to_adder_and_mul_A_input_wrt_feedback_i.$procmux$24_CMP0 ($eq).

4.55. Executing PEEPOPT pass (run peephole optimizers).

4.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.58. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.62. Executing OPT_SHARE pass.

4.63. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$63 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = \feedback_i, Q = \feedback_i_reg, rval = 3'000).
Adding SRST signal on $procdff$62 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = \subtract_i, Q = \subtract_i_reg, rval = 1'0).
Adding SRST signal on $procdff$61 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = \acc_fir, Q = \acc_fir_reg, rval = 4'0000).
Adding SRST signal on $procdff$60 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = \B, Q = \i2, rval = 18'000000000000000000).
Adding SRST signal on $procdff$59 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = \A, Q = \i1, rval = 20'00000000000000000000).
Adding SRST signal on $procdff$58 ($dff) from module input_to_adder_and_mul_A_input_wrt_feedback_i (D = $procmux$31_Y, Q = \add_or_sub, rval = 38'00000000000000000000000000000000000000).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.64. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 6 unused cells and 6 unused wires.
<suppressed ~7 debug messages>

4.65. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.69. Executing OPT_SHARE pass.

4.70. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.72. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 2

4.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.74. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.75. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.76. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.77. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.78. Executing OPT_SHARE pass.

4.79. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.80. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.81. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.82. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.83. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.84. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.85. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.86. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.87. Executing OPT_SHARE pass.

4.88. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.89. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=38, #remove=0, time=0.20 sec.]

4.90. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.91. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.92. Executing WREDUCE pass (reducing word size of cells).

4.93. Executing PEEPOPT pass (run peephole optimizers).

4.94. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.95. Executing DEMUXMAP pass.

4.96. Executing SPLITNETS pass (splitting up multi-bit signals).

4.97. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 36
   Number of wire bits:            662
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $add                            1
     $eq                             7
     $logic_not                      1
     $mul                            1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     $sub                            2

4.98. Executing RS_DSP_MULTADD pass.

4.99. Executing WREDUCE pass (reducing word size of cells).

4.100. Executing RS_DSP_MACC pass.

4.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.102. Executing TECHMAP pass (map to technology primitives).

4.102.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.102.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~58 debug messages>

4.103. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 39
   Number of wire bits:            756
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $__soft_mul                     1
     $add                            1
     $eq                             7
     $logic_not                      1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     $sub                            2

4.104. Executing TECHMAP pass (map to technology primitives).

4.104.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp_check_maxwidth.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.104.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~58 debug messages>

4.105. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 42
   Number of wire bits:            850
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 29
     $__soft_mul                     1
     $add                            1
     $eq                             7
     $logic_not                      1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     $sub                            2

4.106. Executing TECHMAP pass (map to technology primitives).

4.106.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~277 debug messages>

4.107. Executing TECHMAP pass (map to technology primitives).

4.107.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

4.107.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.108. Executing TECHMAP pass (map to technology primitives).

4.108.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Generating RTLIL representation for module `\$__RS_MUL10X9'.
Successfully finished Verilog frontend.

4.108.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~60 debug messages>

4.109. Executing RS_DSP_SIMD pass.

4.110. Executing TECHMAP pass (map to technology primitives).

4.110.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_10x9x32_cfg_params'.
Successfully finished Verilog frontend.

4.110.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~33 debug messages>

4.111. Executing TECHMAP pass (map to technology primitives).

4.111.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.111.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.112. Executing rs_pack_dsp_regs pass.
<suppressed ~4 debug messages>

4.113. Executing RS_DSP_IO_REGS pass.

4.114. Executing TECHMAP pass (map to technology primitives).

4.114.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp38_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Successfully finished Verilog frontend.

4.114.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~27 debug messages>

4.115. Executing TECHMAP pass (map to technology primitives).

4.115.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/dsp19x2_map.v' to AST representation.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC'.
Generating RTLIL representation for module `\RS_DSPX2_MULT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSPX2_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP3'.
Successfully finished Verilog frontend.

4.115.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

4.116. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                118
   Number of wire bits:           5126
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $add                            2
     $eq                             7
     $logic_not                      1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     $sub                            2
     DSP38                           2

4.117. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module input_to_adder_and_mul_A_input_wrt_feedback_i:
  creating $macc model for $techmap$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:47$9.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$89 ($add).
  creating $macc model for $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:78$20 ($add).
  creating $macc model for $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:64$15 ($sub).
  creating $macc model for $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:66$16 ($sub).
  creating $alu model for $macc $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:66$16.
  creating $alu model for $macc $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:64$15.
  creating $alu model for $macc $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:78$20.
  creating $alu model for $macc $techmap$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:47$9.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$89.
  creating $alu cell for $techmap$mul$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:47$9.$add$/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/mul2dsp.v:194$89: $auto$alumacc.cc:485:replace_alu$98
  creating $alu cell for $add$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:78$20: $auto$alumacc.cc:485:replace_alu$101
  creating $alu cell for $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:64$15: $auto$alumacc.cc:485:replace_alu$104
  creating $alu cell for $sub$/nfs_scratch/scratch/CompilerValidation/abdul_hameed/25march/input_to_adder_and_mul_A_input_wrt_feedback_i/EDA-2640/./rtl/input_to_adder_and_mul_A_input_wrt_feedback_i.v:66$16: $auto$alumacc.cc:485:replace_alu$107
  created 4 $alu and 0 $macc cells.

4.118. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.119. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.120. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

4.121. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.122. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.123. Executing OPT_SHARE pass.

4.124. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.125. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 77 unused wires.
<suppressed ~1 debug messages>

4.126. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.127. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 49
   Number of wire bits:           1114
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $alu                            4
     $eq                             7
     $logic_not                      1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     DSP38                           2

4.128. Executing MEMORY pass.

4.128.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.128.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.128.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.128.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.128.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.128.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.128.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.128.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.128.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.128.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.129. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                 49
   Number of wire bits:           1114
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $alu                            4
     $eq                             7
     $logic_not                      1
     $mux                            2
     $pmux                           4
     $reduce_or                      4
     $sdff                           6
     $shl                            1
     DSP38                           2

4.130. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~3 debug messages>

4.131. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.132. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.133. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.134. Executing Rs_BRAM_Split pass.

4.135. Executing TECHMAP pass (map to technology primitives).

4.135.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

4.135.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.136. Executing TECHMAP pass (map to technology primitives).

4.136.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new_version.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

4.136.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

4.137. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

4.138. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.139. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.140. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.141. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.142. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.143. Executing OPT_SHARE pass.

4.144. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=6, #solve=0, #remove=0, time=0.00 sec.]

4.145. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.146. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.147. Executing PMUXTREE pass.

4.148. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting input_to_adder_and_mul_A_input_wrt_feedback_i.$auto$pmuxtree.cc:65:recursive_mux_generator$144 ... input_to_adder_and_mul_A_input_wrt_feedback_i.$auto$pmuxtree.cc:65:recursive_mux_generator$146 to a pmux with 2 cases.
Converting input_to_adder_and_mul_A_input_wrt_feedback_i.$auto$pmuxtree.cc:65:recursive_mux_generator$140 ... input_to_adder_and_mul_A_input_wrt_feedback_i.$auto$pmuxtree.cc:65:recursive_mux_generator$142 to a pmux with 2 cases.
Converted 4 (p)mux cells into 2 pmux cells.
<suppressed ~16 debug messages>

4.149. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.150. Executing TECHMAP pass (map to technology primitives).

4.150.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.150.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

4.150.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~1148 debug messages>

4.151. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                715
   Number of wire bits:           9722
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1877
     $_AND_                        424
     $_DFF_P_                       84
     $_MUX_                        624
     $_NOT_                        160
     $_OR_                         252
     $_XOR_                        255
     CARRY                          76
     DSP38                           2

4.152. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~511 debug messages>

4.153. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
<suppressed ~450 debug messages>
Removed a total of 150 cells.

4.154. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.155. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.156. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.157. Executing OPT_SHARE pass.

4.158. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.159. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 86 unused cells and 559 unused wires.
<suppressed ~87 debug messages>

4.160. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.161. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.162. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.163. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.164. Executing OPT_SHARE pass.

4.165. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.166. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.167. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 2

4.168. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~38 debug messages>

4.169. Executing TECHMAP pass (map to technology primitives).

4.169.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.169.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.170. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                169
   Number of wire bits:           1752
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1105
     $_AND_                        218
     $_DFF_P_                       84
     $_MUX_                        414
     $_NOT_                         49
     $_OR_                         110
     $_XOR_                        152
     CARRY                          76
     DSP38                           2

4.171. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.173. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.174. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.175. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.176. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.177. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 5 unused cells and 6 unused wires.
<suppressed ~6 debug messages>

4.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.179. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.180. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.181. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.182. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.183. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.184. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 2

4.185. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.186. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.187. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.188. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.190. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.191. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.192. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.193. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.194. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.195. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.196. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.197. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.198. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.199. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.00 sec.]

4.200. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.201. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.202. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                163
   Number of wire bits:           1705
   Number of public wires:          20
   Number of public wire bits:     308
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1100
     $_AND_                        218
     $_DFF_P_                       84
     $_MUX_                        414
     $_NOT_                         48
     $_OR_                         106
     $_XOR_                        152
     CARRY                          76
     DSP38                           2

   Number of Generic REGs:          84

ABC-DFF iteration : 1

4.203. Executing ABC pass (technology mapping using ABC).

4.203.1. Summary of detected clock domains:
  1100 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.203.2. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1022 gates and 1280 wires to a netlist network with 257 inputs and 246 outputs (dfl=1).

4.203.2.1. Executing ABC.
[Time = 0.12 sec.]

4.204. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.205. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.206. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.207. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.208. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.209. Executing OPT_SHARE pass.

4.210. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.211. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 715 unused wires.
<suppressed ~2 debug messages>

4.212. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 2

4.213. Executing ABC pass (technology mapping using ABC).

4.213.1. Summary of detected clock domains:
  1132 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.213.2. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1054 gates and 1311 wires to a netlist network with 257 inputs and 246 outputs (dfl=1).

4.213.2.1. Executing ABC.
[Time = 0.11 sec.]

4.214. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~2 debug messages>

4.215. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.216. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.217. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.218. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.219. Executing OPT_SHARE pass.

4.220. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.221. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1395 unused wires.
<suppressed ~1 debug messages>

4.222. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

4.223. Executing ABC pass (technology mapping using ABC).

4.223.1. Summary of detected clock domains:
  1132 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.223.2. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1054 gates and 1311 wires to a netlist network with 257 inputs and 246 outputs (dfl=2).

4.223.2.1. Executing ABC.
[Time = 0.29 sec.]

4.224. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~5 debug messages>

4.225. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.226. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.227. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.228. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.229. Executing OPT_SHARE pass.

4.230. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.231. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1395 unused wires.
<suppressed ~1 debug messages>

4.232. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

4.233. Executing ABC pass (technology mapping using ABC).

4.233.1. Summary of detected clock domains:
  1330 cells in clk=\clk, en={ }, arst={ }, srst={ }

  #logic partitions = 1

4.233.2. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \clk
Extracted 1252 gates and 1509 wires to a netlist network with 257 inputs and 246 outputs (dfl=2).

4.233.2.1. Executing ABC.
[Time = 0.31 sec.]

4.234. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~26 debug messages>

4.235. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.236. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.237. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.238. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.239. Executing OPT_SHARE pass.

4.240. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.241. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1593 unused wires.
<suppressed ~1 debug messages>

4.242. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1
select with DFL1 synthesis (thresh_logic=0.920000, thresh_dff=0.980000)

4.243. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.244. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.245. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.246. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.247. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.248. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.249. Executing OPT_SHARE pass.

4.250. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.00 sec.]

4.251. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.252. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.253. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.254. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.255. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.256. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.257. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.258. Executing OPT_SHARE pass.

4.259. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.00 sec.]

4.260. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.262. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.263. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.264. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.265. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.266. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.267. Executing OPT_SHARE pass.

4.268. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.269. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.00 sec.]

4.270. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.272. Executing BMUXMAP pass.

4.273. Executing DEMUXMAP pass.

4.274. Executing ABC pass (technology mapping using ABC).

4.274.1. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Extracted 970 gates and 1293 wires to a netlist network with 323 inputs and 246 outputs (dfl=1).

4.274.1.1. Executing ABC.
DE:   Version : 7.6
DE:   #PIs = 323  #Luts =   440  Max Lvl =   6  Avg Lvl =   2.67  [   0.11 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 323  #Luts =   430  Max Lvl =   6  Avg Lvl =   3.23  [   0.65 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 323  #Luts =   407  Max Lvl =   6  Avg Lvl =   2.62  [   0.69 sec. at Pass 2]{map}[6]
DE:   #PIs = 323  #Luts =   401  Max Lvl =   6  Avg Lvl =   2.78  [   0.88 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 323  #Luts =   401  Max Lvl =   6  Avg Lvl =   2.78  [   0.95 sec. at Pass 4]{map}[16]
DE:   #PIs = 323  #Luts =   400  Max Lvl =   6  Avg Lvl =   2.80  [   0.99 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 323  #Luts =   400  Max Lvl =   6  Avg Lvl =   2.80  [   0.97 sec. at Pass 6]{map}[16]
DE:   #PIs = 323  #Luts =   399  Max Lvl =   6  Avg Lvl =   2.76  [   0.94 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 323  #Luts =   399  Max Lvl =   6  Avg Lvl =   2.76  [   0.96 sec. at Pass 8]{map}[16]
DE:   #PIs = 323  #Luts =   396  Max Lvl =   6  Avg Lvl =   2.80  [   0.90 sec. at Pass 9]{postMap}[16]
DE:   #PIs = 323  #Luts =   396  Max Lvl =   6  Avg Lvl =   2.80  [   0.93 sec. at Pass 10]{map}[16]
DE:   #PIs = 323  #Luts =   393  Max Lvl =   6  Avg Lvl =   2.78  [   0.95 sec. at Pass 11]{postMap}[16]
DE:   #PIs = 323  #Luts =   393  Max Lvl =   6  Avg Lvl =   2.78  [   1.10 sec. at Pass 12]{map}[16]
DE:   #PIs = 323  #Luts =   393  Max Lvl =   6  Avg Lvl =   2.78  [   1.28 sec. at Pass 13]{postMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   1.47 sec. at Pass 14]{map}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   1.07 sec. at Pass 15]{postMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   1.00 sec. at Pass 16]{map}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   0.85 sec. at Pass 17]{postMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   0.68 sec. at Pass 18]{pushMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   0.74 sec. at Pass 19]{pushMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   0.80 sec. at Pass 19]{pushMap}[16]
DE:   #PIs = 323  #Luts =   392  Max Lvl =   6  Avg Lvl =   2.76  [   0.62 sec. at Pass 20]{finalMap}[16]
DE:   
DE:   total time =   19.60 sec.
[Time = 21.83 sec.]

4.275. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.276. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.277. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.278. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.279. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.280. Executing OPT_SHARE pass.

4.281. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.282. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1293 unused wires.
<suppressed ~1 debug messages>

4.283. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.284. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

4.285. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.286. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.287. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.288. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.289. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.290. Executing OPT_SHARE pass.

4.291. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.00 sec.]

4.292. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.293. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.294. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.295. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.296. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.297. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.298. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.299. Executing OPT_SHARE pass.

4.300. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.301. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=84, #solve=0, #remove=0, time=0.01 sec.]

4.302. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.303. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.304. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                265
   Number of wire bits:           1012
   Number of public wires:          19
   Number of public wire bits:     288
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                554
     $_DFF_P_                       84
     $lut                          392
     CARRY                          76
     DSP38                           2

4.305. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.306. Executing RS_DFFSR_CONV pass.

4.307. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                265
   Number of wire bits:           1012
   Number of public wires:          19
   Number of public wire bits:     288
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                554
     $_DFF_P_                       84
     $lut                          392
     CARRY                          76
     DSP38                           2

4.308. Executing TECHMAP pass (map to technology primitives).

4.308.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.308.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

4.308.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
No more expansions possible.
<suppressed ~596 debug messages>

4.309. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~10194 debug messages>

4.310. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.311. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.312. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
<suppressed ~2475 debug messages>
Removed a total of 825 cells.

4.313. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.01 sec.]

4.314. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1145 unused wires.
<suppressed ~1 debug messages>

4.315. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~145 debug messages>

4.316. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.317. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.318. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.319. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.320. Executing OPT_SHARE pass.

4.321. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.01 sec.]

4.322. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

4.323. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.324. Executing TECHMAP pass (map to technology primitives).

4.324.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.324.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

4.325. Executing ABC pass (technology mapping using ABC).

4.325.1. Extracting gate netlist of module `\input_to_adder_and_mul_A_input_wrt_feedback_i' to `<abc-temp-dir>/input.blif'..
Extracted 1480 gates and 1805 wires to a netlist network with 323 inputs and 246 outputs (dfl=1).

4.325.1.1. Executing ABC.
DE:   Version : 7.6
DE:   #PIs = 323  #Luts =   395  Max Lvl =   6  Avg Lvl =   2.73  [   0.11 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 323  #Luts =   393  Max Lvl =   6  Avg Lvl =   3.06  [   0.57 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 323  #Luts =   379  Max Lvl =   6  Avg Lvl =   3.07  [   0.68 sec. at Pass 2]{map}[6]
DE:   #PIs = 323  #Luts =   374  Max Lvl =   6  Avg Lvl =   2.76  [   0.90 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 323  #Luts =   391  Max Lvl =   5  Avg Lvl =   3.14  [   0.95 sec. at Pass 4]{map}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.99 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.95 sec. at Pass 6]{map}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.97 sec. at Pass 7]{postMap}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.89 sec. at Pass 8]{map}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.73 sec. at Pass 9]{pushMap}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.77 sec. at Pass 10]{pushMap}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.74 sec. at Pass 10]{pushMap}[16]
DE:   #PIs = 323  #Luts =   382  Max Lvl =   5  Avg Lvl =   2.58  [   0.54 sec. at Pass 11]{finalMap}[16]
DE:   
DE:   total time =    9.82 sec.
[Time = 11.91 sec.]

4.326. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

4.327. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.328. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \input_to_adder_and_mul_A_input_wrt_feedback_i..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.329. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \input_to_adder_and_mul_A_input_wrt_feedback_i.
Performed a total of 0 changes.

4.330. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.
Removed a total of 0 cells.

4.331. Executing OPT_SHARE pass.

4.332. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

4.333. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..
Removed 0 unused cells and 1422 unused wires.
<suppressed ~1 debug messages>

4.334. Executing OPT_EXPR pass (perform const folding).
Optimizing module input_to_adder_and_mul_A_input_wrt_feedback_i.

RUN-OPT ITERATIONS DONE : 1

4.335. Executing HIERARCHY pass (managing design hierarchy).

4.335.1. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i

4.335.2. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i
Removed 0 unused modules.

4.336. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \input_to_adder_and_mul_A_input_wrt_feedback_i..

4.337. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cells_map1.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__IO_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.338. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v' to AST representation.
Replacing existing blackbox module `\BOOT_CLOCK' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:9.1-14.10.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Replacing existing blackbox module `\CARRY' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:24.1-31.10.
Generating RTLIL representation for module `\CARRY'.
Replacing existing blackbox module `\CLK_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:41.1-46.10.
Generating RTLIL representation for module `\CLK_BUF'.
Replacing existing blackbox module `\DFFNRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:56.1-64.10.
Generating RTLIL representation for module `\DFFNRE'.
Replacing existing blackbox module `\DFFRE' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:74.1-82.10.
Generating RTLIL representation for module `\DFFRE'.
Replacing existing blackbox module `\DSP19X2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:92.1-126.10.
Generating RTLIL representation for module `\DSP19X2'.
Replacing existing blackbox module `\DSP38' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:136.1-162.10.
Generating RTLIL representation for module `\DSP38'.
Replacing existing blackbox module `\FIFO18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:172.1-219.10.
Generating RTLIL representation for module `\FIFO18KX2'.
Replacing existing blackbox module `\FIFO36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:229.1-254.10.
Generating RTLIL representation for module `\FIFO36K'.
Replacing existing blackbox module `\I_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:264.1-276.10.
Generating RTLIL representation for module `\I_BUF_DS'.
Replacing existing blackbox module `\I_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:286.1-297.10.
Generating RTLIL representation for module `\I_BUF'.
Replacing existing blackbox module `\I_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:307.1-314.10.
Generating RTLIL representation for module `\I_DDR'.
Replacing existing blackbox module `\I_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:324.1-335.10.
Generating RTLIL representation for module `\I_DELAY'.
Replacing existing blackbox module `\I_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:345.1-363.10.
Generating RTLIL representation for module `\I_SERDES'.
Replacing existing blackbox module `\LUT1' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:373.1-379.10.
Generating RTLIL representation for module `\LUT1'.
Replacing existing blackbox module `\LUT2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:389.1-395.10.
Generating RTLIL representation for module `\LUT2'.
Replacing existing blackbox module `\LUT3' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:405.1-411.10.
Generating RTLIL representation for module `\LUT3'.
Replacing existing blackbox module `\LUT4' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:421.1-427.10.
Generating RTLIL representation for module `\LUT4'.
Replacing existing blackbox module `\LUT5' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:437.1-443.10.
Generating RTLIL representation for module `\LUT5'.
Replacing existing blackbox module `\LUT6' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:453.1-459.10.
Generating RTLIL representation for module `\LUT6'.
Replacing existing blackbox module `\O_BUF_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:469.1-481.10.
Generating RTLIL representation for module `\O_BUF_DS'.
Replacing existing blackbox module `\O_BUFT_DS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:491.1-503.10.
Generating RTLIL representation for module `\O_BUFT_DS'.
Replacing existing blackbox module `\O_BUFT' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:513.1-526.10.
Generating RTLIL representation for module `\O_BUFT'.
Replacing existing blackbox module `\O_BUF' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:536.1-549.10.
Generating RTLIL representation for module `\O_BUF'.
Replacing existing blackbox module `\O_DDR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:559.1-566.10.
Generating RTLIL representation for module `\O_DDR'.
Replacing existing blackbox module `\O_DELAY' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:576.1-587.10.
Generating RTLIL representation for module `\O_DELAY'.
Replacing existing blackbox module `\O_SERDES_CLK' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:597.1-606.10.
Generating RTLIL representation for module `\O_SERDES_CLK'.
Replacing existing blackbox module `\O_SERDES' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:616.1-632.10.
Generating RTLIL representation for module `\O_SERDES'.
Replacing existing blackbox module `\PLL' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:642.1-657.10.
Generating RTLIL representation for module `\PLL'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_M' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:667.1-681.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_M'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AHB_S' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:691.1-708.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M0' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:718.1-757.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Replacing existing blackbox module `\SOC_FPGA_INTF_AXI_M1' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:767.1-806.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Replacing existing blackbox module `\SOC_FPGA_INTF_DMA' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:816.1-822.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Replacing existing blackbox module `\SOC_FPGA_INTF_IRQ' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:832.1-838.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Replacing existing blackbox module `\SOC_FPGA_INTF_JTAG' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:848.1-856.10.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Replacing existing blackbox module `\SOC_FPGA_TEMPERATURE' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:866.1-874.10.
Generating RTLIL representation for module `\SOC_FPGA_TEMPERATURE'.
Replacing existing blackbox module `\TDP_RAM18KX2' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:884.1-937.10.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Replacing existing blackbox module `\TDP_RAM36K' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:947.1-976.10.
Generating RTLIL representation for module `\TDP_RAM36K'.
Replacing existing blackbox module `\LATCH' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:993.1-998.10.
Generating RTLIL representation for module `\LATCH'.
Replacing existing blackbox module `\LATCHN' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1006.1-1011.10.
Generating RTLIL representation for module `\LATCHN'.
Replacing existing blackbox module `\LATCHR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1020.1-1026.10.
Generating RTLIL representation for module `\LATCHR'.
Replacing existing blackbox module `\LATCHS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1034.1-1040.10.
Generating RTLIL representation for module `\LATCHS'.
Replacing existing blackbox module `\LATCHNR' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1049.1-1055.10.
Generating RTLIL representation for module `\LATCHNR'.
Replacing existing blackbox module `\LATCHNS' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1064.1-1070.10.
Generating RTLIL representation for module `\LATCHNS'.
Replacing existing blackbox module `\BRAM2x18_TDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1075.1-1125.10.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Replacing existing blackbox module `\BRAM2x18_SDP' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1130.1-1164.10.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Replacing existing blackbox module `\_$_mem_v2_asymmetric' at /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/FPGA_PRIMITIVES_MODELS/blackbox_models/cell_sim_blackbox.v:1169.1-1215.12.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

4.339. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting rs__CLK_BUF on input_to_adder_and_mul_A_input_wrt_feedback_i.clk[0].

4.340. Executing TECHMAP pass (map to technology primitives).

4.340.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.340.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~7 debug messages>

4.341. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.clk using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.A using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.B using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.P using rs__O_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.acc_fir using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.coef_0_i using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.coef_1_i using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.coef_2_i using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.coef_3_i using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.feedback_i using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.reset using rs__I_BUF.
Mapping port input_to_adder_and_mul_A_input_wrt_feedback_i.subtract_i using rs__I_BUF.

4.342. Executing TECHMAP pass (map to technology primitives).

4.342.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/io_cell_final_map.v' to AST representation.
Generating RTLIL representation for module `\rs__CLK_BUF'.
Generating RTLIL representation for module `\rs__I_BUF'.
Generating RTLIL representation for module `\rs__O_BUF'.
Generating RTLIL representation for module `\rs__O_BUFT'.
Successfully finished Verilog frontend.

4.342.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~172 debug messages>

4.343. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:                769
   Number of wire bits:           1670
   Number of public wires:          19
   Number of public wire bits:     288
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                711
     $lut                          382
     CARRY                          76
     CLK_BUF                         1
     DFFRE                          84
     DSP38                           2
     I_BUF                         128
     O_BUF                          38

4.344. Executing TECHMAP pass (map to technology primitives).

4.344.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/04_02_2024_09_15_01/bin/../share/yosys/rapidsilicon/genesis3/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.344.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1789 debug messages>

4.345. Printing statistics.

=== input_to_adder_and_mul_A_input_wrt_feedback_i ===

   Number of wires:               1533
   Number of wire bits:           3722
   Number of public wires:          19
   Number of public wire bits:     288
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                711
     CARRY                          76
     CLK_BUF                         1
     DFFRE                          84
     DSP38                           2
     I_BUF                         128
     LUT1                           36
     LUT2                           72
     LUT3                           25
     LUT4                           13
     LUT5                           53
     LUT6                          183
     O_BUF                          38

   Number of LUTs:                 382
   Number of REGs:                  84
   Number of CARRY ADDERs:          76
   Number of CARRY CHAINs:           2 (2x38)

4.346. Executing SPLITNETS pass (splitting up multi-bit signals).

4.347. Executing HIERARCHY pass (managing design hierarchy).

4.347.1. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i

4.347.2. Analyzing design hierarchy..
Top module:  \input_to_adder_and_mul_A_input_wrt_feedback_i
Removed 0 unused modules.

Dumping port properties into 'port_info.json' file.

5. Executing Verilog backend.
Dumping module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.

6. Executing BLIF backend.

7. Executing FLATTEN pass (flatten design).
Deleting now unused module interface_input_to_adder_and_mul_A_input_wrt_feedback_i.
<suppressed ~1 debug messages>

8. Executing Verilog backend.
Dumping module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.

9. Executing BLIF backend.

10. Executing Verilog backend.
Dumping module `\input_to_adder_and_mul_A_input_wrt_feedback_i'.

11. Executing BLIF backend.

12. Executing Verilog backend.
Dumping module `\fabric_input_to_adder_and_mul_A_input_wrt_feedback_i'.

13. Executing BLIF backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: a924d7d42c, CPU: user 5.31s system 0.12s, MEM: 48.96 MB peak
Yosys 0.18+10 (git sha1 89ed6d12d, gcc 11.2.1 -fPIC -Os)
Time spent: 98% 6x abc (341 sec), 0% 61x opt_expr (1 sec), ...
