/*******************************************************************************
Copyright (c) 2022 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.

Portions of Raptor Design Suite are utilized under the following third-party copyright notices:

Parallax Static Timing Analyzer Copyright (c) 2021, Parallax Software, Inc. All rights reserved.
*********************************************************************************/

Version  : 2023.11
Build    : 0.8.57
Hash     : 2e5fef6
Date     : Nov 14 2023
Type     : Engineering
Log Time   : Tue Nov 14 12:11:32 2023 GMT
/*******************************************************************************
Copyright (c) 2022 Rapid Silicon
This source code contains proprietary information belonging to Rapid Silicon
(the "licensor") released under license and non-disclosure agreement to the
recipient (the "licensee").

The information shared and protected by the license and non-disclosure agreement
includes but is not limited to the following:
* operational algorithms of the product
* logos, graphics, source code, and visual presentation of the product
* confidential operational information of the licensor

The recipient of this source code is NOT permitted to publicly disclose,
re-use, archive beyond the period of the license agreement, transfer to a
sub-licensee, or re-implement any portion of the content covered by the license
and non-disclosure agreement without the prior written consent of the licensor.

Portions of Raptor Design Suite are utilized under the following third-party copyright notices:

Parallax Static Timing Analyzer Copyright (c) 2021, Parallax Software, Inc. All rights reserved.
*********************************************************************************/

Version  : 2023.11
Build    : 0.8.57
Hash     : 2e5fef6
Date     : Nov 14 2023
Type     : Engineering
Log Time   : Tue Nov 14 12:11:32 2023 GMT

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 4e5aedd8e, gcc 11.2.1 -fPIC -Os)


-- Executing script file `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/IP_Catalog_Designs/axi_cdma_default/axi_cdma_wrapper/run_1/synth_1_1/analysis/axi_cdma_wrapper_analyzer.cmd' --

1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/11_14_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v
Parsing SystemVerilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/11_14_2023_09_15_01/share/raptor/sim_models/rapidsilicon/genesis3/cell_sim_blackbox.v' to AST representation.
Generating RTLIL representation for module `\BOOT_CLOCK'.
Generating RTLIL representation for module `\CARRY_CHAIN'.
Generating RTLIL representation for module `\CLK_BUF'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DSP19X2'.
Generating RTLIL representation for module `\DSP38'.
Generating RTLIL representation for module `\FIFO18KX2'.
Generating RTLIL representation for module `\FIFO36K'.
Generating RTLIL representation for module `\I_BUF'.
Generating RTLIL representation for module `\I_BUF_DS'.
Generating RTLIL representation for module `\I_DDR'.
Generating RTLIL representation for module `\I_DELAY'.
Generating RTLIL representation for module `\I_SERDES'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\O_BUF'.
Generating RTLIL representation for module `\O_BUFT'.
Generating RTLIL representation for module `\O_BUFT_DS'.
Generating RTLIL representation for module `\O_BUF_DS'.
Generating RTLIL representation for module `\O_DDR'.
Generating RTLIL representation for module `\O_DELAY'.
Generating RTLIL representation for module `\O_SERDES'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AHB_S'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M0'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_AXI_M1'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_DMA'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_IRQ'.
Generating RTLIL representation for module `\SOC_FPGA_INTF_JTAG'.
Generating RTLIL representation for module `\TDP_RAM18KX2'.
Generating RTLIL representation for module `\TDP_RAM36K'.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../.././axi_cdma_wrapper/axi_cdma_wrapper.IPs/rapidsilicon/ip/axi_cdma/v1_0/axi_cdma_wrapper/src/axi_cdma.v
Parsing Verilog input from `../../../.././axi_cdma_wrapper/axi_cdma_wrapper.IPs/rapidsilicon/ip/axi_cdma/v1_0/axi_cdma_wrapper/src/axi_cdma.v' to AST representation.
Generating RTLIL representation for module `\axi_cdma'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/IP_Catalog_Designs/axi_cdma_default/./axi_cdma_wrapper/axi_cdma_wrapper.IPs/rapidsilicon/ip/axi_cdma/v1_0/axi_cdma_wrapper/src/axi_cdma_wrapper.v
Parsing Verilog input from `/nfs_scratch/scratch/CompilerValidation/abdul_hameed/Compiler_Validation/RTL_testcases/IP_Catalog_Designs/axi_cdma_default/./axi_cdma_wrapper/axi_cdma_wrapper.IPs/rapidsilicon/ip/axi_cdma/v1_0/axi_cdma_wrapper/src/axi_cdma_wrapper.v' to AST representation.
Generating RTLIL representation for module `\axi_cdma_wrapper'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top axi_cdma_wrapper' --

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \axi_cdma_wrapper
Used module:     \axi_cdma
Parameter \IP_TYPE = 40'0100001101000100010011010100000100110001
Parameter \IP_VERSION = 1
Parameter \IP_ID = 48976608
Parameter \AXI_DATA_WIDTH = 32
Parameter \AXI_ADDR_WIDTH = 16
Parameter \AXI_ID_WIDTH = 8
Parameter \AXI_MAX_BURST_LEN = 16
Parameter \LEN_WIDTH = 20
Parameter \TAG_WIDTH = 8
Parameter \ENABLE_UNALIGNED = 1'0

4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\axi_cdma'.
Parameter \IP_TYPE = 40'0100001101000100010011010100000100110001
Parameter \IP_VERSION = 1
Parameter \IP_ID = 48976608
Parameter \AXI_DATA_WIDTH = 32
Parameter \AXI_ADDR_WIDTH = 16
Parameter \AXI_ID_WIDTH = 8
Parameter \AXI_MAX_BURST_LEN = 16
Parameter \LEN_WIDTH = 20
Parameter \TAG_WIDTH = 8
Parameter \ENABLE_UNALIGNED = 1'0
Generating RTLIL representation for module `$paramod$99ef7d43717e0b44cf92f02eb6485cf2ac541106\axi_cdma'.

4.3. Analyzing design hierarchy..
Top module:  \axi_cdma_wrapper
Used module:     $paramod$99ef7d43717e0b44cf92f02eb6485cf2ac541106\axi_cdma

4.4. Analyzing design hierarchy..
Top module:  \axi_cdma_wrapper
Used module:     $paramod$99ef7d43717e0b44cf92f02eb6485cf2ac541106\axi_cdma
Removing unused module `\axi_cdma'.
Removed 1 unused modules.

Dumping file hier_info.json ...
 Process module "$paramod$99ef7d43717e0b44cf92f02eb6485cf2ac541106\\axi_cdma"
Dumping file port_info.json ...

End of script. Logfile hash: 6a0416c50d, CPU: user 0.11s system 0.02s, MEM: 14.48 MB peak
Yosys 0.18+10 (git sha1 4e5aedd8e, gcc 11.2.1 -fPIC -Os)
Time spent: 62% 6x read_verilog (0 sec), 33% 1x hierarchy (0 sec), ...
