//Verilog generated by VPR  from post-place-and-route implementation
module and2 (
    input \a ,
    input \b ,
    input \clk ,
    input \reset ,
    output \c 
);

    //Wires
    wire \a_output_0_0 ;
    wire \b_output_0_0 ;
    wire \clk_output_0_0 ;
    wire \reset_output_0_0 ;
    wire \dffr_c_output_0_0 ;
    wire \lut__3__output_0_0 ;
    wire \lut__3__input_0_4 ;
    wire \lut__3__input_0_0 ;
    wire \dffr_c_clock_0_0 ;
    wire \dffr_c_input_1_0 ;
    wire \c_input_0_0 ;
    wire \dffr_c_input_0_0 ;

    //IO assignments
    assign \c  = \c_input_0_0 ;
    assign \a_output_0_0  = \a ;
    assign \b_output_0_0  = \b ;
    assign \clk_output_0_0  = \clk ;
    assign \reset_output_0_0  = \reset ;

    //Interconnect
    fpga_interconnect \routing_segment_a_output_0_0_to_lut__3__input_0_4  (
        .datain(\a_output_0_0 ),
        .dataout(\lut__3__input_0_4 )
    );

    fpga_interconnect \routing_segment_b_output_0_0_to_lut__3__input_0_0  (
        .datain(\b_output_0_0 ),
        .dataout(\lut__3__input_0_0 )
    );

    fpga_interconnect \routing_segment_clk_output_0_0_to_dffr_c_clock_0_0  (
        .datain(\clk_output_0_0 ),
        .dataout(\dffr_c_clock_0_0 )
    );

    fpga_interconnect \routing_segment_reset_output_0_0_to_dffr_c_input_1_0  (
        .datain(\reset_output_0_0 ),
        .dataout(\dffr_c_input_1_0 )
    );

    fpga_interconnect \routing_segment_dffr_c_output_0_0_to_c_input_0_0  (
        .datain(\dffr_c_output_0_0 ),
        .dataout(\c_input_0_0 )
    );

    fpga_interconnect \routing_segment_lut__3__output_0_0_to_dffr_c_input_0_0  (
        .datain(\lut__3__output_0_0 ),
        .dataout(\dffr_c_input_0_0 )
    );


    //Cell instances
    LUT_K #(
        .K(5),
        .LUT_MASK(32'b00000000000000100000000000000000)
    ) \lut__3_  (
        .in({
            \lut__3__input_0_4 ,
            1'bX,
            1'bX,
            1'bX,
            \lut__3__input_0_0 
         }),
        .out(\lut__3__output_0_0 )
    );

    dffr #(
    ) \dffr_c  (
        .C(\dffr_c_clock_0_0 ),
        .D(\dffr_c_input_0_0 ),
        .R(\dffr_c_input_1_0 ),
        .Q(\dffr_c_output_0_0 )
    );


endmodule
