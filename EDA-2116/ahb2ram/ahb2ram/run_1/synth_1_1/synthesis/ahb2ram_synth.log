
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.18+10 (git sha1 611c05348, gcc 11.2.1 -fPIC -Os)


-- Executing script file `ahb2ram.ys' --

1. Executing Verilog with UHDM frontend.
Warning: /nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:215: Post-incrementation operations are handled as pre-incrementation.
Warning: Removing unelaborated module: \sram1p from the design.
Warning: Removing unelaborated module: \latchr from the design.
Warning: Removing unelaborated module: \latchn from the design.
Warning: Removing unelaborated module: \LATCHNS from the design.
Warning: Removing unelaborated module: \LUT1 from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTACC_REGOUT from the design.
Warning: Removing unelaborated module: \LATCHN from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTADD_REGIN_REGOUT from the design.
Warning: Removing unelaborated module: \LATCH from the design.
Warning: Removing unelaborated module: \LATCHR from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTACC from the design.
Warning: Removing unelaborated module: \RS_DSP_MULT_REGIN_REGOUT from the design.
Warning: Removing unelaborated module: \LATCHS from the design.
Warning: Removing unelaborated module: \DFFNRE from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_IRQ from the design.
Warning: Removing unelaborated module: \FIFO36K from the design.
Warning: Removing unelaborated module: \LUT3 from the design.
Warning: Removing unelaborated module: \I_SERDES from the design.
Warning: Removing unelaborated module: \LUT6 from the design.
Warning: Removing unelaborated module: \I_BUF_DS from the design.
Warning: Removing unelaborated module: \DSP38 from the design.
Warning: Removing unelaborated module: \LATCHNR from the design.
Warning: Removing unelaborated module: \CLK_BUF from the design.
Warning: Removing unelaborated module: \IO_BUF from the design.
Warning: Removing unelaborated module: \FIFO18K from the design.
Warning: Removing unelaborated module: \LUT2 from the design.
Warning: Removing unelaborated module: \soc_fpga_intf from the design.
Warning: Removing unelaborated module: \CARRY_CHAIN from the design.
Warning: Removing unelaborated module: \$lut from the design.
Warning: Removing unelaborated module: \O_BUFT from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_JTAG from the design.
Warning: Removing unelaborated module: \O_BUF from the design.
Warning: Removing unelaborated module: \O_SERDES from the design.
Warning: Removing unelaborated module: \LUT5 from the design.
Warning: Removing unelaborated module: \DFFRE from the design.
Warning: Removing unelaborated module: \O_DDR from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTACC_REGIN from the design.
Warning: Removing unelaborated module: \I_DDR from the design.
Warning: Removing unelaborated module: \RS_DSP from the design.
Warning: Removing unelaborated module: \I_BUF from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTACC_REGIN_REGOUT from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_GPIO from the design.
Warning: Removing unelaborated module: \RS_DSP_MULT from the design.
Warning: Removing unelaborated module: \BRAM2x18_SDP from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTADD from the design.
Warning: Removing unelaborated module: \BRAM2x18_TDP from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTADD_REGIN from the design.
Warning: Removing unelaborated module: \LUT4 from the design.
Warning: Removing unelaborated module: \RS_DSP_MULT_REGIN from the design.
Warning: Removing unelaborated module: \IO_BUF_DS from the design.
Warning: Removing unelaborated module: \RS_DSP_MULT_REGOUT from the design.
Warning: Removing unelaborated module: \latchnr from the design.
Warning: Removing unelaborated module: \RS_TDP36K from the design.
Warning: Removing unelaborated module: \RS_DSP_MULTADD_REGOUT from the design.
Warning: Removing unelaborated module: \_$_mem_v2_asymmetric from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AHB_S from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M0 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M0_M1 from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_DMA from the design.
Warning: Removing unelaborated module: \O_BUFT_DS from the design.
Warning: Removing unelaborated module: \SOC_FPGA_INTF_AXI_M1 from the design.
Warning: Removing unelaborated module: \latch from the design.
Generating RTLIL representation for module `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p'.
Generating RTLIL representation for module `\ahb2ram'.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \ahb2ram
Used module:     $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p

2.2. Analyzing design hierarchy..
Top module:  \ahb2ram
Used module:     $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p
Removed 0 unused modules.
Warning: Resizing cell port ahb2ram.U_mem.addr from 13 bits to 32 bits.

3. Executing synth_rs pass: v0.4.192

3.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/common/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\inv'.
Generating RTLIL representation for module `\buff'.
Generating RTLIL representation for module `\logic_0'.
Generating RTLIL representation for module `\logic_1'.
Generating RTLIL representation for module `\gclkbuff'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\adder_carry'.
Successfully finished Verilog frontend.

3.3. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/llatches_sim.v' to AST representation.
Generating RTLIL representation for module `\LATCH'.
Generating RTLIL representation for module `\LATCHN'.
Generating RTLIL representation for module `\LATCHR'.
Generating RTLIL representation for module `\LATCHS'.
Generating RTLIL representation for module `\LATCHNR'.
Generating RTLIL representation for module `\LATCHNS'.
Generating RTLIL representation for module `\LATCHSRE'.
Generating RTLIL representation for module `\LATCHNSRE'.
Successfully finished Verilog frontend.

3.4. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_sim.v' to AST representation.
Generating RTLIL representation for module `\RS_DSP'.
Generating RTLIL representation for module `\RS_DSP_MULT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULT_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTADD_REGIN_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGOUT'.
Generating RTLIL representation for module `\RS_DSP_MULTACC_REGIN_REGOUT'.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Generating RTLIL representation for module `\dsp_t1_sim_cfg_ports'.
Successfully finished Verilog frontend.

3.5. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/LUT/LUT.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Successfully finished Verilog frontend.

3.6. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_sim.v' to AST representation.
Generating RTLIL representation for module `\TDP_BRAM18'.
Generating RTLIL representation for module `\RS_TDP36K'.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Generating RTLIL representation for module `\_$_mem_v2_asymmetric'.
Successfully finished Verilog frontend.

3.7. Executing HIERARCHY pass (managing design hierarchy).

3.7.1. Analyzing design hierarchy..
Top module:  \ahb2ram
Used module:     $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p

3.7.2. Analyzing design hierarchy..
Top module:  \ahb2ram
Used module:     $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p
Removed 0 unused modules.

3.8. Executing PROC pass (convert processes to netlists).

3.8.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.8.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 11 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96 in module ahb2ram.
Marked 1 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74 in module ahb2ram.
Marked 1 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:248$68 in module ahb2ram.
Marked 2 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54 in module ahb2ram.
Marked 1 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:237$53 in module ahb2ram.
Marked 1 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:230$51 in module ahb2ram.
Marked 2 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9 in module $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.
Marked 1 switch rules as full_case in process $proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2 in module $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.
Removed a total of 0 dead cases.

3.8.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 49 assignments to connections.

3.8.4. Executing PROC_INIT pass (extract init attributes).

3.8.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \HRESETn in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:230$51'.
Found async reset \rst_n in `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9'.

3.8.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~20 debug messages>

3.8.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
     1/38: $2\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.$result[31:0]$226
     2/38: $2\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.$result[31:0]$213
     3/38: $3\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.mask[31:0]$204
     4/38: $2\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.mask[31:0]$203
     5/38: $2\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.$result[31:0]$190
     6/38: $3\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.mask[31:0]$181
     7/38: $2\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.mask[31:0]$180
     8/38: $2\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.$result[31:0]$167
     9/38: $3\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.mask[31:0]$158
    10/38: $2\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.mask[31:0]$157
    11/38: $1\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$21.$result[31:0]$129
    12/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.$result[31:0]$130
    13/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.$result[31:0]$135
    14/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.hsize[2:0]$137
    15/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.cur_adr[31:0]$136
    16/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.mask[31:0]$134
    17/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.hburst[2:0]$133
    18/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.hsize[2:0]$132
    19/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.cur_adr[31:0]$131
    20/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.hsize[2:0]$156
    21/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.cur_adr[31:0]$155
    22/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.$result[31:0]$154
    23/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.hsize[2:0]$153
    24/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.cur_adr[31:0]$152
    25/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.$result[31:0]$151
    26/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.mask[31:0]$150
    27/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.hburst[2:0]$149
    28/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.hsize[2:0]$148
    29/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.cur_adr[31:0]$147
    30/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.$result[31:0]$146
    31/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.hsize[2:0]$145
    32/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.cur_adr[31:0]$144
    33/38: $1\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.$result[31:0]$143
    34/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.mask[31:0]$142
    35/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.hburst[2:0]$141
    36/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.hsize[2:0]$140
    37/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.cur_adr[31:0]$139
    38/38: $1\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.$result[31:0]$138
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:346$95'.
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:345$94'.
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:310$90'.
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
     1/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$result[31:0]$80 [31:24]
     2/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$result[31:0]$80 [23:16]
     3/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$result[31:0]$80 [15:8]
     4/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$result[31:0]$80 [7:0]
     5/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$fordecl_block0.n[31:0]$84
     6/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.be[3:0]$83
     7/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.new_val[31:0]$82
     8/9: $1\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.old_val[31:0]$81
     9/9: $0\dout_local[31:0]
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:295$71'.
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:257$70'.
     1/1: $0\waddr[12:0]
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:248$68'.
     1/1: $0\raddr_r[12:0]
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
     1/7: $2\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.full_be[127:0]$65
     2/7: $1\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.$result[3:0]$60
     3/7: $1\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.haddr_masked[6:0]$64
     4/7: $1\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.full_be[127:0]$63
     5/7: $1\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.haddr[31:0]$62
     6/7: $1\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.hsize[2:0]$61
     7/7: $0\be[3:0]
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:237$53'.
     1/1: $0\we[0:0]
Creating decoders for process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:230$51'.
     1/1: $0\was_ahb_noseq[0:0]
Creating decoders for process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9'.
     1/1: $0\dout[31:0]
Creating decoders for process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
     1/3: $1$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$8
     2/3: $1$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_DATA[31:0]$7
     3/3: $1$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_ADDR[31:0]$6

3.8.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ahb2ram.\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$17.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$21.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$21.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$21.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:246$21.hburst' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.hburst' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:197$22.mask' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$23.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.hburst' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:198$24.mask' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$25.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.hburst' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_wrap$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:199$26.mask' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:185$27.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.$result' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.cur_adr' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\gen_nxt_adr_incr$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:200$28.hsize' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
No latch inferred for signal `\ahb2ram.\HRDATA' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:346$95'.
No latch inferred for signal `\ahb2ram.\HREADYOUT' from process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:345$94'.

3.8.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ahb2ram.\contention' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:310$90'.
  created $dff cell `$procdff$546' with positive edge clock.
Creating register for signal `\ahb2ram.\dout_local' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$547' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$result' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$548' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.old_val' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$549' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.new_val' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$550' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.be' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$551' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_val$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:304$20.$fordecl_block0.n' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
  created $dff cell `$procdff$552' with positive edge clock.
Creating register for signal `\ahb2ram.\use_local_dout' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:295$71'.
  created $dff cell `$procdff$553' with positive edge clock.
Creating register for signal `\ahb2ram.\waddr' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:257$70'.
  created $dff cell `$procdff$554' with positive edge clock.
Creating register for signal `\ahb2ram.\raddr_r' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:248$68'.
  created $dff cell `$procdff$555' with positive edge clock.
Creating register for signal `\ahb2ram.\be' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$556' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.$result' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$557' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.hsize' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$558' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.haddr' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$559' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.full_be' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$560' with positive edge clock.
Creating register for signal `\ahb2ram.\gen_be$func$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:243$18.haddr_masked' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
  created $dff cell `$procdff$561' with positive edge clock.
Creating register for signal `\ahb2ram.\we' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:237$53'.
  created $dff cell `$procdff$562' with positive edge clock.
Creating register for signal `\ahb2ram.\was_ahb_noseq' using process `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:230$51'.
  created $adff cell `$procdff$563' with positive edge clock and negative level reset.
Creating register for signal `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.\dout' using process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9'.
  created $adff cell `$procdff$564' with positive edge clock and negative level reset.
Creating register for signal `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_ADDR' using process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
  created $dff cell `$procdff$565' with positive edge clock.
Creating register for signal `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_DATA' using process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
  created $dff cell `$procdff$566' with positive edge clock.
Creating register for signal `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN' using process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
  created $dff cell `$procdff$567' with positive edge clock.

3.8.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.8.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 11 empty switches in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:0$96'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:346$95'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:345$94'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:310$90'.
Found and cleaned up 1 empty switch in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:303$74'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:295$71'.
Found and cleaned up 1 empty switch in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:257$70'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:257$70'.
Found and cleaned up 2 empty switches in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:248$68'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:248$68'.
Found and cleaned up 2 empty switches in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:242$54'.
Found and cleaned up 1 empty switch in `\ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:237$53'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:237$53'.
Removing empty process `ahb2ram.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:230$51'.
Found and cleaned up 1 empty switch in `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9'.
Removing empty process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:35$9'.
Found and cleaned up 1 empty switch in `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
Removing empty process `$paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.$proc$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:32$2'.
Cleaned up 20 empty switches.

3.8.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~29 debug messages>
Optimizing module $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.

3.9. Executing DEMUXMAP pass.

3.10. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod$85bd74e7bbf5fb3816007355d1c4c5a459a84467\sram1p.
<suppressed ~1 debug messages>

3.11. Executing DEMUXMAP pass.

3.12. Executing TRIBUF pass.

3.13. Executing TRIBUF pass.

3.14. Executing DEMINOUT pass (demote inout ports to input or output).

3.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~3 debug messages>

3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 258 unused cells and 438 unused wires.
<suppressed ~275 debug messages>

3.17. Executing CHECK pass (checking for obvious problems).
Checking module ahb2ram...
Found and reported 0 problems.

3.18. Printing statistics.

=== ahb2ram ===

   Number of wires:                 73
   Number of wire bits:            933
   Number of public wires:          54
   Number of public wire bits:     723
   Number of memories:               1
   Number of memory bits:          128
   Number of processes:              0
   Number of cells:                 31
     $adff                           1
     $and                            8
     $dff                            3
     $logic_or                       1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                           10
     $ne                             2
     $not                            2
     $reduce_bool                    2

3.19. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.20. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.21. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.22. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
    Consolidated identical input bits for $mux cell $flatten\U_mem.$procmux$538:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5
      New ports: A=1'0, B=1'1, Y=$flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0]
      New connections: $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [31:1] = { $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] $flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_EN[31:0]$5 [0] }
  Optimizing cells in module \ahb2ram.
Performed a total of 1 changes.

3.23. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.24. Executing OPT_SHARE pass.

3.25. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

3.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.27. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

3.29. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.30. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.31. Executing OPT_SHARE pass.

3.32. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

3.33. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.34. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 2

3.35. Executing FSM pass (extract and optimize FSM).

3.35.1. Executing FSM_DETECT pass (finding FSMs in design).

3.35.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.35.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.35.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.35.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.35.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.35.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.35.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.36. Executing WREDUCE pass (reducing word size of cells).
Removed top 30 address bits (of 32) from memory init port ahb2ram.$flatten\U_mem.$auto$proc_memwr.cc:45:proc_memwr$568 (U_mem.memory).
Removed top 30 address bits (of 32) from memory init port ahb2ram.$flatten\U_mem.$memrd$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:37$11 (U_mem.memory).
Removed top 1 bits (of 2) from port B of cell ahb2ram.$ne$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:227$36 ($ne).
Removed top 30 bits (of 32) from mux cell ahb2ram.$flatten\U_mem.$procmux$544 ($mux).
Removed top 11 bits (of 13) from mux cell ahb2ram.$ternary$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/ahb2ram.sv:268$50 ($mux).
Removed top 30 bits (of 32) from wire ahb2ram.$flatten\U_mem.$0$memwr$\memory$/nfs_project/gemini/DV/usmanqadir/jira_repo/Jira_Testcase/EDA-2116/ahb2ram/sram1p.v:33$1_ADDR[31:0]$3.
Removed top 11 bits (of 13) from wire ahb2ram.mem_addr.

3.37. Executing PEEPOPT pass (run peephole optimizers).

3.38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.41. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

3.42. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.43. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.44. Executing OPT_SHARE pass.

3.45. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$562 ($dff) from module ahb2ram (D = \ahb_write, Q = \we, rval = 1'0).
Adding SRST signal on $procdff$555 ($dff) from module ahb2ram (D = \raddr, Q = \raddr_r, rval = 13'0000000000000).
Adding EN signal on $auto$ff.cc:294:slice$572 ($sdff) from module ahb2ram (D = \HADDR [14:4], Q = \raddr_r [12:2]).
Adding EN signal on $procdff$554 ($dff) from module ahb2ram (D = \HADDR [14:2], Q = \waddr).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.46. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 3 unused cells and 3 unused wires.
<suppressed ~4 debug messages>

3.47. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.48. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

3.49. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.50. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.51. Executing OPT_SHARE pass.

3.52. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.54. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 2

3.55. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.56. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.57. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

3.58. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.59. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.60. Executing OPT_SHARE pass.

3.61. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.62. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.63. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.65. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

3.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.69. Executing OPT_SHARE pass.

3.70. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=0, #remove=0, time=0.00 sec.]

3.71. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=5, #solve=35, #remove=0, time=0.01 sec.]

3.72. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.73. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.74. Executing WREDUCE pass (reducing word size of cells).
Removed top 11 bits (of 13) from mux cell ahb2ram.$procmux$496 ($mux).
Removed cell ahb2ram.$auto$ff.cc:294:slice$573 ($sdffe).
Removed top 11 bits (of 13) from FF cell ahb2ram.$auto$ff.cc:294:slice$575 ($dffe).
Removed top 30 bits (of 32) from wire ahb2ram.$auto$wreduce.cc:455:run$569.
Removed top 11 bits (of 13) from wire ahb2ram.raddr.
Removed top 11 bits (of 13) from wire ahb2ram.raddr_r.

3.75. Executing PEEPOPT pass (run peephole optimizers).

3.76. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.77. Executing DEMUXMAP pass.

3.78. Printing statistics.

=== ahb2ram ===

   Number of wires:                 67
   Number of wire bits:            828
   Number of public wires:          54
   Number of public wire bits:     690
   Number of memories:               1
   Number of memory bits:          128
   Number of processes:              0
   Number of cells:                 25
     $adff                           1
     $and                            8
     $dffe                           1
     $logic_or                       1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            6
     $ne                             1
     $not                            2
     $reduce_bool                    1
     $sdff                           2

3.79. Executing WREDUCE pass (reducing word size of cells).

3.80. Executing RS_DSP_MACC pass.

3.81. Executing TECHMAP pass (map to technology primitives).

3.81.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.81.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.82. Printing statistics.

=== ahb2ram ===

   Number of wires:                 67
   Number of wire bits:            828
   Number of public wires:          54
   Number of public wire bits:     690
   Number of memories:               1
   Number of memory bits:          128
   Number of processes:              0
   Number of cells:                 25
     $adff                           1
     $and                            8
     $dffe                           1
     $logic_or                       1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            6
     $ne                             1
     $not                            2
     $reduce_bool                    1
     $sdff                           2

3.83. Executing TECHMAP pass (map to technology primitives).

3.83.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__RS_MUL20X18'.
Successfully finished Verilog frontend.

3.83.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

3.84. Executing TECHMAP pass (map to technology primitives).

3.84.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/dsp_final_map.v' to AST representation.
Generating RTLIL representation for module `\dsp_t1_20x18x64_cfg_ports'.
Successfully finished Verilog frontend.

3.84.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

3.85. Executing rs_pack_dsp_regs pass.

3.86. Executing RS_DSP_IO_REGS pass.

3.87. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ahb2ram:
  created 0 $alu and 0 $macc cells.

3.88. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.89. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.90. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

3.91. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.92. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.93. Executing OPT_SHARE pass.

3.94. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

3.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.96. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.97. Printing statistics.

=== ahb2ram ===

   Number of wires:                 67
   Number of wire bits:            828
   Number of public wires:          54
   Number of public wire bits:     690
   Number of memories:               1
   Number of memory bits:          128
   Number of processes:              0
   Number of cells:                 25
     $adff                           1
     $and                            8
     $dffe                           1
     $logic_or                       1
     $memrd_v2                       1
     $memwr_v2                       1
     $mux                            6
     $ne                             1
     $not                            2
     $reduce_bool                    1
     $sdff                           2

3.98. Executing MEMORY pass.

3.98.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.98.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.98.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing ahb2ram.U_mem.memory write port 0.

3.98.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.98.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\U_mem.memory'[0] in module `\ahb2ram': FF found, but with a mux select that doesn't seem to correspond to transparency logic.
Checking read port address `\U_mem.memory'[0] in module `\ahb2ram': no address FF found.

3.98.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.98.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.98.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.98.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.98.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.99. Printing statistics.

=== ahb2ram ===

   Number of wires:                 67
   Number of wire bits:            828
   Number of public wires:          54
   Number of public wire bits:     690
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 24
     $adff                           1
     $and                            8
     $dffe                           1
     $logic_or                       1
     $mem_v2                         1
     $mux                            6
     $ne                             1
     $not                            2
     $reduce_bool                    1
     $sdff                           2

3.100. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~6 debug messages>

3.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.102. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.103. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory ahb2ram.U_mem.memory
<suppressed ~6 debug messages>

3.104. Executing Rs_BRAM_Split pass.

3.105. Executing TECHMAP pass (map to technology primitives).

3.105.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_map_new.v' to AST representation.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_TDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM18_SDP'.
Generating RTLIL representation for module `\$__RS_FACTOR_BRAM36_SDP'.
Successfully finished Verilog frontend.

3.105.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

3.106. Executing TECHMAP pass (map to technology primitives).

3.106.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/brams_final_map_new.v' to AST representation.
Generating RTLIL representation for module `\BRAM2x18_TDP'.
Generating RTLIL representation for module `\BRAM2x18_SDP'.
Successfully finished Verilog frontend.

3.106.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.107. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

3.108. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.109. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.110. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.111. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.112. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.113. Executing OPT_SHARE pass.

3.114. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=4, #solve=0, #remove=0, time=0.00 sec.]

3.115. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.116. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.117. Executing PMUXTREE pass.

3.118. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~8 debug messages>

3.119. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \U_mem.memory in module \ahb2ram:
  created 4 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 3 $mux cells.
  write interface: 4 write mux blocks.

3.120. Executing TECHMAP pass (map to technology primitives).

3.120.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.120.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_rs_alu'.
Successfully finished Verilog frontend.

3.120.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $adff.
No more expansions possible.
<suppressed ~119 debug messages>

3.121. Printing statistics.

=== ahb2ram ===

   Number of wires:                110
   Number of wire bits:           1431
   Number of public wires:          58
   Number of public wire bits:     818
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                494
     $_AND_                         16
     $_DFFE_PP_                      2
     $_DFF_PN0_                     32
     $_DFF_P_                      131
     $_MUX_                        298
     $_NOT_                          6
     $_OR_                           3
     $_XOR_                          6

3.122. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~9 debug messages>

3.123. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

3.124. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.125. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.126. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.127. Executing OPT_SHARE pass.

3.128. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.129. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

3.130. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.131. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~78 debug messages>

3.132. Executing TECHMAP pass (map to technology primitives).

3.132.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.132.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

3.133. Printing statistics.

=== ahb2ram ===

   Number of wires:                 90
   Number of wire bits:           1130
   Number of public wires:          58
   Number of public wire bits:     818
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                452
     $_AND_                         51
     $_DFFE_PP_                      2
     $_DFF_PN0_                     32
     $_DFF_P_                      131
     $_MUX_                        228
     $_NOT_                          5
     $_OR_                           3

3.134. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.135. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.136. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.137. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.138. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.139. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.140. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.141. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.142. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.143. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.144. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.145. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.146. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.147. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.148. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.149. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.150. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.151. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.152. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.153. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.154. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.155. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.156. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=160, #remove=0, time=0.04 sec.]

3.157. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.158. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.159. Printing statistics.

=== ahb2ram ===

   Number of wires:                 87
   Number of wire bits:           1096
   Number of public wires:          58
   Number of public wire bits:     818
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                452
     $_AND_                         51
     $_DFFE_PP_                      2
     $_DFF_PN0_                     32
     $_DFF_P_                      131
     $_MUX_                        228
     $_NOT_                          5
     $_OR_                           3

   Number of Generic REGs:          165

ABC-DFF iteration : 1

3.160. Executing ABC pass (technology mapping using ABC).

3.160.1. Summary of detected clock domains:
  2 cells in clk=\HCLK, en=\HREADY, arst={ }, srst={ }
  353 cells in clk=\HCLK, en={ }, arst={ }, srst={ }
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }

  #logic partitions = 3

3.160.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 353 gates and 395 wires to a netlist network with 42 inputs and 198 outputs.

3.160.2.1. Executing ABC.

3.160.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.160.3.1. Executing ABC.

3.160.4. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \HREADY
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.160.4.1. Executing ABC.

3.161. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.162. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.163. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.164. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.165. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.166. Executing OPT_SHARE pass.

3.167. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1343 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[10], Q = $abc$1332$lo010).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1346 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[13], Q = $abc$1332$lo013).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1398 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[1], Q = $abc$1332$lo065).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1344 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[11], Q = $abc$1332$lo011).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1340 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[7], Q = $abc$1332$lo007).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1336 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[3], Q = $abc$1332$lo003).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1342 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[9], Q = $abc$1332$lo009).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1334 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[1], Q = $abc$1332$lo001).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1363 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[30], Q = $abc$1332$lo030).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1359 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[26], Q = $abc$1332$lo026).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1345 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[12], Q = $abc$1332$lo012).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1341 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[8], Q = $abc$1332$lo008).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1333 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[0], Q = $abc$1332$lo000).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1335 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[2], Q = $abc$1332$lo002).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1361 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[28], Q = $abc$1332$lo028).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1353 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[20], Q = $abc$1332$lo020).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1364 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[31], Q = $abc$1332$lo031).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1362 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[29], Q = $abc$1332$lo029).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1360 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[27], Q = $abc$1332$lo027).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1358 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[25], Q = $abc$1332$lo025).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1356 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[23], Q = $abc$1332$lo023).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1354 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[21], Q = $abc$1332$lo021).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1352 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[19], Q = $abc$1332$lo019).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1350 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[17], Q = $abc$1332$lo017).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1348 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[15], Q = $abc$1332$lo015).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1338 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[5], Q = $abc$1332$lo005).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1339 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[6], Q = $abc$1332$lo006).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1365 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[21], Q = $abc$1332$lo032).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1366 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[22], Q = $abc$1332$lo033).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1367 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[23], Q = $abc$1332$lo034).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1368 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[24], Q = $abc$1332$lo035).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1369 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[25], Q = $abc$1332$lo036).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1370 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[26], Q = $abc$1332$lo037).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1371 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[27], Q = $abc$1332$lo038).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1372 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[28], Q = $abc$1332$lo039).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1373 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[29], Q = $abc$1332$lo040).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1374 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[30], Q = $abc$1332$lo041).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1375 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[31], Q = $abc$1332$lo042).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1376 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[0], Q = $abc$1332$lo043).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1377 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[1], Q = $abc$1332$lo044).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1378 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[2], Q = $abc$1332$lo045).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1379 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[3], Q = $abc$1332$lo046).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1380 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[4], Q = $abc$1332$lo047).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1381 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[5], Q = $abc$1332$lo048).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1382 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[6], Q = $abc$1332$lo049).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1383 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[7], Q = $abc$1332$lo050).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1384 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[8], Q = $abc$1332$lo051).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1385 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[9], Q = $abc$1332$lo052).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1386 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[10], Q = $abc$1332$lo053).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1387 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[11], Q = $abc$1332$lo054).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1388 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[12], Q = $abc$1332$lo055).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1389 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[13], Q = $abc$1332$lo056).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1390 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[14], Q = $abc$1332$lo057).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1391 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[15], Q = $abc$1332$lo058).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1392 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[16], Q = $abc$1332$lo059).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1393 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[17], Q = $abc$1332$lo060).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1394 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[18], Q = $abc$1332$lo061).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1395 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[19], Q = $abc$1332$lo062).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1396 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[20], Q = $abc$1332$lo063).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1429 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[0], Q = $abc$1332$lo096).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1428 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[31], Q = $abc$1332$lo095).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1427 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[30], Q = $abc$1332$lo094).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1426 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[29], Q = $abc$1332$lo093).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1425 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[28], Q = $abc$1332$lo092).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1424 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[27], Q = $abc$1332$lo091).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1423 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[26], Q = $abc$1332$lo090).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1422 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[25], Q = $abc$1332$lo089).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1421 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[24], Q = $abc$1332$lo088).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1420 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[23], Q = $abc$1332$lo087).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1419 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[22], Q = $abc$1332$lo086).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1418 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[21], Q = $abc$1332$lo085).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1417 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[20], Q = $abc$1332$lo084).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1416 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[19], Q = $abc$1332$lo083).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1415 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[18], Q = $abc$1332$lo082).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1414 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[17], Q = $abc$1332$lo081).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1413 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[16], Q = $abc$1332$lo080).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1412 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[15], Q = $abc$1332$lo079).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1411 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[14], Q = $abc$1332$lo078).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1410 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[13], Q = $abc$1332$lo077).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1409 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[12], Q = $abc$1332$lo076).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1408 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[11], Q = $abc$1332$lo075).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1407 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[10], Q = $abc$1332$lo074).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1406 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[9], Q = $abc$1332$lo073).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1405 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[8], Q = $abc$1332$lo072).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1404 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[7], Q = $abc$1332$lo071).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1403 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[6], Q = $abc$1332$lo070).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1402 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[5], Q = $abc$1332$lo069).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1401 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[4], Q = $abc$1332$lo068).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1400 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[3], Q = $abc$1332$lo067).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1399 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[2], Q = $abc$1332$lo066).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1397 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[0], Q = $abc$1332$lo064).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1337 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[4], Q = $abc$1332$lo004).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1355 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[22], Q = $abc$1332$lo022).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1357 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[24], Q = $abc$1332$lo024).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1347 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[14], Q = $abc$1332$lo014).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1349 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[16], Q = $abc$1332$lo016).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1351 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[18], Q = $abc$1332$lo018).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1460 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[31], Q = $abc$1332$lo127).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1459 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[30], Q = $abc$1332$lo126).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1458 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[29], Q = $abc$1332$lo125).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1457 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[28], Q = $abc$1332$lo124).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1456 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[27], Q = $abc$1332$lo123).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1455 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[26], Q = $abc$1332$lo122).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1454 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[25], Q = $abc$1332$lo121).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1453 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[24], Q = $abc$1332$lo120).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1452 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[23], Q = $abc$1332$lo119).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1451 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[22], Q = $abc$1332$lo118).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1450 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[21], Q = $abc$1332$lo117).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1449 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[20], Q = $abc$1332$lo116).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1448 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[19], Q = $abc$1332$lo115).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1447 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[18], Q = $abc$1332$lo114).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1446 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[17], Q = $abc$1332$lo113).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1445 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[16], Q = $abc$1332$lo112).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1444 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[15], Q = $abc$1332$lo111).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1443 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[14], Q = $abc$1332$lo110).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1442 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[13], Q = $abc$1332$lo109).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1441 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[12], Q = $abc$1332$lo108).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1440 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[11], Q = $abc$1332$lo107).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1439 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[10], Q = $abc$1332$lo106).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1438 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[9], Q = $abc$1332$lo105).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1437 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[8], Q = $abc$1332$lo104).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1436 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[7], Q = $abc$1332$lo103).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1435 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[6], Q = $abc$1332$lo102).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1434 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[5], Q = $abc$1332$lo101).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1433 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[4], Q = $abc$1332$lo100).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1432 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[3], Q = $abc$1332$lo099).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1431 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[2], Q = $abc$1332$lo098).
Adding EN signal on $abc$1332$auto$blifparse.cc:362:parse_blif$1430 ($_DFF_P_) from module ahb2ram (D = $abc$1332$HWDATA[1], Q = $abc$1332$lo097).
[#visit=165, #solve=0, #remove=0, time=0.01 sec.]

3.168. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 128 unused cells and 607 unused wires.
<suppressed ~134 debug messages>

3.169. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.170. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.171. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.172. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.173. Executing OPT_SHARE pass.

3.174. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.175. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.176. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 2

ABC-DFF iteration : 2

3.177. Executing ABC pass (technology mapping using ABC).

3.177.1. Summary of detected clock domains:
  65 cells in clk=\HCLK, en=!$abc$1332$new_n809_, arst={ }, srst={ }
  33 cells in clk=\HCLK, en=!$abc$1332$new_n776_, arst={ }, srst={ }
  65 cells in clk=\HCLK, en=!$abc$1332$new_n743_, arst={ }, srst={ }
  33 cells in clk=\HCLK, en=!$abc$1332$new_n710_, arst={ }, srst={ }
  8 cells in clk=\HCLK, en=\HREADY, arst={ }, srst={ }
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }
  13 cells in clk=\HCLK, en={ }, arst={ }, srst={ }

  #logic partitions = 7

3.177.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.177.2.1. Executing ABC.

3.177.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n809_
Extracted 65 gates and 132 wires to a netlist network with 67 inputs and 65 outputs.

3.177.3.1. Executing ABC.

3.177.4. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n743_
Extracted 65 gates and 132 wires to a netlist network with 67 inputs and 65 outputs.

3.177.4.1. Executing ABC.

3.177.5. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n776_
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.177.5.1. Executing ABC.

3.177.6. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n710_
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.177.6.1. Executing ABC.

3.177.7. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.177.7.1. Executing ABC.

3.177.8. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \HREADY
Extracted 8 gates and 13 wires to a netlist network with 5 inputs and 8 outputs.

3.177.8.1. Executing ABC.

3.178. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.179. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.180. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.181. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.182. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.183. Executing OPT_SHARE pass.

3.184. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.185. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 890 unused wires.
<suppressed ~1 debug messages>

3.186. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 3

3.187. Executing ABC pass (technology mapping using ABC).

3.187.1. Summary of detected clock domains:
  11 cells in clk=\HCLK, en=\HREADY, arst={ }, srst={ }
  13 cells in clk=\HCLK, en={ }, arst={ }, srst={ }
  64 cells in clk=\HCLK, en=!$abc$1332$new_n710_, arst={ }, srst={ }
  64 cells in clk=\HCLK, en=!$abc$1332$new_n776_, arst={ }, srst={ }
  32 cells in clk=\HCLK, en=!$abc$1332$new_n743_, arst={ }, srst={ }
  33 cells in clk=\HCLK, en=!$abc$1332$new_n809_, arst={ }, srst={ }
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }

  #logic partitions = 7

3.187.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.187.2.1. Executing ABC.

3.187.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n710_
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 64 outputs.

3.187.3.1. Executing ABC.

3.187.4. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n776_
Extracted 64 gates and 129 wires to a netlist network with 65 inputs and 64 outputs.

3.187.4.1. Executing ABC.

3.187.5. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n809_
Extracted 33 gates and 67 wires to a netlist network with 34 inputs and 33 outputs.

3.187.5.1. Executing ABC.

3.187.6. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n743_
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs.

3.187.6.1. Executing ABC.

3.187.7. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.187.7.1. Executing ABC.

3.187.8. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \HREADY
Extracted 11 gates and 16 wires to a netlist network with 5 inputs and 9 outputs.

3.187.8.1. Executing ABC.

3.188. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.189. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.190. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.191. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.192. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.193. Executing OPT_SHARE pass.

3.194. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.195. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 884 unused wires.
<suppressed ~1 debug messages>

3.196. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

ABC-DFF iteration : 4

3.197. Executing ABC pass (technology mapping using ABC).

3.197.1. Summary of detected clock domains:
  9 cells in clk=\HCLK, en=\HREADY, arst={ }, srst={ }
  13 cells in clk=\HCLK, en={ }, arst={ }, srst={ }
  65 cells in clk=\HCLK, en=!$abc$1332$new_n743_, arst={ }, srst={ }
  65 cells in clk=\HCLK, en=!$abc$1332$new_n809_, arst={ }, srst={ }
  32 cells in clk=\HCLK, en=!$abc$1332$new_n776_, arst={ }, srst={ }
  32 cells in clk=\HCLK, en=!$abc$1332$new_n710_, arst={ }, srst={ }
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }

  #logic partitions = 7

3.197.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.197.2.1. Executing ABC.

3.197.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n743_
Extracted 65 gates and 132 wires to a netlist network with 67 inputs and 65 outputs.

3.197.3.1. Executing ABC.

3.197.4. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n809_
Extracted 65 gates and 132 wires to a netlist network with 67 inputs and 65 outputs.

3.197.4.1. Executing ABC.

3.197.5. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n776_
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs.

3.197.5.1. Executing ABC.

3.197.6. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by !$abc$1332$new_n710_
Extracted 32 gates and 64 wires to a netlist network with 32 inputs and 32 outputs.

3.197.6.1. Executing ABC.

3.197.7. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 13 gates and 20 wires to a netlist network with 7 inputs and 7 outputs.

3.197.7.1. Executing ABC.

3.197.8. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \HREADY
Extracted 9 gates and 14 wires to a netlist network with 5 inputs and 9 outputs.

3.197.8.1. Executing ABC.

3.198. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.199. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.200. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.201. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.202. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.203. Executing OPT_SHARE pass.

3.204. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.205. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 885 unused wires.
<suppressed ~1 debug messages>

3.206. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.207. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
   Number of Generic REGs:          165

ABC-DFF iteration : 1

3.208. Executing ABC pass (technology mapping using ABC).

3.208.1. Summary of detected clock domains:
  2 cells in clk=\HCLK, en=\HREADY, arst={ }, srst={ }
  353 cells in clk=\HCLK, en={ }, arst={ }, srst={ }
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }

  #logic partitions = 3

3.208.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 353 gates and 395 wires to a netlist network with 42 inputs and 198 outputs.

3.208.2.1. Executing ABC.

3.208.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.208.3.1. Executing ABC.

3.208.4. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, enabled by \HREADY
Extracted 2 gates and 4 wires to a netlist network with 2 inputs and 2 outputs.

3.208.4.1. Executing ABC.

3.209. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.210. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.211. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 479 unused wires.
<suppressed ~6 debug messages>

3.212. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.213. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.214. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.215. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4046 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[3] [31]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4045 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[3] [30]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4044 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[3] [29]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4043 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[3] [28]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4042 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[3] [27]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4041 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[3] [26]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4040 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[3] [25]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4039 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[3] [24]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4038 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[3] [23]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4037 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[3] [22]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4036 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[3] [21]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4035 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[3] [20]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4034 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[3] [19]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4033 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[3] [18]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4032 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[3] [17]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4031 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[3] [16]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4030 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[3] [15]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4029 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[3] [14]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4028 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[3] [13]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4027 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[3] [12]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4026 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[3] [11]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4025 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[3] [10]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4024 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[3] [9]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4023 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[3] [8]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4022 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[3] [7]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4021 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[3] [6]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4020 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[3] [5]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4019 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[3] [4]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4018 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[3] [3]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4017 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[3] [2]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4016 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[3] [1]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4015 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[3] [0]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4014 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[2] [31]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4013 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[2] [30]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4012 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[2] [29]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4011 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[2] [28]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4010 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[2] [27]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4009 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[2] [26]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4008 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[2] [25]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4007 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[2] [24]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4006 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[2] [23]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4005 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[2] [22]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4004 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[2] [21]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4003 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[2] [20]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4002 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[2] [19]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4001 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[2] [18]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$4000 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[2] [17]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3999 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[2] [16]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3998 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[2] [15]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3997 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[2] [14]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3996 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[2] [13]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3995 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[2] [12]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3994 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[2] [11]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3993 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[2] [10]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3992 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[2] [9]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3991 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[2] [8]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3990 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[2] [7]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3989 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[2] [6]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3988 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[2] [5]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3987 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[2] [4]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3986 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[2] [3]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3985 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[2] [2]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3984 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[2] [1]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3983 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[2] [0]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3982 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[1] [20]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3981 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[1] [19]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3980 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[1] [18]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3979 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[1] [17]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3978 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[1] [16]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3977 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[1] [15]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3976 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[1] [14]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3975 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[1] [13]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3974 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[1] [12]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3973 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[1] [11]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3972 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[1] [10]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3971 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[1] [9]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3970 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[1] [8]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3969 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[1] [7]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3968 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[1] [6]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3967 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[1] [5]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3966 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[1] [4]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3965 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[1] [3]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3964 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[1] [2]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3963 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[1] [1]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3962 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[1] [0]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3961 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[1] [31]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3960 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[1] [30]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3959 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[1] [29]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3958 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[1] [28]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3957 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[1] [27]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3956 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[1] [26]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3955 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[1] [25]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3954 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[1] [24]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3953 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[1] [23]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3952 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[1] [22]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3951 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[1] [21]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3950 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[0] [31]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3949 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[0] [30]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3948 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[0] [29]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3947 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[0] [28]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3946 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[0] [27]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3945 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[0] [26]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3944 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[0] [25]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3943 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[0] [24]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3942 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[0] [23]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3941 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[0] [22]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3940 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[0] [21]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3939 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[0] [20]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3938 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[0] [19]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3937 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[0] [18]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3936 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[0] [17]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3935 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[0] [16]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3934 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[0] [15]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3933 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[0] [14]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3932 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[0] [13]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3931 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[0] [12]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3930 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[0] [11]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3929 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[0] [10]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3928 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[0] [9]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3927 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[0] [8]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3926 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[0] [7]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3925 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[0] [6]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3924 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[0] [5]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3923 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[0] [4]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3922 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[0] [3]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3921 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[0] [2]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3920 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[0] [1]).
Adding EN signal on $abc$3918$auto$blifparse.cc:362:parse_blif$3919 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[0] [0]).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.216. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.217. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 128 unused cells and 128 unused wires.
<suppressed ~129 debug messages>

3.218. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 2

3.219. Executing ABC pass (technology mapping using ABC).

3.219.1. Summary of detected clock domains:
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }
  347 cells in clk=\HCLK, en={ }, arst={ }, srst={ }

  #logic partitions = 2

3.219.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 347 gates and 386 wires to a netlist network with 39 inputs and 200 outputs.

3.219.2.1. Executing ABC.

3.219.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.219.3.1. Executing ABC.

3.220. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.221. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.222. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 715 unused wires.
<suppressed ~1 debug messages>

3.223. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.224. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.225. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.226. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5048 ($_DFF_P_) from module ahb2ram (D = \HADDR [2], Q = \waddr [0]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5047 ($_DFF_P_) from module ahb2ram (D = \HADDR [3], Q = \waddr [1]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5046 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[0] [0]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5045 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[0] [10]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5044 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[0] [11]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5043 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[0] [12]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5042 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[0] [13]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5041 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[0] [14]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5040 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[0] [15]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5039 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[0] [16]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5038 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[0] [17]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5037 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[0] [18]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5036 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[0] [19]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5035 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[0] [1]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5034 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[0] [20]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5033 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[0] [21]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5032 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[0] [22]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5031 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[0] [23]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5030 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[0] [24]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5029 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[0] [25]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5028 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[0] [26]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5027 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[0] [27]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5026 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[0] [28]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5025 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[0] [29]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5024 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[0] [2]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5023 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[0] [30]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5022 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[0] [31]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5021 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[0] [3]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5020 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[0] [4]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5019 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[0] [5]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5018 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[0] [6]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5017 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[0] [7]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5016 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[0] [8]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5015 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[0] [9]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5014 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[1] [0]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5013 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[1] [10]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5012 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[1] [11]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5011 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[1] [12]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5010 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[1] [13]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5009 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[1] [14]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5008 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[1] [15]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5007 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[1] [16]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5006 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[1] [17]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5005 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[1] [18]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5004 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[1] [19]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5003 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[1] [1]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5002 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[1] [20]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5001 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[1] [21]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$5000 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[1] [22]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4999 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[1] [23]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4998 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[1] [24]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4997 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[1] [25]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4996 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[1] [26]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4995 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[1] [27]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4994 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[1] [28]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4993 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[1] [29]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4992 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[1] [2]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4991 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[1] [30]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4990 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[1] [31]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4989 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[1] [3]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4988 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[1] [4]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4987 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[1] [5]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4986 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[1] [6]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4985 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[1] [7]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4984 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[1] [8]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4983 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[1] [9]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4982 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[2] [0]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4981 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[2] [10]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4980 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[2] [11]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4979 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[2] [12]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4978 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[2] [13]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4977 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[2] [14]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4976 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[2] [15]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4975 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[2] [16]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4974 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[2] [17]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4973 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[2] [18]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4972 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[2] [19]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4971 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[2] [1]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4970 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[2] [20]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4969 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[2] [21]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4968 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[2] [22]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4967 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[2] [23]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4966 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[2] [24]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4965 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[2] [25]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4964 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[2] [26]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4963 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[2] [27]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4962 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[2] [28]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4961 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[2] [29]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4960 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[2] [2]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4959 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[2] [30]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4958 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[2] [31]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4957 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[2] [3]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4956 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[2] [4]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4955 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[2] [5]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4954 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[2] [6]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4953 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[2] [7]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4952 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[2] [8]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4951 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[2] [9]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4950 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[3] [0]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4949 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[3] [10]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4948 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[3] [11]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4947 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[3] [12]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4946 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[3] [13]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4945 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[3] [14]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4944 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[3] [15]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4943 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[3] [16]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4942 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[3] [17]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4941 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[3] [18]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4940 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[3] [19]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4939 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[3] [1]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4938 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[3] [20]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4937 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[3] [21]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4936 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[3] [22]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4935 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[3] [23]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4934 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[3] [24]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4933 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[3] [25]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4932 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[3] [26]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4931 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[3] [27]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4930 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[3] [28]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4929 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[3] [29]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4928 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[3] [2]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4927 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[3] [30]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4926 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[3] [31]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4925 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[3] [3]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4924 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[3] [4]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4923 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[3] [5]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4922 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[3] [6]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4921 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[3] [7]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4920 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[3] [8]).
Adding EN signal on $abc$4918$auto$blifparse.cc:362:parse_blif$4919 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[3] [9]).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.227. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.228. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 130 unused cells and 130 unused wires.
<suppressed ~131 debug messages>

3.229. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 3

3.230. Executing ABC pass (technology mapping using ABC).

3.230.1. Summary of detected clock domains:
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }
  346 cells in clk=\HCLK, en={ }, arst={ }, srst={ }

  #logic partitions = 2

3.230.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 346 gates and 385 wires to a netlist network with 39 inputs and 200 outputs.

3.230.2.1. Executing ABC.

3.230.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.230.3.1. Executing ABC.

3.231. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.232. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.233. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 714 unused wires.
<suppressed ~1 debug messages>

3.234. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.235. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.236. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.237. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6048 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[0] [0]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6047 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[0] [10]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6046 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[0] [11]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6045 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[0] [12]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6044 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[0] [13]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6043 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[0] [14]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6042 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[0] [15]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6041 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[0] [16]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6040 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[0] [17]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6039 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[0] [18]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6038 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[0] [19]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6037 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[0] [1]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6036 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[0] [20]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6035 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[0] [21]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6034 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[0] [22]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6033 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[0] [23]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6032 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[0] [24]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6031 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[0] [25]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6030 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[0] [26]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6029 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[0] [27]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6028 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[0] [28]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6027 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[0] [29]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6026 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[0] [2]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6025 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[0] [30]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6024 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[0] [31]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6023 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[0] [3]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6022 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[0] [4]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6021 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[0] [5]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6020 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[0] [6]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6019 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[0] [7]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6018 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[0] [8]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6017 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[0] [9]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6016 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[1] [0]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6015 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[1] [10]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6014 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[1] [11]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6013 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[1] [12]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6012 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[1] [13]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6011 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[1] [14]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6010 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[1] [15]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6009 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[1] [16]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6008 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[1] [17]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6007 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[1] [18]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6006 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[1] [19]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6005 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[1] [1]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6004 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[1] [20]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6003 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[1] [21]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6002 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[1] [22]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6001 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[1] [23]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$6000 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[1] [24]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5999 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[1] [25]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5998 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[1] [26]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5997 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[1] [27]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5996 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[1] [28]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5995 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[1] [29]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5994 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[1] [2]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5993 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[1] [30]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5992 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[1] [31]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5991 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[1] [3]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5990 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[1] [4]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5989 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[1] [5]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5988 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[1] [6]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5987 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[1] [7]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5986 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[1] [8]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5985 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[1] [9]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5984 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[2] [0]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5983 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[2] [10]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5982 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[2] [11]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5981 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[2] [12]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5980 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[2] [13]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5979 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[2] [14]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5978 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[2] [15]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5977 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[2] [16]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5976 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[2] [17]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5975 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[2] [18]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5974 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[2] [19]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5973 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[2] [1]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5972 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[2] [20]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5971 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[2] [21]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5970 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[2] [22]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5969 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[2] [23]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5968 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[2] [24]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5967 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[2] [25]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5966 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[2] [26]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5965 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[2] [27]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5964 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[2] [28]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5963 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[2] [29]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5962 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[2] [2]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5961 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[2] [30]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5960 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[2] [31]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5959 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[2] [3]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5958 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[2] [4]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5957 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[2] [5]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5956 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[2] [6]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5955 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[2] [7]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5954 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[2] [8]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5953 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[2] [9]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5952 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[3] [0]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5951 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[3] [10]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5950 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[3] [11]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5949 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[3] [12]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5948 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[3] [13]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5947 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[3] [14]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5946 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[3] [15]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5945 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[3] [16]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5944 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[3] [17]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5943 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[3] [18]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5942 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[3] [19]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5941 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[3] [1]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5940 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[3] [20]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5939 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[3] [21]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5938 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[3] [22]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5937 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[3] [23]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5936 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[3] [24]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5935 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[3] [25]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5934 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[3] [26]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5933 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[3] [27]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5932 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[3] [28]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5931 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[3] [29]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5930 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[3] [2]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5929 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[3] [30]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5928 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[3] [31]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5927 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[3] [3]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5926 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[3] [4]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5925 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[3] [5]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5924 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[3] [6]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5923 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[3] [7]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5922 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[3] [8]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5921 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[3] [9]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5920 ($_DFF_P_) from module ahb2ram (D = \HADDR [2], Q = \waddr [0]).
Adding EN signal on $abc$5918$auto$blifparse.cc:362:parse_blif$5919 ($_DFF_P_) from module ahb2ram (D = \HADDR [3], Q = \waddr [1]).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.238. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.239. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 130 unused cells and 130 unused wires.
<suppressed ~131 debug messages>

3.240. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

ABC-DFF iteration : 4

3.241. Executing ABC pass (technology mapping using ABC).

3.241.1. Summary of detected clock domains:
  97 cells in clk=\HCLK, en={ }, arst=!\HRESETn, srst={ }
  346 cells in clk=\HCLK, en={ }, arst={ }, srst={ }

  #logic partitions = 2

3.241.2. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK
Extracted 346 gates and 385 wires to a netlist network with 39 inputs and 200 outputs.

3.241.2.1. Executing ABC.

3.241.3. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Found matching posedge clock domain: \HCLK, asynchronously reset by !\HRESETn
Extracted 97 gates and 164 wires to a netlist network with 67 inputs and 32 outputs.

3.241.3.1. Executing ABC.

3.242. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.243. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.244. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 714 unused wires.
<suppressed ~1 debug messages>

3.245. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.246. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.247. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.248. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7048 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[0] [0]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7047 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[0] [10]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7046 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[0] [11]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7045 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[0] [12]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7044 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[0] [13]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7043 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[0] [14]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7042 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[0] [15]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7041 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[0] [16]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7040 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[0] [17]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7039 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[0] [18]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7038 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[0] [19]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7037 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[0] [1]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7036 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[0] [20]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7035 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[0] [21]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7034 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[0] [22]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7033 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[0] [23]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7032 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[0] [24]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7031 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[0] [25]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7030 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[0] [26]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7029 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[0] [27]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7028 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[0] [28]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7027 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[0] [29]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7026 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[0] [2]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7025 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[0] [30]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7024 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[0] [31]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7023 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[0] [3]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7022 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[0] [4]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7021 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[0] [5]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7020 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[0] [6]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7019 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[0] [7]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7018 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[0] [8]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7017 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[0] [9]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7016 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[1] [0]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7015 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[1] [10]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7014 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[1] [11]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7013 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[1] [12]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7012 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[1] [13]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7011 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[1] [14]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7010 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[1] [15]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7009 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[1] [16]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7008 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[1] [17]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7007 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[1] [18]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7006 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[1] [19]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7005 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[1] [1]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7004 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[1] [20]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7003 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[1] [21]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7002 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[1] [22]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7001 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[1] [23]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$7000 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[1] [24]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6999 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[1] [25]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6998 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[1] [26]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6997 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[1] [27]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6996 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[1] [28]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6995 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[1] [29]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6994 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[1] [2]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6993 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[1] [30]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6992 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[1] [31]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6991 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[1] [3]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6990 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[1] [4]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6989 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[1] [5]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6988 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[1] [6]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6987 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[1] [7]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6986 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[1] [8]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6985 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[1] [9]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6984 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[2] [0]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6983 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[2] [10]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6982 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[2] [11]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6981 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[2] [12]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6980 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[2] [13]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6979 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[2] [14]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6978 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[2] [15]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6977 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[2] [16]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6976 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[2] [17]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6975 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[2] [18]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6974 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[2] [19]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6973 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[2] [1]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6972 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[2] [20]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6971 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[2] [21]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6970 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[2] [22]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6969 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[2] [23]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6968 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[2] [24]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6967 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[2] [25]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6966 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[2] [26]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6965 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[2] [27]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6964 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[2] [28]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6963 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[2] [29]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6962 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[2] [2]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6961 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[2] [30]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6960 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[2] [31]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6959 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[2] [3]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6958 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[2] [4]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6957 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[2] [5]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6956 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[2] [6]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6955 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[2] [7]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6954 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[2] [8]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6953 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[2] [9]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6952 ($_DFF_P_) from module ahb2ram (D = \HWDATA [0], Q = \U_mem.memory[3] [0]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6951 ($_DFF_P_) from module ahb2ram (D = \HWDATA [10], Q = \U_mem.memory[3] [10]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6950 ($_DFF_P_) from module ahb2ram (D = \HWDATA [11], Q = \U_mem.memory[3] [11]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6949 ($_DFF_P_) from module ahb2ram (D = \HWDATA [12], Q = \U_mem.memory[3] [12]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6948 ($_DFF_P_) from module ahb2ram (D = \HWDATA [13], Q = \U_mem.memory[3] [13]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6947 ($_DFF_P_) from module ahb2ram (D = \HWDATA [14], Q = \U_mem.memory[3] [14]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6946 ($_DFF_P_) from module ahb2ram (D = \HWDATA [15], Q = \U_mem.memory[3] [15]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6945 ($_DFF_P_) from module ahb2ram (D = \HWDATA [16], Q = \U_mem.memory[3] [16]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6944 ($_DFF_P_) from module ahb2ram (D = \HWDATA [17], Q = \U_mem.memory[3] [17]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6943 ($_DFF_P_) from module ahb2ram (D = \HWDATA [18], Q = \U_mem.memory[3] [18]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6942 ($_DFF_P_) from module ahb2ram (D = \HWDATA [19], Q = \U_mem.memory[3] [19]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6941 ($_DFF_P_) from module ahb2ram (D = \HWDATA [1], Q = \U_mem.memory[3] [1]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6940 ($_DFF_P_) from module ahb2ram (D = \HWDATA [20], Q = \U_mem.memory[3] [20]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6939 ($_DFF_P_) from module ahb2ram (D = \HWDATA [21], Q = \U_mem.memory[3] [21]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6938 ($_DFF_P_) from module ahb2ram (D = \HWDATA [22], Q = \U_mem.memory[3] [22]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6937 ($_DFF_P_) from module ahb2ram (D = \HWDATA [23], Q = \U_mem.memory[3] [23]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6936 ($_DFF_P_) from module ahb2ram (D = \HWDATA [24], Q = \U_mem.memory[3] [24]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6935 ($_DFF_P_) from module ahb2ram (D = \HWDATA [25], Q = \U_mem.memory[3] [25]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6934 ($_DFF_P_) from module ahb2ram (D = \HWDATA [26], Q = \U_mem.memory[3] [26]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6933 ($_DFF_P_) from module ahb2ram (D = \HWDATA [27], Q = \U_mem.memory[3] [27]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6932 ($_DFF_P_) from module ahb2ram (D = \HWDATA [28], Q = \U_mem.memory[3] [28]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6931 ($_DFF_P_) from module ahb2ram (D = \HWDATA [29], Q = \U_mem.memory[3] [29]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6930 ($_DFF_P_) from module ahb2ram (D = \HWDATA [2], Q = \U_mem.memory[3] [2]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6929 ($_DFF_P_) from module ahb2ram (D = \HWDATA [30], Q = \U_mem.memory[3] [30]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6928 ($_DFF_P_) from module ahb2ram (D = \HWDATA [31], Q = \U_mem.memory[3] [31]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6927 ($_DFF_P_) from module ahb2ram (D = \HWDATA [3], Q = \U_mem.memory[3] [3]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6926 ($_DFF_P_) from module ahb2ram (D = \HWDATA [4], Q = \U_mem.memory[3] [4]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6925 ($_DFF_P_) from module ahb2ram (D = \HWDATA [5], Q = \U_mem.memory[3] [5]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6924 ($_DFF_P_) from module ahb2ram (D = \HWDATA [6], Q = \U_mem.memory[3] [6]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6923 ($_DFF_P_) from module ahb2ram (D = \HWDATA [7], Q = \U_mem.memory[3] [7]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6922 ($_DFF_P_) from module ahb2ram (D = \HWDATA [8], Q = \U_mem.memory[3] [8]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6921 ($_DFF_P_) from module ahb2ram (D = \HWDATA [9], Q = \U_mem.memory[3] [9]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6920 ($_DFF_P_) from module ahb2ram (D = \HADDR [2], Q = \waddr [0]).
Adding EN signal on $abc$6918$auto$blifparse.cc:362:parse_blif$6919 ($_DFF_P_) from module ahb2ram (D = \HADDR [3], Q = \waddr [1]).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.249. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.250. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 130 unused cells and 130 unused wires.
<suppressed ~131 debug messages>

3.251. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

3.252. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.
select CE preserving strategy (tresh=0.920000)

3.253. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.254. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.255. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.256. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.257. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.258. Executing OPT_SHARE pass.

3.259. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.260. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.261. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.262. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.263. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.264. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.265. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.266. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.267. Executing OPT_SHARE pass.

3.268. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.269. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.270. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.271. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.272. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.273. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.274. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.275. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.276. Executing OPT_SHARE pass.

3.277. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.278. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=35, #remove=0, time=0.02 sec.]

3.279. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.280. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.281. Executing BMUXMAP pass.

3.282. Executing DEMUXMAP pass.

3.283. Executing ABC pass (technology mapping using ABC).

3.283.1. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Extracted 148 gates and 288 wires to a netlist network with 140 inputs and 39 outputs.

3.283.1.1. Executing ABC.
DE:   #PIs = 140  #Luts =    76  Max Lvl =   3  Avg Lvl =   2.64  [   0.10 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 140  #Luts =    76  Max Lvl =   3  Avg Lvl =   2.64  [   0.35 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.20 sec. at Pass 2]{map}[6]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.19 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.24 sec. at Pass 4]{map}[16]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.17 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.00 sec. at Pass 6]{pushMap}[0]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.00 sec. at Pass 7]{finalMap}[0]

3.284. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.285. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.286. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.287. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.288. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.289. Executing OPT_SHARE pass.

3.290. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.291. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 287 unused wires.
<suppressed ~2 debug messages>

3.292. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.293. Executing OPT_FFINV pass (push inverters through FFs).
Discovering LUTs.
Pushed 0 inverters.

3.294. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.295. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.296. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.297. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.298. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.299. Executing OPT_SHARE pass.

3.300. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.301. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.302. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.303. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.304. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.305. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.306. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.307. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.308. Executing OPT_SHARE pass.

3.309. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=0, #remove=0, time=0.00 sec.]

3.310. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=165, #solve=35, #remove=0, time=0.03 sec.]

3.311. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.312. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.313. Printing statistics.

=== ahb2ram ===

   Number of wires:                126
   Number of wire bits:            885
   Number of public wires:          52
   Number of public wire bits:     811
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     $_DFFE_PN_                    128
     $_DFFE_PP_                      2
     $_DFF_PN0_                     32
     $_DFF_P_                        3
     $lut                           74

3.314. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.315. Executing RS_DFFSR_CONV pass.

3.316. Printing statistics.

=== ahb2ram ===

   Number of wires:                126
   Number of wire bits:            885
   Number of public wires:          52
   Number of public wire bits:     811
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     $_DFFE_PP0N_                  128
     $_DFFE_PP0P_                    2
     $_DFF_PN0_                     32
     $_DFF_P_                        3
     $lut                           74

3.317. Executing TECHMAP pass (map to technology primitives).

3.317.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.317.2. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/ffs_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$__SHREG_DFF_P_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Successfully finished Verilog frontend.

3.317.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $logic_not.
No more expansions possible.
<suppressed ~617 debug messages>

3.318. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~1777 debug messages>

3.319. Executing SIMPLEMAP pass (map simple cells to gate primitives).

3.320. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.321. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

3.322. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.323. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 1282 unused wires.
<suppressed ~1 debug messages>

3.324. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.
<suppressed ~2 debug messages>

3.325. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.326. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.327. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.328. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.329. Executing OPT_SHARE pass.

3.330. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.331. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..

3.332. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.333. Executing TECHMAP pass (map to technology primitives).

3.333.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.333.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~71 debug messages>

3.334. Executing ABC pass (technology mapping using ABC).

3.334.1. Extracting gate netlist of module `\ahb2ram' to `<abc-temp-dir>/input.blif'..
Extracted 181 gates and 323 wires to a netlist network with 140 inputs and 39 outputs.

3.334.1.1. Executing ABC.
DE:   #PIs = 140  #Luts =    74  Max Lvl =   3  Avg Lvl =   2.64  [   0.08 sec. at Pass 0]{firstMap}[1]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.33 sec. at Pass 1]{initMapFlow}[2]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.20 sec. at Pass 2]{map}[6]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.24 sec. at Pass 3]{postMap}[12]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.31 sec. at Pass 4]{map}[16]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.25 sec. at Pass 5]{postMap}[16]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.00 sec. at Pass 6]{pushMap}[0]
DE:   #PIs = 140  #Luts =    74  Max Lvl =   2  Avg Lvl =   1.82  [   0.00 sec. at Pass 7]{finalMap}[0]

3.335. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

3.336. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.337. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ahb2ram..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

3.338. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ahb2ram.
Performed a total of 0 changes.

3.339. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ahb2ram'.
Removed a total of 0 cells.

3.340. Executing OPT_SHARE pass.

3.341. Executing OPT_DFF pass (perform DFF optimizations).
[#visit=0, #solve=0, #remove=0, time=0.00 sec.]

3.342. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 311 unused wires.
<suppressed ~1 debug messages>

3.343. Executing OPT_EXPR pass (perform const folding).
Optimizing module ahb2ram.

RUN-OPT ITERATIONS DONE : 1

3.344. Executing HIERARCHY pass (managing design hierarchy).

3.344.1. Analyzing design hierarchy..
Top module:  \ahb2ram

3.344.2. Analyzing design hierarchy..
Top module:  \ahb2ram
Removed 0 unused modules.

3.345. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ahb2ram..
Removed 0 unused cells and 29 unused wires.
<suppressed ~29 debug messages>

3.346. Printing statistics.

=== ahb2ram ===

   Number of wires:                 97
   Number of wire bits:            397
   Number of public wires:          23
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     $lut                           74
     DFFRE                         165

3.347. Executing TECHMAP pass (map to technology primitives).

3.347.1. Executing Verilog-2005 frontend: /nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/TECHMAP/lut_map.v
Parsing Verilog input from `/nfs_eda_sw/softwares/Raptor/instl_dir/09_29_2023_09_15_02/bin/../share/yosys/rapidsilicon/genesis3/RS_PRIMITIVES/TECHMAP/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.347.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~233 debug messages>

3.348. Printing statistics.

=== ahb2ram ===

   Number of wires:                245
   Number of wire bits:            895
   Number of public wires:          23
   Number of public wire bits:     323
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                239
     DFFRE                         165
     LUT2                            1
     LUT3                            4
     LUT4                            2
     LUT6                           67

   Number of LUTs:                  74
   Number of REGs:                 165

4. Executing Verilog backend.
Dumping module `\ahb2ram'.

5. Executing BLIF backend.

Warnings: 64 unique messages, 64 total
End of script. Logfile hash: 1c4abcbf65, CPU: user 4.11s system 0.22s, MEM: 61.63 MB peak
Yosys 0.18+10 (git sha1 611c05348, gcc 11.2.1 -fPIC -Os)
Time spent: 83% 10x abc (19 sec), 6% 2x read_systemverilog (1 sec), ...
